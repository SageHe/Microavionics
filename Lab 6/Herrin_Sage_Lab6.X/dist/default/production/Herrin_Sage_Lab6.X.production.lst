

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Dec 01 16:45:02 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71  0000                     
    72                           ; Version 2.05
    73                           ; Generated 20/12/2018 GMT
    74                           ; 
    75                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F87K22 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  003E7C                     __pidataCOMRAM:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for _binnum
   112  003E7C  3000               	dw	12288
   113                           
   114                           ;initializer for _inc
   115  003E7E  01                 	db	1
   116                           
   117                           	psect	idataBANK0
   118  003E7F                     __pidataBANK0:
   119                           	opt callstack 0
   120                           
   121                           ;initializer for _LM35channel
   122  003E7F  0003               	dw	3
   123                           
   124                           	psect	idataBANK1
   125  003E6C                     __pidataBANK1:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _vscalefactor
   129  003E6C  32ED               	dw	13037
   130  003E6E  3A53               	dw	14931
   131                           
   132                           ;initializer for _Cscalefactor
   133  003E70  FFC9               	dw	65481
   134  003E72  3DA4               	dw	15780
   135                           
   136                           ;initializer for _ccp1count
   137  003E74  1A80               	dw	6784
   138  003E76  0006               	dw	6
   139                           
   140                           	psect	smallconst
   141  001000                     __psmallconst:
   142                           	opt callstack 0
   143  001000  00                 	db	0
   144  001001                     _LCDRow1:
   145                           	opt callstack 0
   146  001001  80                 	db	128
   147  001002  54                 	db	84
   148  001003  45                 	db	69
   149  001004  53                 	db	83
   150  001005  54                 	db	84
   151  001006  49                 	db	73
   152  001007  4E                 	db	78
   153  001008  47                 	db	71
   154  001009  21                 	db	33
   155  00100A  00                 	db	0
   156  00100B                     __end_of_LCDRow1:
   157                           	opt callstack 0
   158  00100B                     _LCDInitStr_:
   159                           	opt callstack 0
   160  00100B  33                 	db	51
   161  00100C  32                 	db	50
   162  00100D  28                 	db	40
   163  00100E  0C                 	db	12
   164  00100F  01                 	db	1
   165  001010  06                 	db	6
   166  001011  00                 	db	0
   167  001012                     __end_of_LCDInitStr_:
   168                           	opt callstack 0
   169  0000                     _ANCON2	set	3875
   170  0000                     _ANCON1	set	3876
   171  0000                     _ANCON0bits	set	3877
   172  0000                     _ANCON0	set	3877
   173  0000                     _ADRES	set	4035
   174  0000                     _TMR1	set	4046
   175  0000                     _RCREG1	set	4014
   176  0000                     _TXREG1	set	4013
   177  0000                     _SSP1BUF	set	4041
   178  0000                     _LATEbits	set	3981
   179  0000                     _WREG	set	4072
   180  0000                     _T1CONbits	set	4045
   181  0000                     _SSP1STATbits	set	4039
   182  0000                     _SSP1STAT	set	4039
   183  0000                     _SSP1CON1	set	4038
   184  0000                     _BAUDCON1bits	set	3941
   185  0000                     _RCSTA1bits	set	4011
   186  0000                     _SPBRG	set	4015
   187  0000                     _TXSTA1bits	set	4012
   188  0000                     _LATDbits	set	3980
   189  0000                     _T0CONbits	set	4053
   190  0000                     _INTCONbits	set	4082
   191  0000                     _INTCON2bits	set	4081
   192  0000                     _RCONbits	set	4048
   193  0000                     _T1CON	set	4045
   194  0000                     _TMR0H	set	4055
   195  0000                     _TMR0L	set	4054
   196  0000                     _T0CON	set	4053
   197  0000                     _IPR1bits	set	3999
   198  0000                     _PIE1bits	set	3997
   199  0000                     _PIR1bits	set	3998
   200  0000                     _ADCON2	set	4032
   201  0000                     _ADCON2bits	set	4032
   202  0000                     _ADCON0	set	4034
   203  0000                     _ADCON1	set	4033
   204  0000                     _TRISB	set	3987
   205  0000                     _TRISBbits	set	3987
   206  0000                     _TRISEbits	set	3990
   207  0000                     _TRISA	set	3986
   208  0000                     _LATC	set	3979
   209  0000                     _TRISC	set	3988
   210  0000                     _LATD	set	3980
   211  0000                     _TRISD	set	3989
   212  0000                     _BSR	set	4064
   213  0000                     _ADCON0bits	set	4034
   214  0000                     _PORTB	set	3969
   215  0000                     _LATB	set	3978
   216  0000                     _LATBbits	set	3978
   217  001012                     STR_1:
   218  001012  20                 	db	32
   219  001013  54                 	db	84	;'T'
   220  001014  3D                 	db	61	;'='
   221  001015  25                 	db	37
   222  001016  30                 	db	48	;'0'
   223  001017  2E                 	db	46
   224  001018  31                 	db	49	;'1'
   225  001019  66                 	db	102	;'f'
   226  00101A  43                 	db	67	;'C'
   227  00101B  20                 	db	32
   228  00101C  00                 	db	0
   229  00101D                     STR_2:
   230  00101D  20                 	db	32
   231  00101E  50                 	db	80	;'P'
   232  00101F  54                 	db	84	;'T'
   233  001020  3D                 	db	61	;'='
   234  001021  25                 	db	37
   235  001022  30                 	db	48	;'0'
   236  001023  2E                 	db	46
   237  001024  32                 	db	50	;'2'
   238  001025  66                 	db	102	;'f'
   239  001026  56                 	db	86	;'V'
   240  001027  00                 	db	0
   241  001028                     STR_6:
   242  001028  43                 	db	67	;'C'
   243  001029  4F                 	db	79	;'O'
   244  00102A  4E                 	db	78	;'N'
   245  00102B  54                 	db	84	;'T'
   246  00102C  5F                 	db	95	;'_'
   247  00102D  4F                 	db	79	;'O'
   248  00102E  46                 	db	70	;'F'
   249  00102F  46                 	db	70	;'F'
   250  001030  00                 	db	0
   251  001031                     STR_5:
   252  001031  43                 	db	67	;'C'
   253  001032  4F                 	db	79	;'O'
   254  001033  4E                 	db	78	;'N'
   255  001034  54                 	db	84	;'T'
   256  001035  5F                 	db	95	;'_'
   257  001036  4F                 	db	79	;'O'
   258  001037  4E                 	db	78	;'N'
   259  001038  00                 	db	0
   260  001039                     STR_3:
   261  001039  54                 	db	84	;'T'
   262  00103A  45                 	db	69	;'E'
   263  00103B  4D                 	db	77	;'M'
   264  00103C  50                 	db	80	;'P'
   265  00103D  00                 	db	0
   266  00103E                     STR_7:
   267  00103E  49                 	db	73	;'I'
   268  00103F  4E                 	db	78	;'N'
   269  001040  46                 	db	70	;'F'
   270  001041  00                 	db	0
   271  001042                     STR_11:
   272  001042  4E                 	db	78	;'N'
   273  001043  41                 	db	65	;'A'
   274  001044  4E                 	db	78	;'N'
   275  001045  00                 	db	0
   276  001046                     STR_8:
   277  001046  69                 	db	105	;'i'
   278  001047  6E                 	db	110	;'n'
   279  001048  66                 	db	102	;'f'
   280  001049  00                 	db	0
   281  00104A                     STR_12:
   282  00104A  6E                 	db	110	;'n'
   283  00104B  61                 	db	97	;'a'
   284  00104C  6E                 	db	110	;'n'
   285  00104D  00                 	db	0
   286  00104E                     STR_4:
   287  00104E  50                 	db	80	;'P'
   288  00104F  4F                 	db	79	;'O'
   289  001050  54                 	db	84	;'T'
   290  001051  00                 	db	0
   291  001052                     STR_15:
   292  001052  6C                 	db	108	;'l'
   293  001053  66                 	db	102	;'f'
   294  001054  00                 	db	0
   295  0000                     
   296                           ; #config settings
   297  001055  00                 	db	0	; dummy byte at the end
   298  0000                     
   299                           	psect	cinit
   300  003664                     __pcinit:
   301                           	opt callstack 0
   302  003664                     start_initialization:
   303                           	opt callstack 0
   304  003664                     __initialization:
   305                           	opt callstack 0
   306                           
   307                           ; Initialize objects allocated to BANK1 (12 bytes)
   308                           ; load TBLPTR registers with __pidataBANK1
   309  003664  0E6C               	movlw	low __pidataBANK1
   310  003666  6EF6               	movwf	tblptrl,c
   311  003668  0E3E               	movlw	high __pidataBANK1
   312  00366A  6EF7               	movwf	tblptrh,c
   313  00366C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   314  00366E  6EF8               	movwf	tblptru,c
   315  003670  EE01  F0A2         	lfsr	0,__pdataBANK1
   316  003674  EE10 F00C          	lfsr	1,12
   317  003678                     copy_data0:
   318  003678  0009               	tblrd		*+
   319  00367A  CFF5 FFEE          	movff	tablat,postinc0
   320  00367E  50E5               	movf	postdec1,w,c
   321  003680  50E1               	movf	fsr1l,w,c
   322  003682  E1FA               	bnz	copy_data0
   323                           
   324                           ; Initialize objects allocated to BANK0 (2 bytes)
   325                           ; load TBLPTR registers with __pidataBANK0
   326  003684  0E7F               	movlw	low __pidataBANK0
   327  003686  6EF6               	movwf	tblptrl,c
   328  003688  0E3E               	movlw	high __pidataBANK0
   329  00368A  6EF7               	movwf	tblptrh,c
   330  00368C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   331  00368E  6EF8               	movwf	tblptru,c
   332  003690  0009               	tblrd		*+	;fetch initializer
   333  003692  CFF5 F0FC          	movff	tablat,__pdataBANK0
   334  003696  0009               	tblrd		*+	;fetch initializer
   335  003698  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   336                           
   337                           ; Initialize objects allocated to COMRAM (3 bytes)
   338                           ; load TBLPTR registers with __pidataCOMRAM
   339  00369C  0E7C               	movlw	low __pidataCOMRAM
   340  00369E  6EF6               	movwf	tblptrl,c
   341  0036A0  0E3E               	movlw	high __pidataCOMRAM
   342  0036A2  6EF7               	movwf	tblptrh,c
   343  0036A4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   344  0036A6  6EF8               	movwf	tblptru,c
   345  0036A8  0009               	tblrd		*+	;fetch initializer
   346  0036AA  CFF5 F049          	movff	tablat,__pdataCOMRAM
   347  0036AE  0009               	tblrd		*+	;fetch initializer
   348  0036B0  CFF5 F04A          	movff	tablat,__pdataCOMRAM+1
   349  0036B4  0009               	tblrd		*+	;fetch initializer
   350  0036B6  CFF5 F04B          	movff	tablat,__pdataCOMRAM+2
   351                           
   352                           ; Clear objects allocated to BANK1 (144 bytes)
   353  0036BA  EE01  F000         	lfsr	0,__pbssBANK1
   354  0036BE  0E90               	movlw	144
   355  0036C0                     clear_0:
   356  0036C0  6AEE               	clrf	postinc0,c
   357  0036C2  06E8               	decf	wreg,f,c
   358  0036C4  E1FD               	bnz	clear_0
   359                           
   360                           ; Clear objects allocated to BANK0 (44 bytes)
   361  0036C6  EE00  F0D0         	lfsr	0,__pbssBANK0
   362  0036CA  0E2C               	movlw	44
   363  0036CC                     clear_1:
   364  0036CC  6AEE               	clrf	postinc0,c
   365  0036CE  06E8               	decf	wreg,f,c
   366  0036D0  E1FD               	bnz	clear_1
   367                           
   368                           ; Clear objects allocated to COMRAM (15 bytes)
   369  0036D2  EE00  F03A         	lfsr	0,__pbssCOMRAM
   370  0036D6  0E0F               	movlw	15
   371  0036D8                     clear_2:
   372  0036D8  6AEE               	clrf	postinc0,c
   373  0036DA  06E8               	decf	wreg,f,c
   374  0036DC  E1FD               	bnz	clear_2
   375  0036DE                     end_of_initialization:
   376                           	opt callstack 0
   377  0036DE                     __end_of__initialization:
   378                           	opt callstack 0
   379  0036DE  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   380  0036E0  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   381  0036E2  0100               	movlb	0
   382  0036E4  EF18  F01D         	goto	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMRAM
   385  00003A                     __pbssCOMRAM:
   386                           	opt callstack 0
   387  00003A                     _prec:
   388                           	opt callstack 0
   389  00003A                     	ds	2
   390  00003C                     _flags:
   391                           	opt callstack 0
   392  00003C                     	ds	2
   393  00003E                     _tcount:
   394                           	opt callstack 0
   395  00003E                     	ds	2
   396  000040                     _LEDcount:
   397                           	opt callstack 0
   398  000040                     	ds	2
   399  000042                     _ONcount:
   400                           	opt callstack 0
   401  000042                     	ds	2
   402  000044                     _samplecount:
   403                           	opt callstack 0
   404  000044                     	ds	2
   405  000046                     _dec:
   406                           	opt callstack 0
   407  000046                     	ds	1
   408  000047                     _garbage:
   409                           	opt callstack 0
   410  000047                     	ds	1
   411  000048                     _throwout:
   412                           	opt callstack 0
   413  000048                     	ds	1
   414                           
   415                           	psect	dataCOMRAM
   416  000049                     __pdataCOMRAM:
   417                           	opt callstack 0
   418  000049                     _binnum:
   419                           	opt callstack 0
   420  000049                     	ds	2
   421  00004B                     _inc:
   422                           	opt callstack 0
   423  00004B                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0000D0                     __pbssBANK0:
   427                           	opt callstack 0
   428  0000D0                     ___fpclassifyf@F463:
   429                           	opt callstack 0
   430  0000D0                     	ds	4
   431  0000D4                     _Potential:
   432                           	opt callstack 0
   433  0000D4                     	ds	4
   434  0000D8                     _Temp:
   435                           	opt callstack 0
   436  0000D8                     	ds	4
   437  0000DC                     _nout:
   438                           	opt callstack 0
   439  0000DC                     	ds	2
   440  0000DE                     _width:
   441                           	opt callstack 0
   442  0000DE                     	ds	2
   443  0000E0                     _transmittime:
   444                           	opt callstack 0
   445  0000E0                     	ds	2
   446  0000E2                     _continuousMode:
   447                           	opt callstack 0
   448  0000E2                     	ds	2
   449  0000E4                     _commandready:
   450                           	opt callstack 0
   451  0000E4                     	ds	2
   452  0000E6                     _bcount:
   453                           	opt callstack 0
   454  0000E6                     	ds	2
   455  0000E8                     _done:
   456                           	opt callstack 0
   457  0000E8                     	ds	2
   458  0000EA                     _wregtemp:
   459                           	opt callstack 0
   460  0000EA                     	ds	2
   461  0000EC                     _P2result:
   462                           	opt callstack 0
   463  0000EC                     	ds	2
   464  0000EE                     _OFFcount:
   465                           	opt callstack 0
   466  0000EE                     	ds	2
   467  0000F0                     _LM35result:
   468                           	opt callstack 0
   469  0000F0                     	ds	2
   470  0000F2                     _ADresult:
   471                           	opt callstack 0
   472  0000F2                     	ds	2
   473  0000F4                     _P2channel:
   474                           	opt callstack 0
   475  0000F4                     	ds	2
   476  0000F6                     _CCPR1X:
   477                           	opt callstack 0
   478  0000F6                     	ds	2
   479  0000F8                     _TMR1X:
   480                           	opt callstack 0
   481  0000F8                     	ds	2
   482  0000FA                     _Alive_count:
   483                           	opt callstack 0
   484  0000FA                     	ds	2
   485                           
   486                           	psect	dataBANK0
   487  0000FC                     __pdataBANK0:
   488                           	opt callstack 0
   489  0000FC                     _LM35channel:
   490                           	opt callstack 0
   491  0000FC                     	ds	2
   492                           
   493                           	psect	bssBANK1
   494  000100                     __pbssBANK1:
   495                           	opt callstack 0
   496  000100                     floorf@F524:
   497                           	opt callstack 0
   498  000100                     	ds	4
   499  000104                     _dbuf:
   500                           	opt callstack 0
   501  000104                     	ds	80
   502  000154                     _TBuffer:
   503                           	opt callstack 0
   504  000154                     	ds	20
   505  000168                     _RBuffer:
   506                           	opt callstack 0
   507  000168                     	ds	20
   508  00017C                     _voltage:
   509                           	opt callstack 0
   510  00017C                     	ds	10
   511  000186                     _temperature:
   512                           	opt callstack 0
   513  000186                     	ds	10
   514                           
   515                           	psect	dataBANK1
   516  0001A2                     __pdataBANK1:
   517                           	opt callstack 0
   518  0001A2                     _vscalefactor:
   519                           	opt callstack 0
   520  0001A2                     	ds	4
   521  0001A6                     _Cscalefactor:
   522                           	opt callstack 0
   523  0001A6                     	ds	4
   524  0001AA                     _ccp1count:
   525                           	opt callstack 0
   526  0001AA                     	ds	4
   527                           
   528                           	psect	cstackBANK1
   529  000190                     __pcstackBANK1:
   530                           	opt callstack 0
   531  000190                     ?_sprintf:
   532                           	opt callstack 0
   533  000190                     sprintf@s:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x0
   537  000190                     	ds	2
   538  000192                     sprintf@fmt:
   539                           	opt callstack 0
   540                           
   541                           ; 2 bytes @ 0x2
   542  000192                     	ds	8
   543  00019A                     sprintf@ap:
   544                           	opt callstack 0
   545                           
   546                           ; 2 bytes @ 0xA
   547  00019A                     	ds	2
   548  00019C                     sprintf@f:
   549                           	opt callstack 0
   550                           
   551                           ; 6 bytes @ 0xC
   552  00019C                     	ds	6
   553                           
   554                           	psect	cstackBANK0
   555  000060                     __pcstackBANK0:
   556                           	opt callstack 0
   557  000060                     ?___flsub:
   558                           	opt callstack 0
   559  000060                     ___flge@ff1:
   560                           	opt callstack 0
   561  000060                     ___flsub@b:
   562                           	opt callstack 0
   563  000060                     floorf@m:
   564                           	opt callstack 0
   565                           
   566                           ; 4 bytes @ 0x0
   567  000060                     	ds	4
   568  000064                     floorf@e:
   569                           	opt callstack 0
   570  000064                     ___flge@ff2:
   571                           	opt callstack 0
   572  000064                     ___flsub@a:
   573                           	opt callstack 0
   574                           
   575                           ; 4 bytes @ 0x4
   576  000064                     	ds	2
   577  000066                     floorf@u:
   578                           	opt callstack 0
   579                           
   580                           ; 4 bytes @ 0x6
   581  000066                     	ds	2
   582  000068                     ??___flge:
   583                           
   584                           ; 1 bytes @ 0x8
   585  000068                     	ds	4
   586  00006C                     ?_efgtoa:
   587                           	opt callstack 0
   588  00006C                     efgtoa@fp:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0xC
   592  00006C                     	ds	2
   593  00006E                     efgtoa@f:
   594                           	opt callstack 0
   595                           
   596                           ; 4 bytes @ 0xE
   597  00006E                     	ds	4
   598  000072                     efgtoa@c:
   599                           	opt callstack 0
   600                           
   601                           ; 1 bytes @ 0x12
   602  000072                     	ds	1
   603  000073                     ??_efgtoa:
   604                           
   605                           ; 1 bytes @ 0x13
   606  000073                     	ds	5
   607  000078                     efgtoa@ou:
   608                           	opt callstack 0
   609                           
   610                           ; 4 bytes @ 0x18
   611  000078                     	ds	4
   612  00007C                     _efgtoa$1475:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x1C
   616  00007C                     	ds	2
   617  00007E                     _efgtoa$1476:
   618                           	opt callstack 0
   619                           
   620                           ; 2 bytes @ 0x1E
   621  00007E                     	ds	2
   622  000080                     _efgtoa$1481:
   623                           	opt callstack 0
   624                           
   625                           ; 2 bytes @ 0x20
   626  000080                     	ds	2
   627  000082                     _efgtoa$1485:
   628                           	opt callstack 0
   629                           
   630                           ; 2 bytes @ 0x22
   631  000082                     	ds	2
   632  000084                     _efgtoa$1486:
   633                           	opt callstack 0
   634                           
   635                           ; 2 bytes @ 0x24
   636  000084                     	ds	2
   637  000086                     _efgtoa$1487:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x26
   641  000086                     	ds	2
   642  000088                     efgtoa@t:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x28
   646  000088                     	ds	2
   647  00008A                     efgtoa@pp:
   648                           	opt callstack 0
   649                           
   650                           ; 2 bytes @ 0x2A
   651  00008A                     	ds	2
   652  00008C                     efgtoa@m:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x2C
   656  00008C                     	ds	2
   657  00008E                     efgtoa@ne:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x2E
   661  00008E                     	ds	2
   662  000090                     efgtoa@d:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x30
   666  000090                     	ds	2
   667  000092                     efgtoa@sign:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x32
   671  000092                     	ds	2
   672  000094                     efgtoa@p:
   673                           	opt callstack 0
   674                           
   675                           ; 2 bytes @ 0x34
   676  000094                     	ds	2
   677  000096                     efgtoa@nmode:
   678                           	opt callstack 0
   679                           
   680                           ; 1 bytes @ 0x36
   681  000096                     	ds	1
   682  000097                     efgtoa@w:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x37
   686  000097                     	ds	2
   687  000099                     efgtoa@mode:
   688                           	opt callstack 0
   689                           
   690                           ; 1 bytes @ 0x39
   691  000099                     	ds	1
   692  00009A                     efgtoa@h:
   693                           	opt callstack 0
   694                           
   695                           ; 4 bytes @ 0x3A
   696  00009A                     	ds	4
   697  00009E                     efgtoa@l:
   698                           	opt callstack 0
   699                           
   700                           ; 4 bytes @ 0x3E
   701  00009E                     	ds	4
   702  0000A2                     efgtoa@i:
   703                           	opt callstack 0
   704                           
   705                           ; 2 bytes @ 0x42
   706  0000A2                     	ds	2
   707  0000A4                     efgtoa@g:
   708                           	opt callstack 0
   709                           
   710                           ; 4 bytes @ 0x44
   711  0000A4                     	ds	4
   712  0000A8                     efgtoa@e:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x48
   716  0000A8                     	ds	2
   717  0000AA                     efgtoa@n:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x4A
   721  0000AA                     	ds	2
   722  0000AC                     efgtoa@u:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x4C
   726  0000AC                     	ds	4
   727  0000B0                     ?_vfpfcnvrt:
   728                           	opt callstack 0
   729  0000B0                     vfpfcnvrt@fp:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x50
   733  0000B0                     	ds	2
   734  0000B2                     vfpfcnvrt@fmt:
   735                           	opt callstack 0
   736                           
   737                           ; 2 bytes @ 0x52
   738  0000B2                     	ds	2
   739  0000B4                     vfpfcnvrt@ap:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x54
   743  0000B4                     	ds	2
   744  0000B6                     ??_vfpfcnvrt:
   745                           
   746                           ; 1 bytes @ 0x56
   747  0000B6                     	ds	4
   748  0000BA                     vfpfcnvrt@done:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x5A
   752  0000BA                     	ds	2
   753  0000BC                     _vfpfcnvrt$1501:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x5C
   757  0000BC                     	ds	2
   758  0000BE                     _vfpfcnvrt$1505:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x5E
   762  0000BE                     	ds	2
   763  0000C0                     vfpfcnvrt@f:
   764                           	opt callstack 0
   765                           
   766                           ; 4 bytes @ 0x60
   767  0000C0                     	ds	4
   768  0000C4                     vfpfcnvrt@ct:
   769                           	opt callstack 0
   770                           
   771                           ; 3 bytes @ 0x64
   772  0000C4                     	ds	3
   773  0000C7                     vfpfcnvrt@c:
   774                           	opt callstack 0
   775                           
   776                           ; 1 bytes @ 0x67
   777  0000C7                     	ds	1
   778  0000C8                     ?_vfprintf:
   779                           	opt callstack 0
   780  0000C8                     vfprintf@fp:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0x68
   784  0000C8                     	ds	2
   785  0000CA                     vfprintf@fmt:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x6A
   789  0000CA                     	ds	2
   790  0000CC                     vfprintf@ap:
   791                           	opt callstack 0
   792                           
   793                           ; 2 bytes @ 0x6C
   794  0000CC                     	ds	2
   795  0000CE                     vfprintf@cfmt:
   796                           	opt callstack 0
   797                           
   798                           ; 2 bytes @ 0x6E
   799  0000CE                     	ds	2
   800                           
   801                           	psect	cstackCOMRAM
   802  000001                     __pcstackCOMRAM:
   803                           	opt callstack 0
   804  000001                     ??_LEDhandler:
   805  000001                     i1memset@dest:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x0
   809  000001                     	ds	1
   810  000002                     
   811                           ; 1 bytes @ 0x1
   812  000002                     	ds	1
   813  000003                     i1memset@c:
   814                           	opt callstack 0
   815                           
   816                           ; 2 bytes @ 0x2
   817  000003                     	ds	2
   818  000005                     i1memset@n:
   819                           	opt callstack 0
   820                           
   821                           ; 2 bytes @ 0x4
   822  000005                     	ds	2
   823  000007                     ??i1_memset:
   824                           
   825                           ; 1 bytes @ 0x6
   826  000007                     	ds	2
   827  000009                     i1memset@k:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0x8
   831  000009                     	ds	2
   832  00000B                     i1memset@s:
   833                           	opt callstack 0
   834                           
   835                           ; 2 bytes @ 0xA
   836  00000B                     	ds	2
   837  00000D                     
   838                           ; 1 bytes @ 0xC
   839  00000D                     	ds	1
   840  00000E                     ??_LoPriISR:
   841                           
   842                           ; 1 bytes @ 0xD
   843  00000E                     	ds	5
   844  000013                     ??_InitLCD:
   845  000013                     ?_strncmp:
   846                           	opt callstack 0
   847  000013                     ?_strlen:
   848                           	opt callstack 0
   849  000013                     ?___fpclassifyf:
   850                           	opt callstack 0
   851  000013                     ?_isupper:
   852                           	opt callstack 0
   853  000013                     ?_isdigit:
   854                           	opt callstack 0
   855  000013                     ?_isspace:
   856                           	opt callstack 0
   857  000013                     ?___wmul:
   858                           	opt callstack 0
   859  000013                     ?___awdiv:
   860                           	opt callstack 0
   861  000013                     ?___awmod:
   862                           	opt callstack 0
   863  000013                     ?___fladd:
   864                           	opt callstack 0
   865  000013                     ?___fldiv:
   866                           	opt callstack 0
   867  000013                     ?___flneg:
   868                           	opt callstack 0
   869  000013                     ?___fltol:
   870                           	opt callstack 0
   871  000013                     ?___xxtofl:
   872                           	opt callstack 0
   873  000013                     DisplayV@LCDStr:
   874                           	opt callstack 0
   875  000013                     ___wmul@multiplier:
   876                           	opt callstack 0
   877  000013                     ___awdiv@dividend:
   878                           	opt callstack 0
   879  000013                     ___awmod@dividend:
   880                           	opt callstack 0
   881  000013                     isdigit@c:
   882                           	opt callstack 0
   883  000013                     isspace@c:
   884                           	opt callstack 0
   885  000013                     isupper@c:
   886                           	opt callstack 0
   887  000013                     memset@dest:
   888                           	opt callstack 0
   889  000013                     fputc@c:
   890                           	opt callstack 0
   891  000013                     strcpy@dest:
   892                           	opt callstack 0
   893  000013                     strlen@s:
   894                           	opt callstack 0
   895  000013                     strncmp@_l:
   896                           	opt callstack 0
   897  000013                     ___fleq@ff1:
   898                           	opt callstack 0
   899  000013                     ___flneg@f1:
   900                           	opt callstack 0
   901  000013                     ___fltol@f1:
   902                           	opt callstack 0
   903  000013                     ___fladd@b:
   904                           	opt callstack 0
   905  000013                     ___fldiv@b:
   906                           	opt callstack 0
   907  000013                     ___xxtofl@val:
   908                           	opt callstack 0
   909  000013                     ___fpclassifyf@x:
   910                           	opt callstack 0
   911                           
   912                           ; 4 bytes @ 0x12
   913  000013                     	ds	1
   914  000014                     InitLCD@count:
   915                           	opt callstack 0
   916                           
   917                           ; 1 bytes @ 0x13
   918  000014                     	ds	1
   919  000015                     ??_isupper:
   920  000015                     ??_isdigit:
   921  000015                     ??_isspace:
   922  000015                     InitLCD@nibble:
   923                           	opt callstack 0
   924  000015                     DisplayV@nibble:
   925                           	opt callstack 0
   926  000015                     ___wmul@multiplicand:
   927                           	opt callstack 0
   928  000015                     ___awdiv@divisor:
   929                           	opt callstack 0
   930  000015                     ___awmod@divisor:
   931                           	opt callstack 0
   932  000015                     memset@c:
   933                           	opt callstack 0
   934  000015                     fputc@fp:
   935                           	opt callstack 0
   936  000015                     strcpy@src:
   937                           	opt callstack 0
   938  000015                     strlen@a:
   939                           	opt callstack 0
   940  000015                     strncmp@_r:
   941                           	opt callstack 0
   942                           
   943                           ; 2 bytes @ 0x14
   944  000015                     	ds	1
   945  000016                     DisplayV@count:
   946                           	opt callstack 0
   947                           
   948                           ; 1 bytes @ 0x15
   949  000016                     	ds	1
   950  000017                     ??_strcpy:
   951  000017                     ??_fputc:
   952  000017                     ??___fpclassifyf:
   953  000017                     ??___fltol:
   954  000017                     ??___xxtofl:
   955  000017                     ___awdiv@counter:
   956                           	opt callstack 0
   957  000017                     ___awmod@counter:
   958                           	opt callstack 0
   959  000017                     ___wmul@product:
   960                           	opt callstack 0
   961  000017                     memset@n:
   962                           	opt callstack 0
   963  000017                     strncmp@n:
   964                           	opt callstack 0
   965  000017                     ___fleq@ff2:
   966                           	opt callstack 0
   967  000017                     ___fladd@a:
   968                           	opt callstack 0
   969  000017                     ___fldiv@a:
   970                           	opt callstack 0
   971                           
   972                           ; 4 bytes @ 0x16
   973  000017                     	ds	1
   974  000018                     ___awdiv@sign:
   975                           	opt callstack 0
   976  000018                     ___awmod@sign:
   977                           	opt callstack 0
   978                           
   979                           ; 1 bytes @ 0x17
   980  000018                     	ds	1
   981  000019                     ??_memset:
   982  000019                     ??_strncmp:
   983  000019                     ?_tolower:
   984                           	opt callstack 0
   985  000019                     _isspace$2007:
   986                           	opt callstack 0
   987  000019                     ___awdiv@quotient:
   988                           	opt callstack 0
   989  000019                     strcpy@s:
   990                           	opt callstack 0
   991  000019                     tolower@c:
   992                           	opt callstack 0
   993                           
   994                           ; 2 bytes @ 0x18
   995  000019                     	ds	1
   996  00001A                     ?_atoi:
   997                           	opt callstack 0
   998  00001A                     atoi@s:
   999                           	opt callstack 0
  1000  00001A                     strncmp@l:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x19
  1004  00001A                     	ds	1
  1005  00001B                     ??_tolower:
  1006  00001B                     ??___fladd:
  1007  00001B                     ??___fldiv:
  1008  00001B                     ??___fleq:
  1009  00001B                     ___fltol@sign1:
  1010                           	opt callstack 0
  1011  00001B                     ___xxtofl@sign:
  1012                           	opt callstack 0
  1013  00001B                     ___fpclassifyf@e:
  1014                           	opt callstack 0
  1015  00001B                     memset@k:
  1016                           	opt callstack 0
  1017  00001B                     strcpy@d:
  1018                           	opt callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x1A
  1021  00001B                     	ds	1
  1022  00001C                     ??_atoi:
  1023  00001C                     ___fltol@exp1:
  1024                           	opt callstack 0
  1025  00001C                     ___xxtofl@exp:
  1026                           	opt callstack 0
  1027  00001C                     fputs@s:
  1028                           	opt callstack 0
  1029  00001C                     strncmp@r:
  1030                           	opt callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x1B
  1033  00001C                     	ds	1
  1034  00001D                     DisplayC@LCDStr:
  1035                           	opt callstack 0
  1036  00001D                     memset@s:
  1037                           	opt callstack 0
  1038  00001D                     ___xxtofl@arg:
  1039                           	opt callstack 0
  1040  00001D                     ___fpclassifyf@u:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x1C
  1044  00001D                     	ds	1
  1045  00001E                     fputs@fp:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x1D
  1049  00001E                     	ds	1
  1050  00001F                     ___fladd@signs:
  1051                           	opt callstack 0
  1052  00001F                     _tolower$2099:
  1053                           	opt callstack 0
  1054  00001F                     ___fldiv@rem:
  1055                           	opt callstack 0
  1056  00001F                     DisplayC@temp:
  1057                           	opt callstack 0
  1058                           
  1059                           ; 10 bytes @ 0x1E
  1060  00001F                     	ds	1
  1061  000020                     ___fladd@aexp:
  1062                           	opt callstack 0
  1063  000020                     fputs@c:
  1064                           	opt callstack 0
  1065  000020                     atoi@neg:
  1066                           	opt callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x1F
  1069  000020                     	ds	1
  1070  000021                     ?___flmul:
  1071                           	opt callstack 0
  1072  000021                     ___fladd@bexp:
  1073                           	opt callstack 0
  1074  000021                     fputs@i:
  1075                           	opt callstack 0
  1076  000021                     ___flmul@b:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x20
  1080  000021                     	ds	1
  1081  000022                     ___fladd@grs:
  1082                           	opt callstack 0
  1083  000022                     _atoi$1976:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x21
  1087  000022                     	ds	1
  1088  000023                     ?_pad:
  1089                           	opt callstack 0
  1090  000023                     ___fldiv@sign:
  1091                           	opt callstack 0
  1092  000023                     pad@fp:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x22
  1096  000023                     	ds	1
  1097  000024                     ___fldiv@new_exp:
  1098                           	opt callstack 0
  1099  000024                     _atoi$1978:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x23
  1103  000024                     	ds	1
  1104  000025                     pad@buf:
  1105                           	opt callstack 0
  1106  000025                     ___flmul@a:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 4 bytes @ 0x24
  1110  000025                     	ds	1
  1111  000026                     _atoi$1977:
  1112                           	opt callstack 0
  1113  000026                     ___fldiv@grs:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x25
  1117  000026                     	ds	1
  1118  000027                     pad@p:
  1119                           	opt callstack 0
  1120  000027                     atoi@n:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x26
  1124  000027                     	ds	2
  1125  000029                     ??___flmul:
  1126  000029                     ??_pad:
  1127                           
  1128                           ; 1 bytes @ 0x28
  1129  000029                     	ds	1
  1130  00002A                     ___fldiv@bexp:
  1131                           	opt callstack 0
  1132  00002A                     pad@i:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x29
  1136  00002A                     	ds	1
  1137  00002B                     ___fldiv@aexp:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x2A
  1141  00002B                     	ds	1
  1142  00002C                     ?_floorf:
  1143                           	opt callstack 0
  1144  00002C                     pad@w:
  1145                           	opt callstack 0
  1146  00002C                     floorf@x:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x2B
  1150  00002C                     	ds	1
  1151  00002D                     ___flmul@sign:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x2C
  1155  00002D                     	ds	1
  1156  00002E                     ___flmul@aexp:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x2D
  1160  00002E                     	ds	1
  1161  00002F                     ___flmul@grs:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x2E
  1165  00002F                     	ds	1
  1166  000030                     ??_floorf:
  1167                           
  1168                           ; 1 bytes @ 0x2F
  1169  000030                     	ds	3
  1170  000033                     ___flmul@bexp:
  1171                           	opt callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x32
  1174  000033                     	ds	1
  1175  000034                     ___flmul@prod:
  1176                           	opt callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x33
  1179  000034                     	ds	4
  1180  000038                     ___flmul@temp:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x37
  1184  000038                     	ds	2
  1185  00003A                     
  1186                           ; 1 bytes @ 0x39
  1187 ;;
  1188 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1189 ;;
  1190 ;; *************** function _main *****************
  1191 ;; Defined at:
  1192 ;;		line 124 in file "Trozinski_Herrin_Lab6.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels required when called:   13
  1212 ;; This function calls:
  1213 ;;		_DisplayC
  1214 ;;		_Initial
  1215 ;;		_decoder
  1216 ;;		_sample
  1217 ;;		_tempC
  1218 ;;		_volts
  1219 ;; This function is called by:
  1220 ;;		Startup code after reset
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text0
  1225  003A30                     __ptext0:
  1226                           	opt callstack 0
  1227  003A30                     _main:
  1228                           	opt callstack 18
  1229                           
  1230                           ;incstack = 0
  1231  003A30  ECB1  F017         	call	_Initial	;wreg free
  1232  003A34                     l6509:
  1233  003A34  50C2               	movf	4034,w,c	;volatile
  1234  003A36  0B83               	andlw	-125
  1235  003A38  090C               	iorlw	12
  1236  003A3A  6EC2               	movwf	4034,c	;volatile
  1237  003A3C  EC64  F01E         	call	_sample	;wreg free
  1238  003A40  C0F2  F0F0         	movff	_ADresult,_LM35result
  1239  003A44  C0F3  F0F1         	movff	_ADresult+1,_LM35result+1
  1240  003A48  0E83               	movlw	-125
  1241  003A4A  16C2               	andwf	4034,f,c	;volatile
  1242  003A4C  EC64  F01E         	call	_sample	;wreg free
  1243  003A50  C0F2  F0EC         	movff	_ADresult,_P2result
  1244  003A54  C0F3  F0ED         	movff	_ADresult+1,_P2result+1
  1245  003A58  EC6D  F01C         	call	_tempC	;wreg free
  1246  003A5C  EC33  F01C         	call	_volts	;wreg free
  1247  003A60  0E86               	movlw	low _temperature
  1248  003A62  6E1D               	movwf	DisplayC@LCDStr,c
  1249  003A64  0E01               	movlw	high _temperature
  1250  003A66  6E1E               	movwf	DisplayC@LCDStr+1,c
  1251  003A68  EC25  F01F         	call	_DisplayC	;wreg free
  1252  003A6C  0E7C               	movlw	low _voltage
  1253  003A6E  6E1D               	movwf	DisplayC@LCDStr,c
  1254  003A70  0E01               	movlw	high _voltage
  1255  003A72  6E1E               	movwf	DisplayC@LCDStr+1,c
  1256  003A74  EC25  F01F         	call	_DisplayC	;wreg free
  1257  003A78  0100               	movlb	0	; () banked
  1258  003A7A  05E4               	decf	_commandready& (0+255),w,b
  1259  003A7C  11E5               	iorwf	(_commandready+1)& (0+255),w,b
  1260  003A7E  B4D8               	btfsc	status,2,c
  1261                           
  1262                           ; BSR set to: 0
  1263  003A80  EC6E  F014         	call	_decoder	;wreg free
  1264  003A84  0100               	movlb	0	; () banked
  1265  003A86  05E2               	decf	_continuousMode& (0+255),w,b
  1266  003A88  11E3               	iorwf	(_continuousMode+1)& (0+255),w,b
  1267  003A8A  A4D8               	btfss	status,2,c
  1268  003A8C  D7D3               	goto	l6509
  1269                           
  1270                           ; BSR set to: 0
  1271  003A8E  EC6E  F014         	call	_decoder	;wreg free
  1272  003A92  D7D0               	goto	l6509
  1273  003A94                     __end_of_main:
  1274                           	opt callstack 0
  1275                           
  1276 ;; *************** function _volts *****************
  1277 ;; Defined at:
  1278 ;;		line 483 in file "Trozinski_Herrin_Lab6.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:   12
  1299 ;; This function calls:
  1300 ;;		___flmul
  1301 ;;		___xxtofl
  1302 ;;		_sprintf
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text1
  1309  003866                     __ptext1:
  1310                           	opt callstack 0
  1311  003866                     _volts:
  1312                           	opt callstack 18
  1313                           
  1314                           ;Trozinski_Herrin_Lab6.c: 487:     Potential = P2result * vscalefactor;
  1315                           
  1316                           ;incstack = 0
  1317  003866  C0EC  F013         	movff	_P2result,___xxtofl@val
  1318  00386A  C0ED  F014         	movff	_P2result+1,___xxtofl@val+1
  1319  00386E  6A15               	clrf	___xxtofl@val+2,c
  1320  003870  6A16               	clrf	___xxtofl@val+3,c
  1321  003872  0E00               	movlw	0
  1322  003874  ECDF  F015         	call	___xxtofl
  1323  003878  C013  F021         	movff	?___xxtofl,___flmul@b
  1324  00387C  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  1325  003880  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  1326  003884  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  1327  003888  0EED               	movlw	237
  1328  00388A  6E25               	movwf	___flmul@a,c
  1329  00388C  0E32               	movlw	50
  1330  00388E  6E26               	movwf	___flmul@a+1,c
  1331  003890  0E53               	movlw	83
  1332  003892  6E27               	movwf	___flmul@a+2,c
  1333  003894  0E3A               	movlw	58
  1334  003896  6E28               	movwf	___flmul@a+3,c
  1335  003898  EC1E  F00F         	call	___flmul	;wreg free
  1336  00389C  C021  F0D4         	movff	?___flmul,_Potential
  1337  0038A0  C022  F0D5         	movff	?___flmul+1,_Potential+1
  1338  0038A4  C023  F0D6         	movff	?___flmul+2,_Potential+2
  1339  0038A8  C024  F0D7         	movff	?___flmul+3,_Potential+3
  1340                           
  1341                           ;Trozinski_Herrin_Lab6.c: 488:     sprintf(voltage," PT=%0.2fV",Potential);
  1342  0038AC  0E7C               	movlw	low _voltage
  1343  0038AE  0101               	movlb	1	; () banked
  1344  0038B0  6F90               	movwf	sprintf@s& (0+255),b
  1345  0038B2  0E01               	movlw	high _voltage
  1346  0038B4  6F91               	movwf	(sprintf@s+1)& (0+255),b
  1347  0038B6  0E1D               	movlw	low STR_2
  1348  0038B8  6F92               	movwf	sprintf@fmt& (0+255),b
  1349  0038BA  0E10               	movlw	high STR_2
  1350  0038BC  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  1351  0038BE  C0D4  F194         	movff	_Potential,?_sprintf+4
  1352  0038C2  C0D5  F195         	movff	_Potential+1,?_sprintf+5
  1353  0038C6  C0D6  F196         	movff	_Potential+2,?_sprintf+6
  1354  0038CA  C0D7  F197         	movff	_Potential+3,?_sprintf+7
  1355  0038CE  ECA7  F01D         	call	_sprintf	;wreg free
  1356                           
  1357                           ;Trozinski_Herrin_Lab6.c: 489:     voltage[0] = 0xC0;
  1358  0038D2  0EC0               	movlw	192
  1359  0038D4  0101               	movlb	1	; () banked
  1360  0038D6  6F7C               	movwf	_voltage& (0+255),b
  1361                           
  1362                           ; BSR set to: 1
  1363  0038D8  0012               	return		;funcret
  1364  0038DA                     __end_of_volts:
  1365                           	opt callstack 0
  1366                           
  1367 ;; *************** function _tempC *****************
  1368 ;; Defined at:
  1369 ;;		line 465 in file "Trozinski_Herrin_Lab6.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        0 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:   12
  1390 ;; This function calls:
  1391 ;;		___flmul
  1392 ;;		___xxtofl
  1393 ;;		_sprintf
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text2
  1400  0038DA                     __ptext2:
  1401                           	opt callstack 0
  1402  0038DA                     _tempC:
  1403                           	opt callstack 18
  1404                           
  1405                           ;Trozinski_Herrin_Lab6.c: 473:     Temp = Cscalefactor * LM35result;
  1406                           
  1407                           ; BSR set to: 1
  1408                           ;incstack = 0
  1409  0038DA  C0F0  F013         	movff	_LM35result,___xxtofl@val
  1410  0038DE  C0F1  F014         	movff	_LM35result+1,___xxtofl@val+1
  1411  0038E2  6A15               	clrf	___xxtofl@val+2,c
  1412  0038E4  6A16               	clrf	___xxtofl@val+3,c
  1413  0038E6  0E00               	movlw	0
  1414  0038E8  ECDF  F015         	call	___xxtofl
  1415  0038EC  C013  F021         	movff	?___xxtofl,___flmul@b
  1416  0038F0  C014  F022         	movff	?___xxtofl+1,___flmul@b+1
  1417  0038F4  C015  F023         	movff	?___xxtofl+2,___flmul@b+2
  1418  0038F8  C016  F024         	movff	?___xxtofl+3,___flmul@b+3
  1419  0038FC  0EC9               	movlw	201
  1420  0038FE  6E25               	movwf	___flmul@a,c
  1421  003900  0EFF               	movlw	255
  1422  003902  6E26               	movwf	___flmul@a+1,c
  1423  003904  0EA4               	movlw	164
  1424  003906  6E27               	movwf	___flmul@a+2,c
  1425  003908  0E3D               	movlw	61
  1426  00390A  6E28               	movwf	___flmul@a+3,c
  1427  00390C  EC1E  F00F         	call	___flmul	;wreg free
  1428  003910  C021  F0D8         	movff	?___flmul,_Temp
  1429  003914  C022  F0D9         	movff	?___flmul+1,_Temp+1
  1430  003918  C023  F0DA         	movff	?___flmul+2,_Temp+2
  1431  00391C  C024  F0DB         	movff	?___flmul+3,_Temp+3
  1432                           
  1433                           ;Trozinski_Herrin_Lab6.c: 475:     sprintf(temperature, " T=%0.1fC ", Temp);
  1434  003920  0E86               	movlw	low _temperature
  1435  003922  0101               	movlb	1	; () banked
  1436  003924  6F90               	movwf	sprintf@s& (0+255),b
  1437  003926  0E01               	movlw	high _temperature
  1438  003928  6F91               	movwf	(sprintf@s+1)& (0+255),b
  1439  00392A  0E12               	movlw	low STR_1
  1440  00392C  6F92               	movwf	sprintf@fmt& (0+255),b
  1441  00392E  0E10               	movlw	high STR_1
  1442  003930  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  1443  003932  C0D8  F194         	movff	_Temp,?_sprintf+4
  1444  003936  C0D9  F195         	movff	_Temp+1,?_sprintf+5
  1445  00393A  C0DA  F196         	movff	_Temp+2,?_sprintf+6
  1446  00393E  C0DB  F197         	movff	_Temp+3,?_sprintf+7
  1447  003942  ECA7  F01D         	call	_sprintf	;wreg free
  1448                           
  1449                           ;Trozinski_Herrin_Lab6.c: 476:     temperature[0] = 0x80;
  1450  003946  0E80               	movlw	128
  1451  003948  0101               	movlb	1	; () banked
  1452  00394A  6F86               	movwf	_temperature& (0+255),b
  1453                           
  1454                           ; BSR set to: 1
  1455  00394C  0012               	return		;funcret
  1456  00394E                     __end_of_tempC:
  1457                           	opt callstack 0
  1458                           
  1459 ;; *************** function _sprintf *****************
  1460 ;; Defined at:
  1461 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  s               2    0[BANK1 ] PTR unsigned char 
  1464 ;;		 -> voltage(10), temperature(10), 
  1465 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1466 ;;		 -> STR_2(11), STR_1(11), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  f               6   12[BANK1 ] struct _IO_FILE
  1469 ;;  ap              2   10[BANK1 ] PTR void [1]
  1470 ;;		 -> ?_sprintf(2), 
  1471 ;;  ret             2    0        int 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2    0[BANK1 ] int 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1481 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;Total ram usage:       18 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:   11
  1488 ;; This function calls:
  1489 ;;		_vfprintf
  1490 ;; This function is called by:
  1491 ;;		_tempC
  1492 ;;		_volts
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text3
  1497  003B4E                     __ptext3:
  1498                           	opt callstack 0
  1499  003B4E                     _sprintf:
  1500                           	opt callstack 18
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;incstack = 0
  1504  003B4E  0E94               	movlw	low (?_sprintf+4)
  1505  003B50  0101               	movlb	1	; () banked
  1506  003B52  6F9A               	movwf	sprintf@ap& (0+255),b
  1507  003B54  0E01               	movlw	high (?_sprintf+4)
  1508  003B56  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  1509  003B58  C190  F19C         	movff	sprintf@s,sprintf@f
  1510  003B5C  C191  F19D         	movff	sprintf@s+1,sprintf@f+1
  1511                           
  1512                           ; BSR set to: 1
  1513  003B60  0E00               	movlw	0
  1514  003B62  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  1515  003B64  0E00               	movlw	0
  1516  003B66  6F9E               	movwf	(sprintf@f+2)& (0+255),b
  1517                           
  1518                           ; BSR set to: 1
  1519  003B68  0E00               	movlw	0
  1520  003B6A  6FA1               	movwf	(sprintf@f+5)& (0+255),b
  1521  003B6C  0E00               	movlw	0
  1522  003B6E  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  1523                           
  1524                           ; BSR set to: 1
  1525  003B70  0E9C               	movlw	low sprintf@f
  1526  003B72  0100               	movlb	0	; () banked
  1527  003B74  6FC8               	movwf	vfprintf@fp& (0+255),b
  1528  003B76  0E01               	movlw	high sprintf@f
  1529  003B78  6FC9               	movwf	(vfprintf@fp+1)& (0+255),b
  1530  003B7A  C192  F0CA         	movff	sprintf@fmt,vfprintf@fmt
  1531  003B7E  C193  F0CB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1532  003B82  0E9A               	movlw	low sprintf@ap
  1533  003B84  6FCC               	movwf	vfprintf@ap& (0+255),b
  1534  003B86  0E01               	movlw	high sprintf@ap
  1535  003B88  6FCD               	movwf	(vfprintf@ap+1)& (0+255),b
  1536  003B8A  EC7A  F01D         	call	_vfprintf	;wreg free
  1537  003B8E  0101               	movlb	1	; () banked
  1538  003B90  519E               	movf	(sprintf@f+2)& (0+255),w,b
  1539  003B92  2590               	addwf	sprintf@s& (0+255),w,b
  1540  003B94  6ED9               	movwf	fsr2l,c
  1541  003B96  519F               	movf	(sprintf@f+3)& (0+255),w,b
  1542  003B98  2191               	addwfc	(sprintf@s+1)& (0+255),w,b
  1543  003B9A  6EDA               	movwf	fsr2h,c
  1544  003B9C  0E00               	movlw	0
  1545  003B9E  6EDF               	movwf	indf2,c
  1546                           
  1547                           ; BSR set to: 1
  1548  003BA0  0012               	return		;funcret
  1549  003BA2                     __end_of_sprintf:
  1550                           	opt callstack 0
  1551                           
  1552 ;; *************** function _vfprintf *****************
  1553 ;; Defined at:
  1554 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  1557 ;;		 -> sprintf@f(6), 
  1558 ;;  fmt             2  106[BANK0 ] PTR const unsigned char 
  1559 ;;		 -> STR_2(11), STR_1(11), 
  1560 ;;  ap              2  108[BANK0 ] PTR PTR void 
  1561 ;;		 -> sprintf@ap(2), 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  cfmt            2  110[BANK0 ] PTR unsigned char 
  1564 ;;		 -> STR_2(11), STR_1(11), 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2  104[BANK0 ] int 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1574 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;Total ram usage:        8 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:   10
  1581 ;; This function calls:
  1582 ;;		_vfpfcnvrt
  1583 ;; This function is called by:
  1584 ;;		_sprintf
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text4
  1589  003AF4                     __ptext4:
  1590                           	opt callstack 0
  1591  003AF4                     _vfprintf:
  1592                           	opt callstack 18
  1593                           
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;incstack = 0
  1598  003AF4  C0CA  F0CE         	movff	vfprintf@fmt,vfprintf@cfmt
  1599  003AF8  C0CB  F0CF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1600                           
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1602  003AFC  0E00               	movlw	0
  1603  003AFE  0100               	movlb	0	; () banked
  1604  003B00  6FDD               	movwf	(_nout+1)& (0+255),b
  1605  003B02  0E00               	movlw	0
  1606  003B04  6FDC               	movwf	_nout& (0+255),b
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1609  003B06  D013               	goto	l6323
  1610  003B08                     l6321:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1614  003B08  C0C8  F0B0         	movff	vfprintf@fp,vfpfcnvrt@fp
  1615  003B0C  C0C9  F0B1         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1616  003B10  0ECE               	movlw	low vfprintf@cfmt
  1617  003B12  6FB2               	movwf	vfpfcnvrt@fmt& (0+255),b
  1618  003B14  0E00               	movlw	high vfprintf@cfmt
  1619  003B16  6FB3               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1620  003B18  C0CC  F0B4         	movff	vfprintf@ap,vfpfcnvrt@ap
  1621  003B1C  C0CD  F0B5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1622  003B20  ECEA  F00C         	call	_vfpfcnvrt	;wreg free
  1623  003B24  0100               	movlb	0	; () banked
  1624  003B26  51B0               	movf	?_vfpfcnvrt& (0+255),w,b
  1625  003B28  27DC               	addwf	_nout& (0+255),f,b
  1626  003B2A  51B1               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1627  003B2C  23DD               	addwfc	(_nout+1)& (0+255),f,b
  1628  003B2E                     l6323:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1632  003B2E  C0CE  FFF6         	movff	vfprintf@cfmt,tblptrl
  1633  003B32  C0CF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1634  003B36                     	if	0	;tblptru may be non-zero
  1635  003B36                     	endif
  1636  003B36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1637  003B36  0E00               	movlw	low (__mediumconst shr (0+16))
  1638  003B38  6EF8               	movwf	tblptru,c
  1639  003B3A                     	endif
  1640  003B3A  0008               	tblrd		*
  1641  003B3C  50F5               	movf	tablat,w,c
  1642  003B3E  0900               	iorlw	0
  1643  003B40  A4D8               	btfss	status,2,c
  1644  003B42  D7E2               	goto	l6321
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1648  003B44  C0DC  F0C8         	movff	_nout,?_vfprintf
  1649  003B48  C0DD  F0C9         	movff	_nout+1,?_vfprintf+1
  1650                           
  1651                           ; BSR set to: 0
  1652  003B4C  0012               	return		;funcret
  1653  003B4E                     __end_of_vfprintf:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _vfpfcnvrt *****************
  1657 ;; Defined at:
  1658 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  fp              2   80[BANK0 ] PTR struct _IO_FILE
  1661 ;;		 -> sprintf@f(6), 
  1662 ;;  fmt             2   82[BANK0 ] PTR PTR unsigned char 
  1663 ;;		 -> vfprintf@cfmt(2), 
  1664 ;;  ap              2   84[BANK0 ] PTR PTR void 
  1665 ;;		 -> sprintf@ap(2), 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  llu             8    0        unsigned long long 
  1668 ;;  ll              8    0        long long 
  1669 ;;  f               4   96[BANK0 ] long long 
  1670 ;;  ct              3  100[BANK0 ] unsigned char [3]
  1671 ;;  vp              3    0        PTR void 
  1672 ;;  cp              3    0        PTR unsigned char 
  1673 ;;  done            2   90[BANK0 ] int 
  1674 ;;  i               2    0        int 
  1675 ;;  c               1  103[BANK0 ] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2   80[BANK0 ] int 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:       24 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    9
  1692 ;; This function calls:
  1693 ;;		_atoi
  1694 ;;		_efgtoa
  1695 ;;		_fputc
  1696 ;;		_isdigit
  1697 ;;		_isupper
  1698 ;;		_strncmp
  1699 ;;		_tolower
  1700 ;; This function is called by:
  1701 ;;		_vfprintf
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text5
  1706  0019D4                     __ptext5:
  1707                           	opt callstack 0
  1708  0019D4                     _vfpfcnvrt:
  1709                           	opt callstack 18
  1710                           
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;incstack = 0
  1715  0019D4  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  0019D8  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  0019DC  CFDE FFF6          	movff	postinc2,tblptrl
  1718  0019E0  CFDD FFF7          	movff	postdec2,tblptrh
  1719  0019E4                     	if	0	;tblptru may be non-zero
  1720  0019E4                     	endif
  1721  0019E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1722  0019E4  0E00               	movlw	low (__mediumconst shr (0+16))
  1723  0019E6  6EF8               	movwf	tblptru,c
  1724  0019E8                     	endif
  1725  0019E8  0008               	tblrd		*
  1726  0019EA  50F5               	movf	tablat,w,c
  1727  0019EC  0A25               	xorlw	37
  1728  0019EE  A4D8               	btfss	status,2,c
  1729  0019F0  D209               	goto	l6301
  1730                           
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1732  0019F2  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1733  0019F6  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1734  0019FA  2ADE               	incf	postinc2,f,c
  1735  0019FC  0E00               	movlw	0
  1736  0019FE  22DD               	addwfc	postdec2,f,c
  1737                           
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1739  001A00  0E00               	movlw	0
  1740  001A02  0100               	movlb	0	; () banked
  1741  001A04  6FDF               	movwf	(_width+1)& (0+255),b
  1742  001A06  0E00               	movlw	0
  1743  001A08  6FDE               	movwf	_width& (0+255),b
  1744  001A0A  C0DE  F03C         	movff	_width,_flags
  1745  001A0E  C0DF  F03D         	movff	_width+1,_flags+1
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1749  001A12  683A               	setf	_prec,c
  1750  001A14  683B               	setf	_prec+1,c
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1754  001A16  0E00               	movlw	0
  1755  001A18  6FBB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1756  001A1A  0E00               	movlw	0
  1757  001A1C  D014               	goto	L1
  1758  001A1E                     l6197:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1762  001A1E  803C               	bsf	_flags,0,c
  1763  001A20                     l6199:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1767  001A20  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1768  001A24  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1769  001A28  2ADE               	incf	postinc2,f,c
  1770  001A2A  0E00               	movlw	0
  1771  001A2C  22DD               	addwfc	postdec2,f,c
  1772                           
  1773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1774  001A2E  D030               	goto	l6223
  1775  001A30                     l6201:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1779  001A30  823C               	bsf	_flags,1,c
  1780  001A32  D7F6               	goto	l6199
  1781  001A34                     l6205:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1785  001A34  843C               	bsf	_flags,2,c
  1786  001A36  D7F4               	goto	l6199
  1787  001A38                     l6209:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1791  001A38  863C               	bsf	_flags,3,c
  1792  001A3A  D7F2               	goto	l6199
  1793  001A3C                     l6213:
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1797  001A3C  883C               	bsf	_flags,4,c
  1798  001A3E  D7F0               	goto	l6199
  1799  001A40                     l6217:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1803  001A40  0E00               	movlw	0
  1804  001A42  6FBB               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1805  001A44  0E01               	movlw	1
  1806  001A46                     L1:
  1807  001A46  6FBA               	movwf	vfpfcnvrt@done& (0+255),b
  1808                           
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1810  001A48  D023               	goto	l6223
  1811  001A4A                     l6221:
  1812                           
  1813                           ; BSR set to: 0
  1814  001A4A  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815  001A4E  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816  001A52  CFDE FFF6          	movff	postinc2,tblptrl
  1817  001A56  CFDD FFF7          	movff	postdec2,tblptrh
  1818  001A5A                     	if	0	;tblptru may be non-zero
  1819  001A5A                     	endif
  1820  001A5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1821  001A5A  0E00               	movlw	low (__mediumconst shr (0+16))
  1822  001A5C  6EF8               	movwf	tblptru,c
  1823  001A5E                     	endif
  1824  001A5E  0008               	tblrd		*
  1825  001A60  50F5               	movf	tablat,w,c
  1826  001A62  6FB6               	movwf	??_vfpfcnvrt& (0+255),b
  1827  001A64  6BB7               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1828                           
  1829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 1, Range of values is 0 to 0
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte            4     3 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836  001A66  51B7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1837  001A68  0A00               	xorlw	0	; case 0
  1838  001A6A  A4D8               	btfss	status,2,c
  1839  001A6C  D7E9               	goto	l6217
  1840                           
  1841                           ; BSR set to: 0
  1842                           ; Switch size 1, requested type "simple"
  1843                           ; Number of cases is 5, Range of values is 32 to 48
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte           16     9 (average)
  1847                           ;	Chosen strategy is simple_byte
  1848  001A6E  51B6               	movf	??_vfpfcnvrt& (0+255),w,b
  1849  001A70  0A20               	xorlw	32	; case 32
  1850  001A72  B4D8               	btfsc	status,2,c
  1851  001A74  D7E1               	goto	l6209
  1852  001A76  0A03               	xorlw	3	; case 35
  1853  001A78  B4D8               	btfsc	status,2,c
  1854  001A7A  D7E0               	goto	l6213
  1855  001A7C  0A08               	xorlw	8	; case 43
  1856  001A7E  B4D8               	btfsc	status,2,c
  1857  001A80  D7D9               	goto	l6205
  1858  001A82  0A06               	xorlw	6	; case 45
  1859  001A84  B4D8               	btfsc	status,2,c
  1860  001A86  D7CB               	goto	l6197
  1861  001A88  0A1D               	xorlw	29	; case 48
  1862  001A8A  B4D8               	btfsc	status,2,c
  1863  001A8C  D7D1               	goto	l6201
  1864  001A8E  D7D8               	goto	l6217
  1865  001A90                     l6223:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1869  001A90  51BA               	movf	vfpfcnvrt@done& (0+255),w,b
  1870  001A92  11BB               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1871  001A94  B4D8               	btfsc	status,2,c
  1872  001A96  D7D9               	goto	l6221
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1876  001A98  B03C               	btfsc	_flags,0,c
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1880  001A9A  923C               	bcf	_flags,1,c
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1884  001A9C  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885  001AA0  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886  001AA4  CFDE FFF6          	movff	postinc2,tblptrl
  1887  001AA8  CFDD FFF7          	movff	postdec2,tblptrh
  1888  001AAC                     	if	0	;tblptru may be non-zero
  1889  001AAC                     	endif
  1890  001AAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1891  001AAC  0E00               	movlw	low (__mediumconst shr (0+16))
  1892  001AAE  6EF8               	movwf	tblptru,c
  1893  001AB0                     	endif
  1894  001AB0  0008               	tblrd		*
  1895  001AB2  50F5               	movf	tablat,w,c
  1896  001AB4  0A2E               	xorlw	46
  1897  001AB6  A4D8               	btfss	status,2,c
  1898  001AB8  D072               	goto	u8010
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1902  001ABA  0E00               	movlw	0
  1903  001ABC  6E3B               	movwf	_prec+1,c
  1904  001ABE  0E00               	movlw	0
  1905  001AC0  6E3A               	movwf	_prec,c
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1909  001AC2  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1910  001AC6  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1911  001ACA  2ADE               	incf	postinc2,f,c
  1912  001ACC  0E00               	movlw	0
  1913  001ACE  22DD               	addwfc	postdec2,f,c
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1917  001AD0  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1918  001AD4  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1919  001AD8  CFDE FFF6          	movff	postinc2,tblptrl
  1920  001ADC  CFDD FFF7          	movff	postdec2,tblptrh
  1921  001AE0                     	if	0	;tblptru may be non-zero
  1922  001AE0                     	endif
  1923  001AE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1924  001AE0  0E00               	movlw	low (__mediumconst shr (0+16))
  1925  001AE2  6EF8               	movwf	tblptru,c
  1926  001AE4                     	endif
  1927  001AE4  0008               	tblrd		*
  1928  001AE6  50F5               	movf	tablat,w,c
  1929  001AE8  0A2A               	xorlw	42
  1930  001AEA  A4D8               	btfss	status,2,c
  1931  001AEC  D01C               	goto	l6237
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1935  001AEE  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1936  001AF2  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1937  001AF6  2ADE               	incf	postinc2,f,c
  1938  001AF8  0E00               	movlw	0
  1939  001AFA  22DD               	addwfc	postdec2,f,c
  1940                           
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1942  001AFC  C0B4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1943  001B00  C0B5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1944  001B04  CFDF F0B6          	movff	indf2,??_vfpfcnvrt
  1945  001B08  0E02               	movlw	2
  1946  001B0A  26DE               	addwf	postinc2,f,c
  1947  001B0C  CFDF F0B7          	movff	indf2,??_vfpfcnvrt+1
  1948  001B10  0E00               	movlw	0
  1949  001B12  22DD               	addwfc	postdec2,f,c
  1950  001B14  C0B6  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1951  001B18  C0B7  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1952  001B1C  CFDE F03A          	movff	postinc2,_prec
  1953  001B20  CFDD F03B          	movff	postdec2,_prec+1
  1954                           
  1955                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1956  001B24  D03C               	goto	u8010
  1957  001B26                     l6237:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1961  001B26  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1962  001B2A  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1963  001B2E  CFDE F01A          	movff	postinc2,atoi@s
  1964  001B32  CFDD F01B          	movff	postdec2,atoi@s+1
  1965  001B36  EC35  F015         	call	_atoi	;wreg free
  1966  001B3A  C01A  F03A         	movff	?_atoi,_prec
  1967  001B3E  C01B  F03B         	movff	?_atoi+1,_prec+1
  1968                           
  1969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1970  001B42  D007               	goto	l6241
  1971  001B44                     l6239:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1975  001B44  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1976  001B48  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1977  001B4C  2ADE               	incf	postinc2,f,c
  1978  001B4E  0E00               	movlw	0
  1979  001B50  22DD               	addwfc	postdec2,f,c
  1980  001B52                     l6241:
  1981  001B52  0ED0               	movlw	208
  1982  001B54  0100               	movlb	0	; () banked
  1983  001B56  6FB6               	movwf	??_vfpfcnvrt& (0+255),b
  1984  001B58  0EFF               	movlw	255
  1985  001B5A  6FB7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1986  001B5C  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1987  001B60  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1988  001B64  CFDE FFF6          	movff	postinc2,tblptrl
  1989  001B68  CFDD FFF7          	movff	postdec2,tblptrh
  1990  001B6C                     	if	0	;tblptru may be non-zero
  1991  001B6C                     	endif
  1992  001B6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1993  001B6C  0E00               	movlw	low (__mediumconst shr (0+16))
  1994  001B6E  6EF8               	movwf	tblptru,c
  1995  001B70                     	endif
  1996  001B70  0008               	tblrd		*
  1997  001B72  50F5               	movf	tablat,w,c
  1998  001B74  6FB8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1999  001B76  6BB9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2000  001B78  51B6               	movf	??_vfpfcnvrt& (0+255),w,b
  2001  001B7A  27B8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2002  001B7C  51B7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2003  001B7E  23B9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2004  001B80  51B9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2005  001B82  E106               	bnz	u7990
  2006  001B84  0E0A               	movlw	10
  2007  001B86  5DB8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2008  001B88  B0D8               	btfsc	status,0,c
  2009  001B8A  D002               	goto	u7990
  2010  001B8C  0E01               	movlw	1
  2011  001B8E  D001               	goto	u8000
  2012  001B90                     u7990:
  2013  001B90  0E00               	movlw	0
  2014  001B92                     u8000:
  2015  001B92  6FBC               	movwf	_vfpfcnvrt$1501& (0+255),b
  2016  001B94  6BBD               	clrf	(_vfpfcnvrt$1501+1)& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019  001B96  51BC               	movf	_vfpfcnvrt$1501& (0+255),w,b
  2020  001B98  11BD               	iorwf	(_vfpfcnvrt$1501+1)& (0+255),w,b
  2021  001B9A  A4D8               	btfss	status,2,c
  2022  001B9C  D7D3               	goto	l6239
  2023  001B9E                     u8010:
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2027  001B9E  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2028  001BA2  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2029  001BA6  CFDE FFF6          	movff	postinc2,tblptrl
  2030  001BAA  CFDD FFF7          	movff	postdec2,tblptrh
  2031  001BAE                     	if	0	;tblptru may be non-zero
  2032  001BAE                     	endif
  2033  001BAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2034  001BAE  0E00               	movlw	low (__mediumconst shr (0+16))
  2035  001BB0  6EF8               	movwf	tblptru,c
  2036  001BB2                     	endif
  2037  001BB2  0008               	tblrd		*
  2038  001BB4  50F5               	movf	tablat,w,c
  2039  001BB6  6E19               	movwf	tolower@c,c
  2040  001BB8  6A1A               	clrf	tolower@c+1,c
  2041  001BBA  ECFB  F01D         	call	_tolower	;wreg free
  2042  001BBE  5019               	movf	?_tolower,w,c
  2043  001BC0  0100               	movlb	0	; () banked
  2044  001BC2  6FC4               	movwf	vfpfcnvrt@ct& (0+255),b
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2048  001BC4  51C4               	movf	vfpfcnvrt@ct& (0+255),w,b
  2049  001BC6  B4D8               	btfsc	status,2,c
  2050  001BC8  D039               	goto	l6257
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2054  001BCA  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2055  001BCE  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2056  001BD2  CFDE F0B6          	movff	postinc2,??_vfpfcnvrt
  2057  001BD6  CFDD F0B7          	movff	postdec2,??_vfpfcnvrt+1
  2058  001BDA  0E01               	movlw	1
  2059  001BDC  27B6               	addwf	??_vfpfcnvrt& (0+255),f,b
  2060  001BDE  0E00               	movlw	0
  2061  001BE0  23B7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2062  001BE2  C0B6  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2063  001BE6  C0B7  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2064  001BEA                     	if	0	;tblptru may be non-zero
  2065  001BEA                     	endif
  2066  001BEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2067  001BEA  0E00               	movlw	low (__mediumconst shr (0+16))
  2068  001BEC  6EF8               	movwf	tblptru,c
  2069  001BEE                     	endif
  2070  001BEE  0008               	tblrd		*
  2071  001BF0  50F5               	movf	tablat,w,c
  2072  001BF2  6E19               	movwf	tolower@c,c
  2073  001BF4  6A1A               	clrf	tolower@c+1,c
  2074  001BF6  ECFB  F01D         	call	_tolower	;wreg free
  2075  001BFA  5019               	movf	?_tolower,w,c
  2076  001BFC  0100               	movlb	0	; () banked
  2077  001BFE  6FC5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2081  001C00  51C5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2082  001C02  B4D8               	btfsc	status,2,c
  2083  001C04  D01B               	goto	l6257
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2087  001C06  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2088  001C0A  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2089  001C0E  CFDE F0B6          	movff	postinc2,??_vfpfcnvrt
  2090  001C12  CFDD F0B7          	movff	postdec2,??_vfpfcnvrt+1
  2091  001C16  0E02               	movlw	2
  2092  001C18  27B6               	addwf	??_vfpfcnvrt& (0+255),f,b
  2093  001C1A  0E00               	movlw	0
  2094  001C1C  23B7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2095  001C1E  C0B6  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2096  001C22  C0B7  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2097  001C26                     	if	0	;tblptru may be non-zero
  2098  001C26                     	endif
  2099  001C26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2100  001C26  0E00               	movlw	low (__mediumconst shr (0+16))
  2101  001C28  6EF8               	movwf	tblptru,c
  2102  001C2A                     	endif
  2103  001C2A  0008               	tblrd		*
  2104  001C2C  50F5               	movf	tablat,w,c
  2105  001C2E  6E19               	movwf	tolower@c,c
  2106  001C30  6A1A               	clrf	tolower@c+1,c
  2107  001C32  ECFB  F01D         	call	_tolower	;wreg free
  2108  001C36  5019               	movf	?_tolower,w,c
  2109  001C38  0100               	movlb	0	; () banked
  2110  001C3A  6FC6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2111  001C3C                     l6257:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2115  001C3C  0E66               	movlw	102
  2116  001C3E  19C4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2117  001C40  A4D8               	btfss	status,2,c
  2118  001C42  D041               	goto	l6269
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2122  001C44  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123  001C48  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124  001C4C  CFDE FFF6          	movff	postinc2,tblptrl
  2125  001C50  CFDD FFF7          	movff	postdec2,tblptrh
  2126  001C54                     	if	0	;tblptru may be non-zero
  2127  001C54                     	endif
  2128  001C54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2129  001C54  0E00               	movlw	low (__mediumconst shr (0+16))
  2130  001C56  6EF8               	movwf	tblptru,c
  2131  001C58                     	endif
  2132  001C58  0008               	tblrd		*
  2133  001C5A  CFF5 F0C7          	movff	tablat,vfpfcnvrt@c
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2137  001C5E  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2138  001C62  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2139  001C66  2ADE               	incf	postinc2,f,c
  2140  001C68  0E00               	movlw	0
  2141  001C6A  22DD               	addwfc	postdec2,f,c
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2145  001C6C  C0B4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2146  001C70  C0B5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2147  001C74  CFDF F0B6          	movff	indf2,??_vfpfcnvrt
  2148  001C78  0E04               	movlw	4
  2149  001C7A  26DE               	addwf	postinc2,f,c
  2150  001C7C  CFDF F0B7          	movff	indf2,??_vfpfcnvrt+1
  2151  001C80  0E00               	movlw	0
  2152  001C82  22DD               	addwfc	postdec2,f,c
  2153  001C84  C0B6  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2154  001C88  C0B7  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2155  001C8C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f
  2156  001C90  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+1
  2157  001C94  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+2
  2158  001C98  CFDE F0C3          	movff	postinc2,vfpfcnvrt@f+3
  2159  001C9C                     l6265:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2163  001C9C  C0B0  F06C         	movff	vfpfcnvrt@fp,efgtoa@fp
  2164  001CA0  C0B1  F06D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2165  001CA4  C0C0  F06E         	movff	vfpfcnvrt@f,efgtoa@f
  2166  001CA8  C0C1  F06F         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2167  001CAC  C0C2  F070         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2168  001CB0  C0C3  F071         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2169  001CB4  C0C7  F072         	movff	vfpfcnvrt@c,efgtoa@c
  2170  001CB8  EC2B  F008         	call	_efgtoa	;wreg free
  2171  001CBC  C06C  F0B0         	movff	?_efgtoa,?_vfpfcnvrt
  2172  001CC0  C06D  F0B1         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2173  001CC4  0012               	return	
  2174  001CC6                     l6269:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2178  001CC6  0EC4               	movlw	low vfpfcnvrt@ct
  2179  001CC8  6E13               	movwf	strncmp@_l,c
  2180  001CCA  0E00               	movlw	high vfpfcnvrt@ct
  2181  001CCC  6E14               	movwf	strncmp@_l+1,c
  2182  001CCE  0E52               	movlw	low STR_15
  2183  001CD0  6E15               	movwf	strncmp@_r,c
  2184  001CD2  0E10               	movlw	high STR_15
  2185  001CD4  6E16               	movwf	strncmp@_r+1,c
  2186  001CD6  0E00               	movlw	0
  2187  001CD8  6E18               	movwf	strncmp@n+1,c
  2188  001CDA  0E02               	movlw	2
  2189  001CDC  6E17               	movwf	strncmp@n,c
  2190  001CDE  EC5E  F019         	call	_strncmp	;wreg free
  2191  001CE2  5013               	movf	?_strncmp,w,c
  2192  001CE4  1014               	iorwf	?_strncmp+1,w,c
  2193  001CE6  A4D8               	btfss	status,2,c
  2194  001CE8  D05A               	goto	l6285
  2195                           
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2197  001CEA  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2198  001CEE  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2199  001CF2  CFDE F0B6          	movff	postinc2,??_vfpfcnvrt
  2200  001CF6  CFDD F0B7          	movff	postdec2,??_vfpfcnvrt+1
  2201  001CFA  0E01               	movlw	1
  2202  001CFC  0100               	movlb	0	; () banked
  2203  001CFE  27B6               	addwf	??_vfpfcnvrt& (0+255),f,b
  2204  001D00  0E00               	movlw	0
  2205  001D02  23B7               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2206  001D04  C0B6  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2207  001D08  C0B7  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2208  001D0C                     	if	0	;tblptru may be non-zero
  2209  001D0C                     	endif
  2210  001D0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2211  001D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  2212  001D0E  6EF8               	movwf	tblptru,c
  2213  001D10                     	endif
  2214  001D10  0008               	tblrd		*
  2215  001D12  CFF5 F0C7          	movff	tablat,vfpfcnvrt@c
  2216  001D16  0EBF               	movlw	191
  2217  001D18  6FB6               	movwf	??_vfpfcnvrt& (0+255),b
  2218  001D1A  0EFF               	movlw	255
  2219  001D1C  6FB7               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2220  001D1E  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2221  001D22  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2222  001D26  CFDE FFF6          	movff	postinc2,tblptrl
  2223  001D2A  CFDD FFF7          	movff	postdec2,tblptrh
  2224  001D2E                     	if	0	;tblptru may be non-zero
  2225  001D2E                     	endif
  2226  001D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2227  001D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  2228  001D30  6EF8               	movwf	tblptru,c
  2229  001D32                     	endif
  2230  001D32  0008               	tblrd		*
  2231  001D34  50F5               	movf	tablat,w,c
  2232  001D36  6FB8               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2233  001D38  6BB9               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2234  001D3A  51B6               	movf	??_vfpfcnvrt& (0+255),w,b
  2235  001D3C  27B8               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2236  001D3E  51B7               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2237  001D40  23B9               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2238  001D42  51B9               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2239  001D44  E106               	bnz	u8060
  2240  001D46  0E1A               	movlw	26
  2241  001D48  5DB8               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2242  001D4A  B0D8               	btfsc	status,0,c
  2243  001D4C  D002               	goto	u8060
  2244  001D4E  0E01               	movlw	1
  2245  001D50  D001               	goto	u8070
  2246  001D52                     u8060:
  2247  001D52  0E00               	movlw	0
  2248  001D54                     u8070:
  2249  001D54  6FBE               	movwf	_vfpfcnvrt$1505& (0+255),b
  2250  001D56  6BBF               	clrf	(_vfpfcnvrt$1505+1)& (0+255),b
  2251                           
  2252                           ; BSR set to: 0
  2253  001D58  51BE               	movf	_vfpfcnvrt$1505& (0+255),w,b
  2254  001D5A  11BF               	iorwf	(_vfpfcnvrt$1505+1)& (0+255),w,b
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2263  001D5C  C0B4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2264  001D60  C0B5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2265  001D64  CFDF F0B6          	movff	indf2,??_vfpfcnvrt
  2266  001D68  0E04               	movlw	4
  2267  001D6A  26DE               	addwf	postinc2,f,c
  2268  001D6C  CFDF F0B7          	movff	indf2,??_vfpfcnvrt+1
  2269  001D70  0E00               	movlw	0
  2270  001D72  22DD               	addwfc	postdec2,f,c
  2271  001D74  C0B6  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2272  001D78  C0B7  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2273  001D7C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f
  2274  001D80  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+1
  2275  001D84  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+2
  2276  001D88  CFDE F0C3          	movff	postinc2,vfpfcnvrt@f+3
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2280                           
  2281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2282  001D8C  0E02               	movlw	2
  2283  001D8E  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2284  001D92  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2285  001D96  26DE               	addwf	postinc2,f,c
  2286  001D98  0E00               	movlw	0
  2287  001D9A  22DD               	addwfc	postdec2,f,c
  2288  001D9C  D77F               	goto	l6265
  2289  001D9E                     l6285:
  2290                           
  2291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2292  001D9E  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2293  001DA2  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2294  001DA6  CFDE FFF6          	movff	postinc2,tblptrl
  2295  001DAA  CFDD FFF7          	movff	postdec2,tblptrh
  2296  001DAE                     	if	0	;tblptru may be non-zero
  2297  001DAE                     	endif
  2298  001DAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2299  001DAE  0E00               	movlw	low (__mediumconst shr (0+16))
  2300  001DB0  6EF8               	movwf	tblptru,c
  2301  001DB2                     	endif
  2302  001DB2  0008               	tblrd		*
  2303  001DB4  50F5               	movf	tablat,w,c
  2304  001DB6  0A25               	xorlw	37
  2305  001DB8  A4D8               	btfss	status,2,c
  2306  001DBA  D017               	goto	l6295
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2309  001DBC  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2310  001DC0  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2311  001DC4  2ADE               	incf	postinc2,f,c
  2312  001DC6  0E00               	movlw	0
  2313  001DC8  22DD               	addwfc	postdec2,f,c
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2316  001DCA  0E00               	movlw	0
  2317  001DCC  6E14               	movwf	fputc@c+1,c
  2318  001DCE  0E25               	movlw	37
  2319  001DD0  6E13               	movwf	fputc@c,c
  2320  001DD2  C0B0  F015         	movff	vfpfcnvrt@fp,fputc@fp
  2321  001DD6  C0B1  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2322  001DDA  EC0A  F01A         	call	_fputc	;wreg free
  2323  001DDE                     l6291:
  2324                           
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2326  001DDE  0E00               	movlw	0
  2327  001DE0  0100               	movlb	0	; () banked
  2328  001DE2  6FB1               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2329  001DE4  0E01               	movlw	1
  2330  001DE6  6FB0               	movwf	?_vfpfcnvrt& (0+255),b
  2331  001DE8  0012               	return	
  2332  001DEA                     l6295:
  2333                           
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2335  001DEA  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2336  001DEE  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2337  001DF2  2ADE               	incf	postinc2,f,c
  2338  001DF4  0E00               	movlw	0
  2339  001DF6  22DD               	addwfc	postdec2,f,c
  2340                           
  2341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2342  001DF8  0E00               	movlw	0
  2343  001DFA  0100               	movlb	0	; () banked
  2344  001DFC  6FB1               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2345  001DFE  0E00               	movlw	0
  2346  001E00  6FB0               	movwf	?_vfpfcnvrt& (0+255),b
  2347  001E02  0012               	return	
  2348  001E04                     l6301:
  2349                           
  2350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2351  001E04  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2352  001E08  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2353  001E0C  CFDE FFF6          	movff	postinc2,tblptrl
  2354  001E10  CFDD FFF7          	movff	postdec2,tblptrh
  2355  001E14                     	if	0	;tblptru may be non-zero
  2356  001E14                     	endif
  2357  001E14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2358  001E14  0E00               	movlw	low (__mediumconst shr (0+16))
  2359  001E16  6EF8               	movwf	tblptru,c
  2360  001E18                     	endif
  2361  001E18  0008               	tblrd		*
  2362  001E1A  50F5               	movf	tablat,w,c
  2363  001E1C  6E13               	movwf	fputc@c,c
  2364  001E1E  6A14               	clrf	fputc@c+1,c
  2365  001E20  C0B0  F015         	movff	vfpfcnvrt@fp,fputc@fp
  2366  001E24  C0B1  F016         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2367  001E28  EC0A  F01A         	call	_fputc	;wreg free
  2368                           
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2370  001E2C  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2371  001E30  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2372  001E34  2ADE               	incf	postinc2,f,c
  2373  001E36  0E00               	movlw	0
  2374  001E38  22DD               	addwfc	postdec2,f,c
  2375  001E3A  D7D1               	goto	l6291
  2376  001E3C                     __end_of_vfpfcnvrt:
  2377                           	opt callstack 0
  2378                           
  2379 ;; *************** function _efgtoa *****************
  2380 ;; Defined at:
  2381 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2384 ;;		 -> sprintf@f(6), 
  2385 ;;  f               4   14[BANK0 ] PTR struct _IO_FILE
  2386 ;;  c               1   18[BANK0 ] unsigned char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  u               4   76[BANK0 ] unsigned char 
  2389 ;;  g               4   68[BANK0 ] unsigned char 
  2390 ;;  l               4   62[BANK0 ] unsigned char 
  2391 ;;  h               4   58[BANK0 ] unsigned char 
  2392 ;;  ou              4   24[BANK0 ] unsigned char 
  2393 ;;  n               2   74[BANK0 ] int 
  2394 ;;  e               2   72[BANK0 ] int 
  2395 ;;  i               2   66[BANK0 ] int 
  2396 ;;  w               2   55[BANK0 ] int 
  2397 ;;  p               2   52[BANK0 ] int 
  2398 ;;  sign            2   50[BANK0 ] int 
  2399 ;;  d               2   48[BANK0 ] int 
  2400 ;;  ne              2   46[BANK0 ] int 
  2401 ;;  m               2   44[BANK0 ] int 
  2402 ;;  pp              2   42[BANK0 ] int 
  2403 ;;  t               2   40[BANK0 ] int 
  2404 ;;  mode            1   57[BANK0 ] unsigned char 
  2405 ;;  nmode           1   54[BANK0 ] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2   12[BANK0 ] int 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2415 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;Total ram usage:       68 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    8
  2422 ;; This function calls:
  2423 ;;		___awdiv
  2424 ;;		___awmod
  2425 ;;		___fladd
  2426 ;;		___fldiv
  2427 ;;		___fleq
  2428 ;;		___flge
  2429 ;;		___flmul
  2430 ;;		___flneg
  2431 ;;		___flsub
  2432 ;;		___fltol
  2433 ;;		___fpclassifyf
  2434 ;;		_floorf
  2435 ;;		_isupper
  2436 ;;		_pad
  2437 ;;		_strcpy
  2438 ;;		_tolower
  2439 ;; This function is called by:
  2440 ;;		_vfpfcnvrt
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text6
  2445  001056                     __ptext6:
  2446                           	opt callstack 0
  2447  001056                     _efgtoa:
  2448                           	opt callstack 18
  2449                           
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2451                           
  2452                           ;incstack = 0
  2453  001056  0E00               	movlw	0
  2454  001058  0100               	movlb	0	; () banked
  2455  00105A  6F93               	movwf	(efgtoa@sign+1)& (0+255),b
  2456  00105C  0E00               	movlw	0
  2457  00105E  6F92               	movwf	efgtoa@sign& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2461  001060  C06E  F0A4         	movff	efgtoa@f,efgtoa@g
  2462  001064  C06F  F0A5         	movff	efgtoa@f+1,efgtoa@g+1
  2463  001068  C070  F0A6         	movff	efgtoa@f+2,efgtoa@g+2
  2464  00106C  C071  F0A7         	movff	efgtoa@f+3,efgtoa@g+3
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2468  001070  AFA7               	btfss	(efgtoa@g+3)& (0+255),7,b
  2469  001072  D016               	goto	l5857
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2473  001074  0E00               	movlw	0
  2474  001076  6F93               	movwf	(efgtoa@sign+1)& (0+255),b
  2475  001078  0E01               	movlw	1
  2476  00107A  6F92               	movwf	efgtoa@sign& (0+255),b
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2480  00107C  C0A4  F013         	movff	efgtoa@g,___flneg@f1
  2481  001080  C0A5  F014         	movff	efgtoa@g+1,___flneg@f1+1
  2482  001084  C0A6  F015         	movff	efgtoa@g+2,___flneg@f1+2
  2483  001088  C0A7  F016         	movff	efgtoa@g+3,___flneg@f1+3
  2484  00108C  ECE6  F01E         	call	___flneg	;wreg free
  2485  001090  C013  F0A4         	movff	?___flneg,efgtoa@g
  2486  001094  C014  F0A5         	movff	?___flneg+1,efgtoa@g+1
  2487  001098  C015  F0A6         	movff	?___flneg+2,efgtoa@g+2
  2488  00109C  C016  F0A7         	movff	?___flneg+3,efgtoa@g+3
  2489  0010A0                     l5857:
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2492  0010A0  0E00               	movlw	0
  2493  0010A2  0100               	movlb	0	; () banked
  2494  0010A4  6FAB               	movwf	(efgtoa@n+1)& (0+255),b
  2495  0010A6  0E00               	movlw	0
  2496  0010A8  6FAA               	movwf	efgtoa@n& (0+255),b
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2500  0010AA  C0DE  F097         	movff	_width,efgtoa@w
  2501  0010AE  C0DF  F098         	movff	_width+1,efgtoa@w+1
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2505  0010B2  5192               	movf	efgtoa@sign& (0+255),w,b
  2506  0010B4  1193               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2507  0010B6  A4D8               	btfss	status,2,c
  2508  0010B8  D002               	goto	u7370
  2509                           
  2510                           ; BSR set to: 0
  2511  0010BA  A43C               	btfss	_flags,2,c
  2512  0010BC  D013               	goto	l5877
  2513  0010BE                     u7370:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2517  0010BE  5192               	movf	efgtoa@sign& (0+255),w,b
  2518  0010C0  1193               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2519  0010C2  A4D8               	btfss	status,2,c
  2520  0010C4  D004               	goto	l5869
  2521                           
  2522                           ; BSR set to: 0
  2523  0010C6  0E00               	movlw	0
  2524  0010C8  6F7D               	movwf	(_efgtoa$1475+1)& (0+255),b
  2525  0010CA  0E2B               	movlw	43
  2526  0010CC  D003               	goto	L2
  2527  0010CE                     l5869:
  2528                           
  2529                           ; BSR set to: 0
  2530  0010CE  0E00               	movlw	0
  2531  0010D0  6F7D               	movwf	(_efgtoa$1475+1)& (0+255),b
  2532  0010D2  0E2D               	movlw	45
  2533  0010D4                     L2:
  2534  0010D4  6F7C               	movwf	_efgtoa$1475& (0+255),b
  2535                           
  2536                           ; BSR set to: 0
  2537  0010D6  C07C  F104         	movff	_efgtoa$1475,_dbuf
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2541  0010DA  4BAA               	infsnz	efgtoa@n& (0+255),f,b
  2542  0010DC  2BAB               	incf	(efgtoa@n+1)& (0+255),f,b
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2546  0010DE  0797               	decf	efgtoa@w& (0+255),f,b
  2547  0010E0  A0D8               	btfss	status,0,c
  2548  0010E2  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  2549  0010E4                     l5877:
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2553  0010E4  C0A4  F013         	movff	efgtoa@g,___fpclassifyf@x
  2554  0010E8  C0A5  F014         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2555  0010EC  C0A6  F015         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2556  0010F0  C0A7  F016         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2557  0010F4  EC9B  F018         	call	___fpclassifyf	;wreg free
  2558  0010F8  0413               	decf	?___fpclassifyf,w,c
  2559  0010FA  1014               	iorwf	?___fpclassifyf+1,w,c
  2560  0010FC  A4D8               	btfss	status,2,c
  2561  0010FE  D04C               	goto	l5895
  2562  001100  0EBF               	movlw	191
  2563  001102  0100               	movlb	0	; () banked
  2564  001104  6F73               	movwf	??_efgtoa& (0+255),b
  2565  001106  0EFF               	movlw	255
  2566  001108  6F74               	movwf	(??_efgtoa+1)& (0+255),b
  2567  00110A  5172               	movf	efgtoa@c& (0+255),w,b
  2568  00110C  6F75               	movwf	(??_efgtoa+2)& (0+255),b
  2569  00110E  6B76               	clrf	(??_efgtoa+3)& (0+255),b
  2570  001110  5173               	movf	??_efgtoa& (0+255),w,b
  2571  001112  2775               	addwf	(??_efgtoa+2)& (0+255),f,b
  2572  001114  5174               	movf	(??_efgtoa+1)& (0+255),w,b
  2573  001116  2376               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2574  001118  5176               	movf	(??_efgtoa+3)& (0+255),w,b
  2575  00111A  E106               	bnz	u7400
  2576  00111C  0E1A               	movlw	26
  2577  00111E  5D75               	subwf	(??_efgtoa+2)& (0+255),w,b
  2578  001120  B0D8               	btfsc	status,0,c
  2579  001122  D002               	goto	u7400
  2580  001124  0E01               	movlw	1
  2581  001126  D001               	goto	u7410
  2582  001128                     u7400:
  2583  001128  0E00               	movlw	0
  2584  00112A                     u7410:
  2585  00112A  6F7E               	movwf	_efgtoa$1476& (0+255),b
  2586  00112C  6B7F               	clrf	(_efgtoa$1476+1)& (0+255),b
  2587                           
  2588                           ; BSR set to: 0
  2589  00112E  517E               	movf	_efgtoa$1476& (0+255),w,b
  2590  001130  117F               	iorwf	(_efgtoa$1476+1)& (0+255),w,b
  2591  001132  B4D8               	btfsc	status,2,c
  2592  001134  D00D               	goto	l5887
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2596  001136  0E04               	movlw	low _dbuf
  2597  001138  25AA               	addwf	efgtoa@n& (0+255),w,b
  2598  00113A  6E13               	movwf	strcpy@dest,c
  2599  00113C  0E01               	movlw	high _dbuf
  2600  00113E  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2601  001140  6E14               	movwf	strcpy@dest+1,c
  2602  001142  0E3E               	movlw	low STR_7
  2603  001144  6E15               	movwf	strcpy@src,c
  2604  001146  0E10               	movlw	high STR_7
  2605  001148  6E16               	movwf	strcpy@src+1,c
  2606  00114A  ECD1  F01D         	call	_strcpy	;wreg free
  2607                           
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2609  00114E  D00C               	goto	l5889
  2610  001150                     l5887:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2614  001150  0E04               	movlw	low _dbuf
  2615  001152  25AA               	addwf	efgtoa@n& (0+255),w,b
  2616  001154  6E13               	movwf	strcpy@dest,c
  2617  001156  0E01               	movlw	high _dbuf
  2618  001158  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2619  00115A  6E14               	movwf	strcpy@dest+1,c
  2620  00115C  0E46               	movlw	low STR_8
  2621  00115E  6E15               	movwf	strcpy@src,c
  2622  001160  0E10               	movlw	high STR_8
  2623  001162  6E16               	movwf	strcpy@src+1,c
  2624  001164  ECD1  F01D         	call	_strcpy	;wreg free
  2625  001168                     l5889:
  2626                           
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2628  001168  0100               	movlb	0	; () banked
  2629  00116A  0EFD               	movlw	253
  2630  00116C  2797               	addwf	efgtoa@w& (0+255),f,b
  2631  00116E  0EFF               	movlw	255
  2632  001170  2398               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2633  001172                     l5891:
  2634                           
  2635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2636  001172  C06C  F023         	movff	efgtoa@fp,pad@fp
  2637  001176  C06D  F024         	movff	efgtoa@fp+1,pad@fp+1
  2638  00117A  0E04               	movlw	low _dbuf
  2639  00117C  6E25               	movwf	pad@buf,c
  2640  00117E  0E01               	movlw	high _dbuf
  2641  001180  6E26               	movwf	pad@buf+1,c
  2642  001182  C097  F027         	movff	efgtoa@w,pad@p
  2643  001186  C098  F028         	movff	efgtoa@w+1,pad@p+1
  2644  00118A  EC5A  F01A         	call	_pad	;wreg free
  2645  00118E  C023  F06C         	movff	?_pad,?_efgtoa
  2646  001192  C024  F06D         	movff	?_pad+1,?_efgtoa+1
  2647  001196  0012               	return	
  2648  001198                     l5895:
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2651  001198  C0A4  F013         	movff	efgtoa@g,___fpclassifyf@x
  2652  00119C  C0A5  F014         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2653  0011A0  C0A6  F015         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2654  0011A4  C0A7  F016         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2655  0011A8  EC9B  F018         	call	___fpclassifyf	;wreg free
  2656  0011AC  5013               	movf	?___fpclassifyf,w,c
  2657  0011AE  1014               	iorwf	?___fpclassifyf+1,w,c
  2658  0011B0  A4D8               	btfss	status,2,c
  2659  0011B2  D035               	goto	l5913
  2660  0011B4  0EBF               	movlw	191
  2661  0011B6  0100               	movlb	0	; () banked
  2662  0011B8  6F73               	movwf	??_efgtoa& (0+255),b
  2663  0011BA  0EFF               	movlw	255
  2664  0011BC  6F74               	movwf	(??_efgtoa+1)& (0+255),b
  2665  0011BE  5172               	movf	efgtoa@c& (0+255),w,b
  2666  0011C0  6F75               	movwf	(??_efgtoa+2)& (0+255),b
  2667  0011C2  6B76               	clrf	(??_efgtoa+3)& (0+255),b
  2668  0011C4  5173               	movf	??_efgtoa& (0+255),w,b
  2669  0011C6  2775               	addwf	(??_efgtoa+2)& (0+255),f,b
  2670  0011C8  5174               	movf	(??_efgtoa+1)& (0+255),w,b
  2671  0011CA  2376               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2672  0011CC  5176               	movf	(??_efgtoa+3)& (0+255),w,b
  2673  0011CE  E106               	bnz	u7440
  2674  0011D0  0E1A               	movlw	26
  2675  0011D2  5D75               	subwf	(??_efgtoa+2)& (0+255),w,b
  2676  0011D4  B0D8               	btfsc	status,0,c
  2677  0011D6  D002               	goto	u7440
  2678  0011D8  0E01               	movlw	1
  2679  0011DA  D001               	goto	u7450
  2680  0011DC                     u7440:
  2681  0011DC  0E00               	movlw	0
  2682  0011DE                     u7450:
  2683  0011DE  6F80               	movwf	_efgtoa$1481& (0+255),b
  2684  0011E0  6B81               	clrf	(_efgtoa$1481+1)& (0+255),b
  2685                           
  2686                           ; BSR set to: 0
  2687  0011E2  5180               	movf	_efgtoa$1481& (0+255),w,b
  2688  0011E4  1181               	iorwf	(_efgtoa$1481+1)& (0+255),w,b
  2689  0011E6  B4D8               	btfsc	status,2,c
  2690  0011E8  D00D               	goto	l5905
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2694  0011EA  0E04               	movlw	low _dbuf
  2695  0011EC  25AA               	addwf	efgtoa@n& (0+255),w,b
  2696  0011EE  6E13               	movwf	strcpy@dest,c
  2697  0011F0  0E01               	movlw	high _dbuf
  2698  0011F2  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2699  0011F4  6E14               	movwf	strcpy@dest+1,c
  2700  0011F6  0E42               	movlw	low STR_11
  2701  0011F8  6E15               	movwf	strcpy@src,c
  2702  0011FA  0E10               	movlw	high STR_11
  2703  0011FC  6E16               	movwf	strcpy@src+1,c
  2704  0011FE  ECD1  F01D         	call	_strcpy	;wreg free
  2705                           
  2706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2707  001202  D7B2               	goto	l5889
  2708  001204                     l5905:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2712  001204  0E04               	movlw	low _dbuf
  2713  001206  25AA               	addwf	efgtoa@n& (0+255),w,b
  2714  001208  6E13               	movwf	strcpy@dest,c
  2715  00120A  0E01               	movlw	high _dbuf
  2716  00120C  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2717  00120E  6E14               	movwf	strcpy@dest+1,c
  2718  001210  0E4A               	movlw	low STR_12
  2719  001212  6E15               	movwf	strcpy@src,c
  2720  001214  0E10               	movlw	high STR_12
  2721  001216  6E16               	movwf	strcpy@src+1,c
  2722  001218  ECD1  F01D         	call	_strcpy	;wreg free
  2723  00121C  D7A5               	goto	l5889
  2724  00121E                     l5913:
  2725                           
  2726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2727  00121E  0E00               	movlw	0
  2728  001220  0100               	movlb	0	; () banked
  2729  001222  6FAC               	movwf	efgtoa@u& (0+255),b
  2730  001224  0E00               	movlw	0
  2731  001226  6FAD               	movwf	(efgtoa@u+1)& (0+255),b
  2732  001228  0E80               	movlw	128
  2733  00122A  6FAE               	movwf	(efgtoa@u+2)& (0+255),b
  2734  00122C  0E3F               	movlw	63
  2735  00122E  6FAF               	movwf	(efgtoa@u+3)& (0+255),b
  2736                           
  2737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2738  001230  0E00               	movlw	0
  2739  001232  6FA9               	movwf	(efgtoa@e+1)& (0+255),b
  2740  001234  0E00               	movlw	0
  2741  001236  6FA8               	movwf	efgtoa@e& (0+255),b
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2745  001238  C0A4  F013         	movff	efgtoa@g,___fleq@ff1
  2746  00123C  C0A5  F014         	movff	efgtoa@g+1,___fleq@ff1+1
  2747  001240  C0A6  F015         	movff	efgtoa@g+2,___fleq@ff1+2
  2748  001244  C0A7  F016         	movff	efgtoa@g+3,___fleq@ff1+3
  2749  001248  0E00               	movlw	0
  2750  00124A  6E17               	movwf	___fleq@ff2,c
  2751  00124C  0E00               	movlw	0
  2752  00124E  6E18               	movwf	___fleq@ff2+1,c
  2753  001250  0E00               	movlw	0
  2754  001252  6E19               	movwf	___fleq@ff2+2,c
  2755  001254  0E00               	movlw	0
  2756  001256  6E1A               	movwf	___fleq@ff2+3,c
  2757  001258  ECED  F01A         	call	___fleq	;wreg free
  2758  00125C  A0D8               	btfss	status,0,c
  2759  00125E  D01E               	goto	l5923
  2760  001260  D078               	goto	u7490
  2761  001262                     l5919:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2765  001262  C0AC  F021         	movff	efgtoa@u,___flmul@b
  2766  001266  C0AD  F022         	movff	efgtoa@u+1,___flmul@b+1
  2767  00126A  C0AE  F023         	movff	efgtoa@u+2,___flmul@b+2
  2768  00126E  C0AF  F024         	movff	efgtoa@u+3,___flmul@b+3
  2769  001272  0E00               	movlw	0
  2770  001274  6E25               	movwf	___flmul@a,c
  2771  001276  0E00               	movlw	0
  2772  001278  6E26               	movwf	___flmul@a+1,c
  2773  00127A  0E20               	movlw	32
  2774  00127C  6E27               	movwf	___flmul@a+2,c
  2775  00127E  0E41               	movlw	65
  2776  001280  6E28               	movwf	___flmul@a+3,c
  2777  001282  EC1E  F00F         	call	___flmul	;wreg free
  2778  001286  C021  F0AC         	movff	?___flmul,efgtoa@u
  2779  00128A  C022  F0AD         	movff	?___flmul+1,efgtoa@u+1
  2780  00128E  C023  F0AE         	movff	?___flmul+2,efgtoa@u+2
  2781  001292  C024  F0AF         	movff	?___flmul+3,efgtoa@u+3
  2782                           
  2783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2784  001296  0100               	movlb	0	; () banked
  2785  001298  4BA8               	infsnz	efgtoa@e& (0+255),f,b
  2786  00129A  2BA9               	incf	(efgtoa@e+1)& (0+255),f,b
  2787  00129C                     l5923:
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2790  00129C  C0A4  F060         	movff	efgtoa@g,___flge@ff1
  2791  0012A0  C0A5  F061         	movff	efgtoa@g+1,___flge@ff1+1
  2792  0012A4  C0A6  F062         	movff	efgtoa@g+2,___flge@ff1+2
  2793  0012A8  C0A7  F063         	movff	efgtoa@g+3,___flge@ff1+3
  2794  0012AC  0E00               	movlw	0
  2795  0012AE  6E25               	movwf	___flmul@a,c
  2796  0012B0  0E00               	movlw	0
  2797  0012B2  6E26               	movwf	___flmul@a+1,c
  2798  0012B4  0E20               	movlw	32
  2799  0012B6  6E27               	movwf	___flmul@a+2,c
  2800  0012B8  0E41               	movlw	65
  2801  0012BA  6E28               	movwf	___flmul@a+3,c
  2802  0012BC  C0AC  F021         	movff	efgtoa@u,___flmul@b
  2803  0012C0  C0AD  F022         	movff	efgtoa@u+1,___flmul@b+1
  2804  0012C4  C0AE  F023         	movff	efgtoa@u+2,___flmul@b+2
  2805  0012C8  C0AF  F024         	movff	efgtoa@u+3,___flmul@b+3
  2806  0012CC  EC1E  F00F         	call	___flmul	;wreg free
  2807  0012D0  C021  F064         	movff	?___flmul,___flge@ff2
  2808  0012D4  C022  F065         	movff	?___flmul+1,___flge@ff2+1
  2809  0012D8  C023  F066         	movff	?___flmul+2,___flge@ff2+2
  2810  0012DC  C024  F067         	movff	?___flmul+3,___flge@ff2+3
  2811  0012E0  EC32  F018         	call	___flge	;wreg free
  2812  0012E4  0100               	movlb	0	; () banked
  2813  0012E6  A0D8               	btfss	status,0,c
  2814  0012E8  D01F               	goto	l5929
  2815  0012EA  D7BB               	goto	l5919
  2816  0012EC                     l5925:
  2817                           
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2820  0012EC  C0AC  F013         	movff	efgtoa@u,___fldiv@b
  2821  0012F0  C0AD  F014         	movff	efgtoa@u+1,___fldiv@b+1
  2822  0012F4  C0AE  F015         	movff	efgtoa@u+2,___fldiv@b+2
  2823  0012F8  C0AF  F016         	movff	efgtoa@u+3,___fldiv@b+3
  2824  0012FC  0E00               	movlw	0
  2825  0012FE  6E17               	movwf	___fldiv@a,c
  2826  001300  0E00               	movlw	0
  2827  001302  6E18               	movwf	___fldiv@a+1,c
  2828  001304  0E20               	movlw	32
  2829  001306  6E19               	movwf	___fldiv@a+2,c
  2830  001308  0E41               	movlw	65
  2831  00130A  6E1A               	movwf	___fldiv@a+3,c
  2832  00130C  EC4D  F012         	call	___fldiv	;wreg free
  2833  001310  C013  F0AC         	movff	?___fldiv,efgtoa@u
  2834  001314  C014  F0AD         	movff	?___fldiv+1,efgtoa@u+1
  2835  001318  C015  F0AE         	movff	?___fldiv+2,efgtoa@u+2
  2836  00131C  C016  F0AF         	movff	?___fldiv+3,efgtoa@u+3
  2837                           
  2838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2839  001320  0100               	movlb	0	; () banked
  2840  001322  07A8               	decf	efgtoa@e& (0+255),f,b
  2841  001324  A0D8               	btfss	status,0,c
  2842  001326  07A9               	decf	(efgtoa@e+1)& (0+255),f,b
  2843  001328                     l5929:
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2847  001328  C0A4  F060         	movff	efgtoa@g,___flge@ff1
  2848  00132C  C0A5  F061         	movff	efgtoa@g+1,___flge@ff1+1
  2849  001330  C0A6  F062         	movff	efgtoa@g+2,___flge@ff1+2
  2850  001334  C0A7  F063         	movff	efgtoa@g+3,___flge@ff1+3
  2851  001338  C0AC  F064         	movff	efgtoa@u,___flge@ff2
  2852  00133C  C0AD  F065         	movff	efgtoa@u+1,___flge@ff2+1
  2853  001340  C0AE  F066         	movff	efgtoa@u+2,___flge@ff2+2
  2854  001344  C0AF  F067         	movff	efgtoa@u+3,___flge@ff2+3
  2855  001348  EC32  F018         	call	___flge	;wreg free
  2856  00134C  0100               	movlb	0	; () banked
  2857  00134E  A0D8               	btfss	status,0,c
  2858  001350  D7CD               	goto	l5925
  2859  001352                     u7490:
  2860                           
  2861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2862  001352  C072  F019         	movff	efgtoa@c,tolower@c
  2863  001356  6A1A               	clrf	tolower@c+1,c
  2864  001358  ECFB  F01D         	call	_tolower	;wreg free
  2865  00135C  5019               	movf	?_tolower,w,c
  2866  00135E  0100               	movlb	0	; () banked
  2867  001360  6F99               	movwf	efgtoa@mode& (0+255),b
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2871  001362  C099  F096         	movff	efgtoa@mode,efgtoa@nmode
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2875  001366  0E67               	movlw	103
  2876  001368  1999               	xorwf	efgtoa@mode& (0+255),w,b
  2877  00136A  A4D8               	btfss	status,2,c
  2878  00136C  D019               	goto	l5945
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2882  00136E  503A               	movf	_prec,w,c
  2883  001370  103B               	iorwf	_prec+1,w,c
  2884  001372  A4D8               	btfss	status,2,c
  2885  001374  D004               	goto	l5941
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2889  001376  0E00               	movlw	0
  2890  001378  6E3B               	movwf	_prec+1,c
  2891  00137A  0E01               	movlw	1
  2892  00137C  6E3A               	movwf	_prec,c
  2893  00137E                     l5941:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2897  00137E  BE3B               	btfsc	_prec+1,7,c
  2898  001380  D005               	goto	u7520
  2899  001382  503B               	movf	_prec+1,w,c
  2900  001384  E108               	bnz	l410
  2901  001386  043A               	decf	_prec,w,c
  2902  001388  B0D8               	btfsc	status,0,c
  2903  00138A  D005               	goto	l410
  2904  00138C                     u7520:
  2905                           
  2906                           ; BSR set to: 0
  2907  00138C  0E00               	movlw	0
  2908  00138E  6F95               	movwf	(efgtoa@p+1)& (0+255),b
  2909  001390  0E06               	movlw	6
  2910  001392  6F94               	movwf	efgtoa@p& (0+255),b
  2911  001394  D008               	goto	l5951
  2912  001396                     l410:
  2913                           
  2914                           ; BSR set to: 0
  2915  001396  C03A  F094         	movff	_prec,efgtoa@p
  2916  00139A  C03B  F095         	movff	_prec+1,efgtoa@p+1
  2917  00139E  D003               	goto	l5951
  2918  0013A0                     l5945:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2922  0013A0  AE3B               	btfss	_prec+1,7,c
  2923  0013A2  D7F9               	goto	l410
  2924  0013A4  D7F3               	goto	u7520
  2925  0013A6                     l5951:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2929  0013A6  0E67               	movlw	103
  2930  0013A8  1999               	xorwf	efgtoa@mode& (0+255),w,b
  2931  0013AA  A4D8               	btfss	status,2,c
  2932  0013AC  D022               	goto	l5961
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2936  0013AE  AFA9               	btfss	(efgtoa@e+1)& (0+255),7,b
  2937  0013B0  D006               	goto	u7550
  2938  0013B2  0EFC               	movlw	252
  2939  0013B4  5DA8               	subwf	efgtoa@e& (0+255),w,b
  2940  0013B6  0EFF               	movlw	255
  2941  0013B8  59A9               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2942  0013BA  A0D8               	btfss	status,0,c
  2943  0013BC  D018               	goto	l5959
  2944  0013BE                     u7550:
  2945                           
  2946                           ; BSR set to: 0
  2947  0013BE  0EFF               	movlw	255
  2948  0013C0  6F73               	movwf	??_efgtoa& (0+255),b
  2949  0013C2  0EFF               	movlw	255
  2950  0013C4  6F74               	movwf	(??_efgtoa+1)& (0+255),b
  2951  0013C6  C094  F075         	movff	efgtoa@p,??_efgtoa+2
  2952  0013CA  C095  F076         	movff	efgtoa@p+1,??_efgtoa+3
  2953  0013CE  5173               	movf	??_efgtoa& (0+255),w,b
  2954  0013D0  2775               	addwf	(??_efgtoa+2)& (0+255),f,b
  2955  0013D2  5174               	movf	(??_efgtoa+1)& (0+255),w,b
  2956  0013D4  2376               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2957  0013D6  51A8               	movf	efgtoa@e& (0+255),w,b
  2958  0013D8  5D75               	subwf	(??_efgtoa+2)& (0+255),w,b
  2959  0013DA  5176               	movf	(??_efgtoa+3)& (0+255),w,b
  2960  0013DC  0A80               	xorlw	128
  2961  0013DE  6F77               	movwf	(??_efgtoa+4)& (0+255),b
  2962  0013E0  51A9               	movf	(efgtoa@e+1)& (0+255),w,b
  2963  0013E2  0A80               	xorlw	128
  2964  0013E4  5977               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2965  0013E6  A0D8               	btfss	status,0,c
  2966  0013E8  D002               	goto	l5959
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2970  0013EA  0E66               	movlw	102
  2971  0013EC  D001               	goto	L3
  2972  0013EE                     l5959:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2976  0013EE  0E65               	movlw	101
  2977  0013F0                     L3:
  2978  0013F0  6F96               	movwf	efgtoa@nmode& (0+255),b
  2979  0013F2                     l5961:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2983  0013F2  C094  F08C         	movff	efgtoa@p,efgtoa@m
  2984  0013F6  C095  F08D         	movff	efgtoa@p+1,efgtoa@m+1
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2988  0013FA  0E67               	movlw	103
  2989  0013FC  1999               	xorwf	efgtoa@mode& (0+255),w,b
  2990  0013FE  A4D8               	btfss	status,2,c
  2991  001400  D005               	goto	u7590
  2992                           
  2993                           ; BSR set to: 0
  2994  001402  0E66               	movlw	102
  2995  001404  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  2996  001406  B4D8               	btfsc	status,2,c
  2997                           
  2998                           ; BSR set to: 0
  2999  001408  AFA9               	btfss	(efgtoa@e+1)& (0+255),7,b
  3000  00140A  D002               	goto	l5971
  3001  00140C                     u7590:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3005  00140C  4B8C               	infsnz	efgtoa@m& (0+255),f,b
  3006  00140E  2B8D               	incf	(efgtoa@m+1)& (0+255),f,b
  3007  001410                     l5971:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3011  001410  0E66               	movlw	102
  3012  001412  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3013  001414  A4D8               	btfss	status,2,c
  3014  001416  D016               	goto	l5981
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3018  001418  AFA9               	btfss	(efgtoa@e+1)& (0+255),7,b
  3019  00141A  D00C               	goto	l5977
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3023  00141C  0E00               	movlw	0
  3024  00141E  6FAC               	movwf	efgtoa@u& (0+255),b
  3025  001420  0E00               	movlw	0
  3026  001422  6FAD               	movwf	(efgtoa@u+1)& (0+255),b
  3027  001424  0E80               	movlw	128
  3028  001426  6FAE               	movwf	(efgtoa@u+2)& (0+255),b
  3029  001428  0E3F               	movlw	63
  3030  00142A  6FAF               	movwf	(efgtoa@u+3)& (0+255),b
  3031                           
  3032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3033  00142C  0E00               	movlw	0
  3034  00142E  6FA9               	movwf	(efgtoa@e+1)& (0+255),b
  3035  001430  0E00               	movlw	0
  3036  001432  6FA8               	movwf	efgtoa@e& (0+255),b
  3037  001434                     l5977:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3041  001434  0E67               	movlw	103
  3042  001436  1999               	xorwf	efgtoa@mode& (0+255),w,b
  3043  001438  B4D8               	btfsc	status,2,c
  3044  00143A  D004               	goto	l5981
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3048  00143C  51A8               	movf	efgtoa@e& (0+255),w,b
  3049  00143E  278C               	addwf	efgtoa@m& (0+255),f,b
  3050  001440  51A9               	movf	(efgtoa@e+1)& (0+255),w,b
  3051  001442  238D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3052  001444                     l5981:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3056  001444  0E00               	movlw	0
  3057  001446  6FA3               	movwf	(efgtoa@i+1)& (0+255),b
  3058  001448  0E00               	movlw	0
  3059  00144A  6FA2               	movwf	efgtoa@i& (0+255),b
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3063  00144C  C0A4  F09A         	movff	efgtoa@g,efgtoa@h
  3064  001450  C0A5  F09B         	movff	efgtoa@g+1,efgtoa@h+1
  3065  001454  C0A6  F09C         	movff	efgtoa@g+2,efgtoa@h+2
  3066  001458  C0A7  F09D         	movff	efgtoa@g+3,efgtoa@h+3
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3070  00145C  C0AC  F078         	movff	efgtoa@u,efgtoa@ou
  3071  001460  C0AD  F079         	movff	efgtoa@u+1,efgtoa@ou+1
  3072  001464  C0AE  F07A         	movff	efgtoa@u+2,efgtoa@ou+2
  3073  001468  C0AF  F07B         	movff	efgtoa@u+3,efgtoa@ou+3
  3074                           
  3075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3076  00146C  D07B               	goto	l5995
  3077  00146E                     l5987:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3081  00146E  C09A  F013         	movff	efgtoa@h,___fldiv@b
  3082  001472  C09B  F014         	movff	efgtoa@h+1,___fldiv@b+1
  3083  001476  C09C  F015         	movff	efgtoa@h+2,___fldiv@b+2
  3084  00147A  C09D  F016         	movff	efgtoa@h+3,___fldiv@b+3
  3085  00147E  C0AC  F017         	movff	efgtoa@u,___fldiv@a
  3086  001482  C0AD  F018         	movff	efgtoa@u+1,___fldiv@a+1
  3087  001486  C0AE  F019         	movff	efgtoa@u+2,___fldiv@a+2
  3088  00148A  C0AF  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  3089  00148E  EC4D  F012         	call	___fldiv	;wreg free
  3090  001492  C013  F02C         	movff	?___fldiv,floorf@x
  3091  001496  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  3092  00149A  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  3093  00149E  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  3094  0014A2  EC91  F013         	call	_floorf	;wreg free
  3095  0014A6  C02C  F09E         	movff	?_floorf,efgtoa@l
  3096  0014AA  C02D  F09F         	movff	?_floorf+1,efgtoa@l+1
  3097  0014AE  C02E  F0A0         	movff	?_floorf+2,efgtoa@l+2
  3098  0014B2  C02F  F0A1         	movff	?_floorf+3,efgtoa@l+3
  3099                           
  3100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3101  0014B6  C09E  F013         	movff	efgtoa@l,___fltol@f1
  3102  0014BA  C09F  F014         	movff	efgtoa@l+1,___fltol@f1+1
  3103  0014BE  C0A0  F015         	movff	efgtoa@l+2,___fltol@f1+2
  3104  0014C2  C0A1  F016         	movff	efgtoa@l+3,___fltol@f1+3
  3105  0014C6  EC01  F019         	call	___fltol	;wreg free
  3106  0014CA  C013  F090         	movff	?___fltol,efgtoa@d
  3107  0014CE  C014  F091         	movff	?___fltol+1,efgtoa@d+1
  3108                           
  3109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3110  0014D2  C09A  F060         	movff	efgtoa@h,___flsub@b
  3111  0014D6  C09B  F061         	movff	efgtoa@h+1,___flsub@b+1
  3112  0014DA  C09C  F062         	movff	efgtoa@h+2,___flsub@b+2
  3113  0014DE  C09D  F063         	movff	efgtoa@h+3,___flsub@b+3
  3114  0014E2  C0AC  F025         	movff	efgtoa@u,___flmul@a
  3115  0014E6  C0AD  F026         	movff	efgtoa@u+1,___flmul@a+1
  3116  0014EA  C0AE  F027         	movff	efgtoa@u+2,___flmul@a+2
  3117  0014EE  C0AF  F028         	movff	efgtoa@u+3,___flmul@a+3
  3118  0014F2  C09E  F021         	movff	efgtoa@l,___flmul@b
  3119  0014F6  C09F  F022         	movff	efgtoa@l+1,___flmul@b+1
  3120  0014FA  C0A0  F023         	movff	efgtoa@l+2,___flmul@b+2
  3121  0014FE  C0A1  F024         	movff	efgtoa@l+3,___flmul@b+3
  3122  001502  EC1E  F00F         	call	___flmul	;wreg free
  3123  001506  C021  F064         	movff	?___flmul,___flsub@a
  3124  00150A  C022  F065         	movff	?___flmul+1,___flsub@a+1
  3125  00150E  C023  F066         	movff	?___flmul+2,___flsub@a+2
  3126  001512  C024  F067         	movff	?___flmul+3,___flsub@a+3
  3127  001516  EC21  F01E         	call	___flsub	;wreg free
  3128  00151A  C060  F09A         	movff	?___flsub,efgtoa@h
  3129  00151E  C061  F09B         	movff	?___flsub+1,efgtoa@h+1
  3130  001522  C062  F09C         	movff	?___flsub+2,efgtoa@h+2
  3131  001526  C063  F09D         	movff	?___flsub+3,efgtoa@h+3
  3132                           
  3133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3134  00152A  C0AC  F013         	movff	efgtoa@u,___fldiv@b
  3135  00152E  C0AD  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3136  001532  C0AE  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3137  001536  C0AF  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3138  00153A  0E00               	movlw	0
  3139  00153C  6E17               	movwf	___fldiv@a,c
  3140  00153E  0E00               	movlw	0
  3141  001540  6E18               	movwf	___fldiv@a+1,c
  3142  001542  0E20               	movlw	32
  3143  001544  6E19               	movwf	___fldiv@a+2,c
  3144  001546  0E41               	movlw	65
  3145  001548  6E1A               	movwf	___fldiv@a+3,c
  3146  00154A  EC4D  F012         	call	___fldiv	;wreg free
  3147  00154E  C013  F0AC         	movff	?___fldiv,efgtoa@u
  3148  001552  C014  F0AD         	movff	?___fldiv+1,efgtoa@u+1
  3149  001556  C015  F0AE         	movff	?___fldiv+2,efgtoa@u+2
  3150  00155A  C016  F0AF         	movff	?___fldiv+3,efgtoa@u+3
  3151                           
  3152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3153  00155E  0100               	movlb	0	; () banked
  3154  001560  4BA2               	infsnz	efgtoa@i& (0+255),f,b
  3155  001562  2BA3               	incf	(efgtoa@i+1)& (0+255),f,b
  3156  001564                     l5995:
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3160  001564  518C               	movf	efgtoa@m& (0+255),w,b
  3161  001566  5DA2               	subwf	efgtoa@i& (0+255),w,b
  3162  001568  51A3               	movf	(efgtoa@i+1)& (0+255),w,b
  3163  00156A  0A80               	xorlw	128
  3164  00156C  6F73               	movwf	??_efgtoa& (0+255),b
  3165  00156E  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  3166  001570  0A80               	xorlw	128
  3167  001572  5973               	subwfb	??_efgtoa& (0+255),w,b
  3168  001574  A0D8               	btfss	status,0,c
  3169  001576  D77B               	goto	l5987
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3173  001578  C0AC  F021         	movff	efgtoa@u,___flmul@b
  3174  00157C  C0AD  F022         	movff	efgtoa@u+1,___flmul@b+1
  3175  001580  C0AE  F023         	movff	efgtoa@u+2,___flmul@b+2
  3176  001584  C0AF  F024         	movff	efgtoa@u+3,___flmul@b+3
  3177  001588  0E00               	movlw	0
  3178  00158A  6E25               	movwf	___flmul@a,c
  3179  00158C  0E00               	movlw	0
  3180  00158E  6E26               	movwf	___flmul@a+1,c
  3181  001590  0EA0               	movlw	160
  3182  001592  6E27               	movwf	___flmul@a+2,c
  3183  001594  0E40               	movlw	64
  3184  001596  6E28               	movwf	___flmul@a+3,c
  3185  001598  EC1E  F00F         	call	___flmul	;wreg free
  3186  00159C  C021  F09E         	movff	?___flmul,efgtoa@l
  3187  0015A0  C022  F09F         	movff	?___flmul+1,efgtoa@l+1
  3188  0015A4  C023  F0A0         	movff	?___flmul+2,efgtoa@l+2
  3189  0015A8  C024  F0A1         	movff	?___flmul+3,efgtoa@l+3
  3190                           
  3191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3192  0015AC  C09A  F060         	movff	efgtoa@h,___flge@ff1
  3193  0015B0  C09B  F061         	movff	efgtoa@h+1,___flge@ff1+1
  3194  0015B4  C09C  F062         	movff	efgtoa@h+2,___flge@ff1+2
  3195  0015B8  C09D  F063         	movff	efgtoa@h+3,___flge@ff1+3
  3196  0015BC  C09E  F064         	movff	efgtoa@l,___flge@ff2
  3197  0015C0  C09F  F065         	movff	efgtoa@l+1,___flge@ff2+1
  3198  0015C4  C0A0  F066         	movff	efgtoa@l+2,___flge@ff2+2
  3199  0015C8  C0A1  F067         	movff	efgtoa@l+3,___flge@ff2+3
  3200  0015CC  EC32  F018         	call	___flge	;wreg free
  3201  0015D0  0100               	movlb	0	; () banked
  3202  0015D2  A0D8               	btfss	status,0,c
  3203  0015D4  D017               	goto	u7660
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3207                           
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3212  0015D6  C09A  F013         	movff	efgtoa@h,___fleq@ff1
  3213  0015DA  C09B  F014         	movff	efgtoa@h+1,___fleq@ff1+1
  3214  0015DE  C09C  F015         	movff	efgtoa@h+2,___fleq@ff1+2
  3215  0015E2  C09D  F016         	movff	efgtoa@h+3,___fleq@ff1+3
  3216  0015E6  C09E  F017         	movff	efgtoa@l,___fleq@ff2
  3217  0015EA  C09F  F018         	movff	efgtoa@l+1,___fleq@ff2+1
  3218  0015EE  C0A0  F019         	movff	efgtoa@l+2,___fleq@ff2+2
  3219  0015F2  C0A1  F01A         	movff	efgtoa@l+3,___fleq@ff2+3
  3220  0015F6  ECED  F01A         	call	___fleq	;wreg free
  3221  0015FA  A0D8               	btfss	status,0,c
  3222  0015FC  D00B               	goto	l6009
  3223  0015FE  0100               	movlb	0	; () banked
  3224  001600  B190               	btfsc	efgtoa@d& (0+255),0,b
  3225  001602  D008               	goto	l6009
  3226  001604                     u7660:
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3230  001604  0E00               	movlw	0
  3231  001606  6F9E               	movwf	efgtoa@l& (0+255),b
  3232  001608  0E00               	movlw	0
  3233  00160A  6F9F               	movwf	(efgtoa@l+1)& (0+255),b
  3234  00160C  0E00               	movlw	0
  3235  00160E  6FA0               	movwf	(efgtoa@l+2)& (0+255),b
  3236  001610  0E00               	movlw	0
  3237  001612  6FA1               	movwf	(efgtoa@l+3)& (0+255),b
  3238  001614                     l6009:
  3239                           
  3240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3241  001614  C0A4  F013         	movff	efgtoa@g,___fladd@b
  3242  001618  C0A5  F014         	movff	efgtoa@g+1,___fladd@b+1
  3243  00161C  C0A6  F015         	movff	efgtoa@g+2,___fladd@b+2
  3244  001620  C0A7  F016         	movff	efgtoa@g+3,___fladd@b+3
  3245  001624  C09E  F017         	movff	efgtoa@l,___fladd@a
  3246  001628  C09F  F018         	movff	efgtoa@l+1,___fladd@a+1
  3247  00162C  C0A0  F019         	movff	efgtoa@l+2,___fladd@a+2
  3248  001630  C0A1  F01A         	movff	efgtoa@l+3,___fladd@a+3
  3249  001634  ECC7  F010         	call	___fladd	;wreg free
  3250  001638  C013  F09A         	movff	?___fladd,efgtoa@h
  3251  00163C  C014  F09B         	movff	?___fladd+1,efgtoa@h+1
  3252  001640  C015  F09C         	movff	?___fladd+2,efgtoa@h+2
  3253  001644  C016  F09D         	movff	?___fladd+3,efgtoa@h+3
  3254                           
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3256  001648  C078  F0AC         	movff	efgtoa@ou,efgtoa@u
  3257  00164C  C079  F0AD         	movff	efgtoa@ou+1,efgtoa@u+1
  3258  001650  C07A  F0AE         	movff	efgtoa@ou+2,efgtoa@u+2
  3259  001654  C07B  F0AF         	movff	efgtoa@ou+3,efgtoa@u+3
  3260                           
  3261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3262  001658  0E65               	movlw	101
  3263  00165A  0100               	movlb	0	; () banked
  3264  00165C  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3265  00165E  B4D8               	btfsc	status,2,c
  3266  001660  D005               	goto	l6017
  3267                           
  3268                           ; BSR set to: 0
  3269  001662  C0A8  F08E         	movff	efgtoa@e,efgtoa@ne
  3270  001666  C0A9  F08F         	movff	efgtoa@e+1,efgtoa@ne+1
  3271  00166A  D004               	goto	l436
  3272  00166C                     l6017:
  3273                           
  3274                           ; BSR set to: 0
  3275  00166C  0E00               	movlw	0
  3276  00166E  6F8F               	movwf	(efgtoa@ne+1)& (0+255),b
  3277  001670  0E00               	movlw	0
  3278  001672  6F8E               	movwf	efgtoa@ne& (0+255),b
  3279  001674                     l436:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3283  001674  0E00               	movlw	0
  3284  001676  6F8B               	movwf	(efgtoa@pp+1)& (0+255),b
  3285  001678  0E00               	movlw	0
  3286  00167A  6F8A               	movwf	efgtoa@pp& (0+255),b
  3287                           
  3288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3289  00167C  0E00               	movlw	0
  3290  00167E  6F89               	movwf	(efgtoa@t+1)& (0+255),b
  3291  001680  0E00               	movlw	0
  3292  001682  6F88               	movwf	efgtoa@t& (0+255),b
  3293                           
  3294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3295  001684  0E00               	movlw	0
  3296  001686  6FA3               	movwf	(efgtoa@i+1)& (0+255),b
  3297  001688  0E00               	movlw	0
  3298  00168A  6FA2               	movwf	efgtoa@i& (0+255),b
  3299                           
  3300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3301  00168C  D0C7               	goto	l6067
  3302  00168E                     l6019:
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3306  00168E  C09A  F013         	movff	efgtoa@h,___fldiv@b
  3307  001692  C09B  F014         	movff	efgtoa@h+1,___fldiv@b+1
  3308  001696  C09C  F015         	movff	efgtoa@h+2,___fldiv@b+2
  3309  00169A  C09D  F016         	movff	efgtoa@h+3,___fldiv@b+3
  3310  00169E  C0AC  F017         	movff	efgtoa@u,___fldiv@a
  3311  0016A2  C0AD  F018         	movff	efgtoa@u+1,___fldiv@a+1
  3312  0016A6  C0AE  F019         	movff	efgtoa@u+2,___fldiv@a+2
  3313  0016AA  C0AF  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  3314  0016AE  EC4D  F012         	call	___fldiv	;wreg free
  3315  0016B2  C013  F02C         	movff	?___fldiv,floorf@x
  3316  0016B6  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  3317  0016BA  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  3318  0016BE  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  3319  0016C2  EC91  F013         	call	_floorf	;wreg free
  3320  0016C6  C02C  F09E         	movff	?_floorf,efgtoa@l
  3321  0016CA  C02D  F09F         	movff	?_floorf+1,efgtoa@l+1
  3322  0016CE  C02E  F0A0         	movff	?_floorf+2,efgtoa@l+2
  3323  0016D2  C02F  F0A1         	movff	?_floorf+3,efgtoa@l+3
  3324                           
  3325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3326  0016D6  C09E  F013         	movff	efgtoa@l,___fltol@f1
  3327  0016DA  C09F  F014         	movff	efgtoa@l+1,___fltol@f1+1
  3328  0016DE  C0A0  F015         	movff	efgtoa@l+2,___fltol@f1+2
  3329  0016E2  C0A1  F016         	movff	efgtoa@l+3,___fltol@f1+3
  3330  0016E6  EC01  F019         	call	___fltol	;wreg free
  3331  0016EA  C013  F090         	movff	?___fltol,efgtoa@d
  3332  0016EE  C014  F091         	movff	?___fltol+1,efgtoa@d+1
  3333                           
  3334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3335  0016F2  B83C               	btfsc	_flags,4,c
  3336  0016F4  D00D               	goto	l6031
  3337  0016F6  0100               	movlb	0	; () banked
  3338  0016F8  5190               	movf	efgtoa@d& (0+255),w,b
  3339  0016FA  1191               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3340  0016FC  A4D8               	btfss	status,2,c
  3341  0016FE  D008               	goto	l6031
  3342                           
  3343                           ; BSR set to: 0
  3344  001700  0E67               	movlw	103
  3345  001702  1999               	xorwf	efgtoa@mode& (0+255),w,b
  3346  001704  B4D8               	btfsc	status,2,c
  3347                           
  3348                           ; BSR set to: 0
  3349  001706  AF8F               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3350  001708  D003               	goto	l6031
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3354  00170A  4B88               	infsnz	efgtoa@t& (0+255),f,b
  3355  00170C  2B89               	incf	(efgtoa@t+1)& (0+255),f,b
  3356                           
  3357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3358  00170E  D03A               	goto	l6059
  3359  001710                     l6031:
  3360                           
  3361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3362  001710  0100               	movlb	0	; () banked
  3363  001712  518A               	movf	efgtoa@pp& (0+255),w,b
  3364  001714  118B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3365  001716  B4D8               	btfsc	status,2,c
  3366                           
  3367                           ; BSR set to: 0
  3368  001718  AF8F               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3369  00171A  D022               	goto	l6051
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3373  00171C  0E04               	movlw	low _dbuf
  3374  00171E  25AA               	addwf	efgtoa@n& (0+255),w,b
  3375  001720  6ED9               	movwf	fsr2l,c
  3376  001722  0E01               	movlw	high _dbuf
  3377  001724  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3378  001726  6EDA               	movwf	fsr2h,c
  3379  001728  0E2E               	movlw	46
  3380  00172A  6EDF               	movwf	indf2,c
  3381                           
  3382                           ; BSR set to: 0
  3383  00172C  4BAA               	infsnz	efgtoa@n& (0+255),f,b
  3384  00172E  2BAB               	incf	(efgtoa@n+1)& (0+255),f,b
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3388  001730  0797               	decf	efgtoa@w& (0+255),f,b
  3389  001732  A0D8               	btfss	status,0,c
  3390  001734  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3394  001736  0E00               	movlw	0
  3395  001738  6F8B               	movwf	(efgtoa@pp+1)& (0+255),b
  3396  00173A  0E01               	movlw	1
  3397  00173C  6F8A               	movwf	efgtoa@pp& (0+255),b
  3398  00173E  D010               	goto	l6051
  3399  001740                     l6043:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3403  001740  0E04               	movlw	low _dbuf
  3404  001742  25AA               	addwf	efgtoa@n& (0+255),w,b
  3405  001744  6ED9               	movwf	fsr2l,c
  3406  001746  0E01               	movlw	high _dbuf
  3407  001748  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3408  00174A  6EDA               	movwf	fsr2h,c
  3409  00174C  0E30               	movlw	48
  3410  00174E  6EDF               	movwf	indf2,c
  3411                           
  3412                           ; BSR set to: 0
  3413  001750  4BAA               	infsnz	efgtoa@n& (0+255),f,b
  3414  001752  2BAB               	incf	(efgtoa@n+1)& (0+255),f,b
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3418  001754  0797               	decf	efgtoa@w& (0+255),f,b
  3419  001756  A0D8               	btfss	status,0,c
  3420  001758  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3424  00175A  0788               	decf	efgtoa@t& (0+255),f,b
  3425  00175C  A0D8               	btfss	status,0,c
  3426  00175E  0789               	decf	(efgtoa@t+1)& (0+255),f,b
  3427  001760                     l6051:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3431  001760  5188               	movf	efgtoa@t& (0+255),w,b
  3432  001762  1189               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3433  001764  A4D8               	btfss	status,2,c
  3434  001766  D7EC               	goto	l6043
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3438  001768  0E04               	movlw	low _dbuf
  3439  00176A  25AA               	addwf	efgtoa@n& (0+255),w,b
  3440  00176C  6ED9               	movwf	fsr2l,c
  3441  00176E  0E01               	movlw	high _dbuf
  3442  001770  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3443  001772  6EDA               	movwf	fsr2h,c
  3444  001774  5190               	movf	efgtoa@d& (0+255),w,b
  3445  001776  0F30               	addlw	48
  3446  001778  6EDF               	movwf	indf2,c
  3447                           
  3448                           ; BSR set to: 0
  3449  00177A  4BAA               	infsnz	efgtoa@n& (0+255),f,b
  3450  00177C  2BAB               	incf	(efgtoa@n+1)& (0+255),f,b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3454  00177E  0797               	decf	efgtoa@w& (0+255),f,b
  3455  001780  A0D8               	btfss	status,0,c
  3456  001782  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3457  001784                     l6059:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3461  001784  C09A  F060         	movff	efgtoa@h,___flsub@b
  3462  001788  C09B  F061         	movff	efgtoa@h+1,___flsub@b+1
  3463  00178C  C09C  F062         	movff	efgtoa@h+2,___flsub@b+2
  3464  001790  C09D  F063         	movff	efgtoa@h+3,___flsub@b+3
  3465  001794  C0AC  F025         	movff	efgtoa@u,___flmul@a
  3466  001798  C0AD  F026         	movff	efgtoa@u+1,___flmul@a+1
  3467  00179C  C0AE  F027         	movff	efgtoa@u+2,___flmul@a+2
  3468  0017A0  C0AF  F028         	movff	efgtoa@u+3,___flmul@a+3
  3469  0017A4  C09E  F021         	movff	efgtoa@l,___flmul@b
  3470  0017A8  C09F  F022         	movff	efgtoa@l+1,___flmul@b+1
  3471  0017AC  C0A0  F023         	movff	efgtoa@l+2,___flmul@b+2
  3472  0017B0  C0A1  F024         	movff	efgtoa@l+3,___flmul@b+3
  3473  0017B4  EC1E  F00F         	call	___flmul	;wreg free
  3474  0017B8  C021  F064         	movff	?___flmul,___flsub@a
  3475  0017BC  C022  F065         	movff	?___flmul+1,___flsub@a+1
  3476  0017C0  C023  F066         	movff	?___flmul+2,___flsub@a+2
  3477  0017C4  C024  F067         	movff	?___flmul+3,___flsub@a+3
  3478  0017C8  EC21  F01E         	call	___flsub	;wreg free
  3479  0017CC  C060  F09A         	movff	?___flsub,efgtoa@h
  3480  0017D0  C061  F09B         	movff	?___flsub+1,efgtoa@h+1
  3481  0017D4  C062  F09C         	movff	?___flsub+2,efgtoa@h+2
  3482  0017D8  C063  F09D         	movff	?___flsub+3,efgtoa@h+3
  3483                           
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3485  0017DC  C0AC  F013         	movff	efgtoa@u,___fldiv@b
  3486  0017E0  C0AD  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3487  0017E4  C0AE  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3488  0017E8  C0AF  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3489  0017EC  0E00               	movlw	0
  3490  0017EE  6E17               	movwf	___fldiv@a,c
  3491  0017F0  0E00               	movlw	0
  3492  0017F2  6E18               	movwf	___fldiv@a+1,c
  3493  0017F4  0E20               	movlw	32
  3494  0017F6  6E19               	movwf	___fldiv@a+2,c
  3495  0017F8  0E41               	movlw	65
  3496  0017FA  6E1A               	movwf	___fldiv@a+3,c
  3497  0017FC  EC4D  F012         	call	___fldiv	;wreg free
  3498  001800  C013  F0AC         	movff	?___fldiv,efgtoa@u
  3499  001804  C014  F0AD         	movff	?___fldiv+1,efgtoa@u+1
  3500  001808  C015  F0AE         	movff	?___fldiv+2,efgtoa@u+2
  3501  00180C  C016  F0AF         	movff	?___fldiv+3,efgtoa@u+3
  3502                           
  3503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3504  001810  0100               	movlb	0	; () banked
  3505  001812  078E               	decf	efgtoa@ne& (0+255),f,b
  3506  001814  A0D8               	btfss	status,0,c
  3507  001816  078F               	decf	(efgtoa@ne+1)& (0+255),f,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3511  001818  4BA2               	infsnz	efgtoa@i& (0+255),f,b
  3512  00181A  2BA3               	incf	(efgtoa@i+1)& (0+255),f,b
  3513  00181C                     l6067:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3517  00181C  518C               	movf	efgtoa@m& (0+255),w,b
  3518  00181E  5DA2               	subwf	efgtoa@i& (0+255),w,b
  3519  001820  51A3               	movf	(efgtoa@i+1)& (0+255),w,b
  3520  001822  0A80               	xorlw	128
  3521  001824  6F73               	movwf	??_efgtoa& (0+255),b
  3522  001826  518D               	movf	(efgtoa@m+1)& (0+255),w,b
  3523  001828  0A80               	xorlw	128
  3524  00182A  5973               	subwfb	??_efgtoa& (0+255),w,b
  3525  00182C  B0D8               	btfsc	status,0,c
  3526  00182E  D008               	goto	u7760
  3527                           
  3528                           ; BSR set to: 0
  3529  001830  BFAB               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3530  001832  D72D               	goto	l6019
  3531  001834  51AB               	movf	(efgtoa@n+1)& (0+255),w,b
  3532  001836  E104               	bnz	u7760
  3533  001838  0E4B               	movlw	75
  3534  00183A  5DAA               	subwf	efgtoa@n& (0+255),w,b
  3535  00183C  A0D8               	btfss	status,0,c
  3536  00183E  D727               	goto	l6019
  3537  001840                     u7760:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3541  001840  518A               	movf	efgtoa@pp& (0+255),w,b
  3542  001842  118B               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3543  001844  B4D8               	btfsc	status,2,c
  3544                           
  3545                           ; BSR set to: 0
  3546  001846  A83C               	btfss	_flags,4,c
  3547  001848  D00A               	goto	l6079
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3551  00184A  0E04               	movlw	low _dbuf
  3552  00184C  25AA               	addwf	efgtoa@n& (0+255),w,b
  3553  00184E  6ED9               	movwf	fsr2l,c
  3554  001850  0E01               	movlw	high _dbuf
  3555  001852  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3556  001854  6EDA               	movwf	fsr2h,c
  3557  001856  0E2E               	movlw	46
  3558  001858  6EDF               	movwf	indf2,c
  3559                           
  3560                           ; BSR set to: 0
  3561  00185A  4BAA               	infsnz	efgtoa@n& (0+255),f,b
  3562  00185C  2BAB               	incf	(efgtoa@n+1)& (0+255),f,b
  3563  00185E                     l6079:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3567  00185E  0E04               	movlw	low _dbuf
  3568  001860  25AA               	addwf	efgtoa@n& (0+255),w,b
  3569  001862  6ED9               	movwf	fsr2l,c
  3570  001864  0E01               	movlw	high _dbuf
  3571  001866  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3572  001868  6EDA               	movwf	fsr2h,c
  3573  00186A  0E00               	movlw	0
  3574  00186C  6EDF               	movwf	indf2,c
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3578  00186E  0E65               	movlw	101
  3579  001870  1996               	xorwf	efgtoa@nmode& (0+255),w,b
  3580  001872  A4D8               	btfss	status,2,c
  3581  001874  D47E               	goto	l5891
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3585  001876  0E00               	movlw	0
  3586  001878  6FA3               	movwf	(efgtoa@i+1)& (0+255),b
  3587  00187A  0E4F               	movlw	79
  3588  00187C  6FA2               	movwf	efgtoa@i& (0+255),b
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3592  00187E  0E04               	movlw	low _dbuf
  3593  001880  25A2               	addwf	efgtoa@i& (0+255),w,b
  3594  001882  6ED9               	movwf	fsr2l,c
  3595  001884  0E01               	movlw	high _dbuf
  3596  001886  21A3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3597  001888  6EDA               	movwf	fsr2h,c
  3598  00188A  0E00               	movlw	0
  3599  00188C  6EDF               	movwf	indf2,c
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3603  00188E  0E00               	movlw	0
  3604  001890  6F93               	movwf	(efgtoa@sign+1)& (0+255),b
  3605  001892  0E00               	movlw	0
  3606  001894  6F92               	movwf	efgtoa@sign& (0+255),b
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3610  001896  AFA9               	btfss	(efgtoa@e+1)& (0+255),7,b
  3611  001898  D008               	goto	l6095
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3615  00189A  0E00               	movlw	0
  3616  00189C  6F93               	movwf	(efgtoa@sign+1)& (0+255),b
  3617  00189E  0E01               	movlw	1
  3618  0018A0  6F92               	movwf	efgtoa@sign& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3622  0018A2  6DA8               	negf	efgtoa@e& (0+255),b
  3623  0018A4  1FA9               	comf	(efgtoa@e+1)& (0+255),f,b
  3624  0018A6  B0D8               	btfsc	status,0,c
  3625  0018A8  2BA9               	incf	(efgtoa@e+1)& (0+255),f,b
  3626  0018AA                     l6095:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3630  0018AA  0E00               	movlw	0
  3631  0018AC  6F95               	movwf	(efgtoa@p+1)& (0+255),b
  3632  0018AE  0E02               	movlw	2
  3633  0018B0  6F94               	movwf	efgtoa@p& (0+255),b
  3634                           
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3636  0018B2  D02B               	goto	l6107
  3637  0018B4                     l6097:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3641  0018B4  07A2               	decf	efgtoa@i& (0+255),f,b
  3642  0018B6  A0D8               	btfss	status,0,c
  3643  0018B8  07A3               	decf	(efgtoa@i+1)& (0+255),f,b
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3647  0018BA  0E04               	movlw	low _dbuf
  3648  0018BC  25A2               	addwf	efgtoa@i& (0+255),w,b
  3649  0018BE  6ED9               	movwf	fsr2l,c
  3650  0018C0  0E01               	movlw	high _dbuf
  3651  0018C2  21A3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3652  0018C4  6EDA               	movwf	fsr2h,c
  3653  0018C6  C0A8  F013         	movff	efgtoa@e,___awmod@dividend
  3654  0018CA  C0A9  F014         	movff	efgtoa@e+1,___awmod@dividend+1
  3655  0018CE  0E00               	movlw	0
  3656  0018D0  6E16               	movwf	___awmod@divisor+1,c
  3657  0018D2  0E0A               	movlw	10
  3658  0018D4  6E15               	movwf	___awmod@divisor,c
  3659  0018D6  ECE0  F01C         	call	___awmod	;wreg free
  3660  0018DA  5013               	movf	?___awmod,w,c
  3661  0018DC  0F30               	addlw	48
  3662  0018DE  6EDF               	movwf	indf2,c
  3663                           
  3664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3665  0018E0  C0A8  F013         	movff	efgtoa@e,___awdiv@dividend
  3666  0018E4  C0A9  F014         	movff	efgtoa@e+1,___awdiv@dividend+1
  3667  0018E8  0E00               	movlw	0
  3668  0018EA  6E16               	movwf	___awdiv@divisor+1,c
  3669  0018EC  0E0A               	movlw	10
  3670  0018EE  6E15               	movwf	___awdiv@divisor,c
  3671  0018F0  EC74  F01B         	call	___awdiv	;wreg free
  3672  0018F4  C013  F0A8         	movff	?___awdiv,efgtoa@e
  3673  0018F8  C014  F0A9         	movff	?___awdiv+1,efgtoa@e+1
  3674                           
  3675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3676  0018FC  0100               	movlb	0	; () banked
  3677  0018FE  0794               	decf	efgtoa@p& (0+255),f,b
  3678  001900  A0D8               	btfss	status,0,c
  3679  001902  0795               	decf	(efgtoa@p+1)& (0+255),f,b
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3683  001904  0797               	decf	efgtoa@w& (0+255),f,b
  3684  001906  A0D8               	btfss	status,0,c
  3685  001908  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3686  00190A                     l6107:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3690  00190A  51A8               	movf	efgtoa@e& (0+255),w,b
  3691  00190C  11A9               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3692  00190E  A4D8               	btfss	status,2,c
  3693  001910  D7D1               	goto	l6097
  3694                           
  3695                           ; BSR set to: 0
  3696  001912  BF95               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3697  001914  D005               	goto	u7820
  3698  001916  5195               	movf	(efgtoa@p+1)& (0+255),w,b
  3699  001918  E1CD               	bnz	l6097
  3700  00191A  0594               	decf	efgtoa@p& (0+255),w,b
  3701  00191C  B0D8               	btfsc	status,0,c
  3702  00191E  D7CA               	goto	l6097
  3703  001920                     u7820:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3707  001920  07A2               	decf	efgtoa@i& (0+255),f,b
  3708  001922  A0D8               	btfss	status,0,c
  3709  001924  07A3               	decf	(efgtoa@i+1)& (0+255),f,b
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3713  001926  5192               	movf	efgtoa@sign& (0+255),w,b
  3714  001928  1193               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3715  00192A  A4D8               	btfss	status,2,c
  3716  00192C  D004               	goto	l6117
  3717                           
  3718                           ; BSR set to: 0
  3719  00192E  0E00               	movlw	0
  3720  001930  6F83               	movwf	(_efgtoa$1485+1)& (0+255),b
  3721  001932  0E2B               	movlw	43
  3722  001934  D003               	goto	L4
  3723  001936                     l6117:
  3724                           
  3725                           ; BSR set to: 0
  3726  001936  0E00               	movlw	0
  3727  001938  6F83               	movwf	(_efgtoa$1485+1)& (0+255),b
  3728  00193A  0E2D               	movlw	45
  3729  00193C                     L4:
  3730  00193C  6F82               	movwf	_efgtoa$1485& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733  00193E  0E04               	movlw	low _dbuf
  3734  001940  25A2               	addwf	efgtoa@i& (0+255),w,b
  3735  001942  6ED9               	movwf	fsr2l,c
  3736  001944  0E01               	movlw	high _dbuf
  3737  001946  21A3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3738  001948  6EDA               	movwf	fsr2h,c
  3739  00194A  C082  FFDF         	movff	_efgtoa$1485,indf2
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3743  00194E  0797               	decf	efgtoa@w& (0+255),f,b
  3744  001950  A0D8               	btfss	status,0,c
  3745  001952  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3749  001954  07A2               	decf	efgtoa@i& (0+255),f,b
  3750  001956  A0D8               	btfss	status,0,c
  3751  001958  07A3               	decf	(efgtoa@i+1)& (0+255),f,b
  3752                           
  3753                           ; BSR set to: 0
  3754  00195A  0EBF               	movlw	191
  3755  00195C  6F73               	movwf	??_efgtoa& (0+255),b
  3756  00195E  0EFF               	movlw	255
  3757  001960  6F74               	movwf	(??_efgtoa+1)& (0+255),b
  3758  001962  5172               	movf	efgtoa@c& (0+255),w,b
  3759  001964  6F75               	movwf	(??_efgtoa+2)& (0+255),b
  3760  001966  6B76               	clrf	(??_efgtoa+3)& (0+255),b
  3761  001968  5173               	movf	??_efgtoa& (0+255),w,b
  3762  00196A  2775               	addwf	(??_efgtoa+2)& (0+255),f,b
  3763  00196C  5174               	movf	(??_efgtoa+1)& (0+255),w,b
  3764  00196E  2376               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3765  001970  5176               	movf	(??_efgtoa+3)& (0+255),w,b
  3766  001972  E106               	bnz	u7840
  3767  001974  0E1A               	movlw	26
  3768  001976  5D75               	subwf	(??_efgtoa+2)& (0+255),w,b
  3769  001978  B0D8               	btfsc	status,0,c
  3770  00197A  D002               	goto	u7840
  3771  00197C  0E01               	movlw	1
  3772  00197E  D001               	goto	u7850
  3773  001980                     u7840:
  3774  001980  0E00               	movlw	0
  3775  001982                     u7850:
  3776  001982  6F86               	movwf	_efgtoa$1487& (0+255),b
  3777  001984  6B87               	clrf	(_efgtoa$1487+1)& (0+255),b
  3778                           
  3779                           ; BSR set to: 0
  3780  001986  5186               	movf	_efgtoa$1487& (0+255),w,b
  3781  001988  1187               	iorwf	(_efgtoa$1487+1)& (0+255),w,b
  3782  00198A  A4D8               	btfss	status,2,c
  3783  00198C  D004               	goto	l6133
  3784                           
  3785                           ; BSR set to: 0
  3786  00198E  0E00               	movlw	0
  3787  001990  6F85               	movwf	(_efgtoa$1486+1)& (0+255),b
  3788  001992  0E65               	movlw	101
  3789  001994  D003               	goto	L5
  3790  001996                     l6133:
  3791                           
  3792                           ; BSR set to: 0
  3793  001996  0E00               	movlw	0
  3794  001998  6F85               	movwf	(_efgtoa$1486+1)& (0+255),b
  3795  00199A  0E45               	movlw	69
  3796  00199C                     L5:
  3797  00199C  6F84               	movwf	_efgtoa$1486& (0+255),b
  3798                           
  3799                           ; BSR set to: 0
  3800  00199E  0E04               	movlw	low _dbuf
  3801  0019A0  25A2               	addwf	efgtoa@i& (0+255),w,b
  3802  0019A2  6ED9               	movwf	fsr2l,c
  3803  0019A4  0E01               	movlw	high _dbuf
  3804  0019A6  21A3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3805  0019A8  6EDA               	movwf	fsr2h,c
  3806  0019AA  C084  FFDF         	movff	_efgtoa$1486,indf2
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3810  0019AE  0797               	decf	efgtoa@w& (0+255),f,b
  3811  0019B0  A0D8               	btfss	status,0,c
  3812  0019B2  0798               	decf	(efgtoa@w+1)& (0+255),f,b
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3816  0019B4  0E04               	movlw	low _dbuf
  3817  0019B6  25AA               	addwf	efgtoa@n& (0+255),w,b
  3818  0019B8  6E13               	movwf	strcpy@dest,c
  3819  0019BA  0E01               	movlw	high _dbuf
  3820  0019BC  21AB               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3821  0019BE  6E14               	movwf	strcpy@dest+1,c
  3822  0019C0  0E04               	movlw	low _dbuf
  3823  0019C2  25A2               	addwf	efgtoa@i& (0+255),w,b
  3824  0019C4  6E15               	movwf	strcpy@src,c
  3825  0019C6  0E01               	movlw	high _dbuf
  3826  0019C8  21A3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3827  0019CA  6E16               	movwf	strcpy@src+1,c
  3828  0019CC  ECD1  F01D         	call	_strcpy	;wreg free
  3829  0019D0  EFB9  F008         	goto	l5891
  3830  0019D4                     __end_of_efgtoa:
  3831                           	opt callstack 0
  3832                           
  3833 ;; *************** function _tolower *****************
  3834 ;; Defined at:
  3835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  c               2   24[COMRAM] int 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2   24[COMRAM] int 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;Total ram usage:        8 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    5
  3856 ;; This function calls:
  3857 ;;		_isupper
  3858 ;; This function is called by:
  3859 ;;		_efgtoa
  3860 ;;		_vfpfcnvrt
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text7
  3865  003BF6                     __ptext7:
  3866                           	opt callstack 0
  3867  003BF6                     _tolower:
  3868                           	opt callstack 21
  3869                           
  3870                           ;incstack = 0
  3871  003BF6  0EBF               	movlw	191
  3872  003BF8  6E1B               	movwf	??_tolower& (0+255),c
  3873  003BFA  0EFF               	movlw	255
  3874  003BFC  6E1C               	movwf	(??_tolower+1)& (0+255),c
  3875  003BFE  C019  F01D         	movff	tolower@c,??_tolower+2
  3876  003C02  C01A  F01E         	movff	tolower@c+1,??_tolower+3
  3877  003C06  501B               	movf	??_tolower,w,c
  3878  003C08  261D               	addwf	??_tolower+2,f,c
  3879  003C0A  501C               	movf	??_tolower+1,w,c
  3880  003C0C  221E               	addwfc	??_tolower+3,f,c
  3881  003C0E  501E               	movf	??_tolower+3,w,c
  3882  003C10  E106               	bnz	u6430
  3883  003C12  0E1A               	movlw	26
  3884  003C14  5C1D               	subwf	??_tolower+2,w,c
  3885  003C16  B0D8               	btfsc	status,0,c
  3886  003C18  D002               	goto	u6430
  3887  003C1A  0E01               	movlw	1
  3888  003C1C  D001               	goto	u6440
  3889  003C1E                     u6430:
  3890  003C1E  0E00               	movlw	0
  3891  003C20                     u6440:
  3892  003C20  6E1F               	movwf	_tolower$2099,c
  3893  003C22  6A20               	clrf	_tolower$2099+1,c
  3894  003C24  501F               	movf	_tolower$2099,w,c
  3895  003C26  1020               	iorwf	_tolower$2099+1,w,c
  3896  003C28  B4D8               	btfsc	status,2,c
  3897  003C2A  D006               	goto	l1323
  3898  003C2C  0E20               	movlw	32
  3899  003C2E  1019               	iorwf	tolower@c,w,c
  3900  003C30  6E19               	movwf	?_tolower,c
  3901  003C32  501A               	movf	tolower@c+1,w,c
  3902  003C34  6E1A               	movwf	?_tolower+1,c
  3903  003C36  0012               	return	
  3904  003C38                     l1323:
  3905  003C38  C019  F019         	movff	tolower@c,?_tolower
  3906  003C3C  C01A  F01A         	movff	tolower@c+1,?_tolower+1
  3907  003C40  0012               	return		;funcret
  3908  003C42                     __end_of_tolower:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _isupper *****************
  3912 ;; Defined at:
  3913 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  c               2   18[COMRAM] int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  2   18[COMRAM] int 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;Total ram usage:        6 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    4
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_efgtoa
  3938 ;;		_vfpfcnvrt
  3939 ;;		_tolower
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text8
  3944  003D6C                     __ptext8:
  3945                           	opt callstack 0
  3946  003D6C                     _isupper:
  3947                           	opt callstack 21
  3948                           
  3949                           ;incstack = 0
  3950  003D6C  0EBF               	movlw	191
  3951  003D6E  6E15               	movwf	??_isupper& (0+255),c
  3952  003D70  0EFF               	movlw	255
  3953  003D72  6E16               	movwf	(??_isupper+1)& (0+255),c
  3954  003D74  C013  F017         	movff	isupper@c,??_isupper+2
  3955  003D78  C014  F018         	movff	isupper@c+1,??_isupper+3
  3956  003D7C  5015               	movf	??_isupper,w,c
  3957  003D7E  2617               	addwf	??_isupper+2,f,c
  3958  003D80  5016               	movf	??_isupper+1,w,c
  3959  003D82  2218               	addwfc	??_isupper+3,f,c
  3960  003D84  5018               	movf	??_isupper+3,w,c
  3961  003D86  E106               	bnz	u5890
  3962  003D88  0E1A               	movlw	26
  3963  003D8A  5C17               	subwf	??_isupper+2,w,c
  3964  003D8C  B0D8               	btfsc	status,0,c
  3965  003D8E  D002               	goto	u5890
  3966  003D90  0E01               	movlw	1
  3967  003D92  D001               	goto	u5900
  3968  003D94                     u5890:
  3969  003D94  0E00               	movlw	0
  3970  003D96                     u5900:
  3971  003D96  6E13               	movwf	?_isupper,c
  3972  003D98  6A14               	clrf	?_isupper+1,c
  3973  003D9A  0012               	return		;funcret
  3974  003D9C                     __end_of_isupper:
  3975                           	opt callstack 0
  3976                           
  3977 ;; *************** function _pad *****************
  3978 ;; Defined at:
  3979 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;  fp              2   34[COMRAM] PTR struct _IO_FILE
  3982 ;;		 -> sprintf@f(6), 
  3983 ;;  buf             2   36[COMRAM] PTR unsigned char 
  3984 ;;		 -> dbuf(80), 
  3985 ;;  p               2   38[COMRAM] int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  w               2   43[COMRAM] int 
  3988 ;;  i               2   41[COMRAM] int 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2   34[COMRAM] int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:       11 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    7
  4005 ;; This function calls:
  4006 ;;		_fputc
  4007 ;;		_fputs
  4008 ;;		_strlen
  4009 ;; This function is called by:
  4010 ;;		_efgtoa
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text9
  4015  0034B4                     __ptext9:
  4016                           	opt callstack 0
  4017  0034B4                     _pad:
  4018                           	opt callstack 18
  4019                           
  4020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4021                           
  4022                           ;incstack = 0
  4023  0034B4  A03C               	btfss	_flags,0,c
  4024  0034B6  D00A               	goto	l5283
  4025                           
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4027  0034B8  C025  F01C         	movff	pad@buf,fputs@s
  4028  0034BC  C026  F01D         	movff	pad@buf+1,fputs@s+1
  4029  0034C0  C023  F01E         	movff	pad@fp,fputs@fp
  4030  0034C4  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  4031  0034C8  EC81  F01E         	call	_fputs	;wreg free
  4032  0034CC                     l5283:
  4033                           
  4034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4035  0034CC  BE28               	btfsc	pad@p+1,7,c
  4036  0034CE  D005               	goto	l5287
  4037  0034D0  C027  F02C         	movff	pad@p,pad@w
  4038  0034D4  C028  F02D         	movff	pad@p+1,pad@w+1
  4039  0034D8  D004               	goto	l369
  4040  0034DA                     l5287:
  4041  0034DA  0E00               	movlw	0
  4042  0034DC  6E2D               	movwf	pad@w+1,c
  4043  0034DE  0E00               	movlw	0
  4044  0034E0  6E2C               	movwf	pad@w,c
  4045  0034E2                     l369:
  4046                           
  4047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4048  0034E2  0E00               	movlw	0
  4049  0034E4  6E2B               	movwf	pad@i+1,c
  4050  0034E6  0E00               	movlw	0
  4051  0034E8  6E2A               	movwf	pad@i,c
  4052                           
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4054  0034EA  D00C               	goto	l5293
  4055  0034EC                     l5289:
  4056                           
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4058  0034EC  0E00               	movlw	0
  4059  0034EE  6E14               	movwf	fputc@c+1,c
  4060  0034F0  0E20               	movlw	32
  4061  0034F2  6E13               	movwf	fputc@c,c
  4062  0034F4  C023  F015         	movff	pad@fp,fputc@fp
  4063  0034F8  C024  F016         	movff	pad@fp+1,fputc@fp+1
  4064  0034FC  EC0A  F01A         	call	_fputc	;wreg free
  4065                           
  4066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4067  003500  4A2A               	infsnz	pad@i,f,c
  4068  003502  2A2B               	incf	pad@i+1,f,c
  4069  003504                     l5293:
  4070                           
  4071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4072  003504  502C               	movf	pad@w,w,c
  4073  003506  5C2A               	subwf	pad@i,w,c
  4074  003508  502B               	movf	pad@i+1,w,c
  4075  00350A  0A80               	xorlw	128
  4076  00350C  6E29               	movwf	??_pad& (0+255),c
  4077  00350E  502D               	movf	pad@w+1,w,c
  4078  003510  0A80               	xorlw	128
  4079  003512  5829               	subwfb	??_pad& (0+255),w,c
  4080  003514  A0D8               	btfss	status,0,c
  4081  003516  D7EA               	goto	l5289
  4082                           
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4084  003518  B03C               	btfsc	_flags,0,c
  4085  00351A  D00A               	goto	l5297
  4086                           
  4087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4088  00351C  C025  F01C         	movff	pad@buf,fputs@s
  4089  003520  C026  F01D         	movff	pad@buf+1,fputs@s+1
  4090  003524  C023  F01E         	movff	pad@fp,fputs@fp
  4091  003528  C024  F01F         	movff	pad@fp+1,fputs@fp+1
  4092  00352C  EC81  F01E         	call	_fputs	;wreg free
  4093  003530                     l5297:
  4094                           
  4095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4096  003530  C025  F013         	movff	pad@buf,strlen@s
  4097  003534  C026  F014         	movff	pad@buf+1,strlen@s+1
  4098  003538  ECFD  F01E         	call	_strlen	;wreg free
  4099  00353C  502C               	movf	pad@w,w,c
  4100  00353E  2413               	addwf	?_strlen,w,c
  4101  003540  6E23               	movwf	?_pad,c
  4102  003542  502D               	movf	pad@w+1,w,c
  4103  003544  2014               	addwfc	?_strlen+1,w,c
  4104  003546  6E24               	movwf	?_pad+1,c
  4105  003548  0012               	return		;funcret
  4106  00354A                     __end_of_pad:
  4107                           	opt callstack 0
  4108                           
  4109 ;; *************** function _strlen *****************
  4110 ;; Defined at:
  4111 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  s               2   18[COMRAM] PTR const unsigned char 
  4114 ;;		 -> dbuf(80), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  a               2   20[COMRAM] PTR const unsigned char 
  4117 ;;		 -> dbuf(80), 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2   18[COMRAM] unsigned int 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;Total ram usage:        4 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    4
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_pad
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text10
  4142  003DFA                     __ptext10:
  4143                           	opt callstack 0
  4144  003DFA                     _strlen:
  4145                           	opt callstack 20
  4146                           
  4147                           ;incstack = 0
  4148  003DFA  C013  F015         	movff	strlen@s,strlen@a
  4149  003DFE  C014  F016         	movff	strlen@s+1,strlen@a+1
  4150  003E02  D002               	goto	l5063
  4151  003E04                     l5061:
  4152  003E04  4A13               	infsnz	strlen@s,f,c
  4153  003E06  2A14               	incf	strlen@s+1,f,c
  4154  003E08                     l5063:
  4155  003E08  C013  FFD9         	movff	strlen@s,fsr2l
  4156  003E0C  C014  FFDA         	movff	strlen@s+1,fsr2h
  4157  003E10  50DF               	movf	indf2,w,c
  4158  003E12  A4D8               	btfss	status,2,c
  4159  003E14  D7F7               	goto	l5061
  4160  003E16  5015               	movf	strlen@a,w,c
  4161  003E18  5C13               	subwf	strlen@s,w,c
  4162  003E1A  6E13               	movwf	?_strlen,c
  4163  003E1C  5016               	movf	strlen@a+1,w,c
  4164  003E1E  5814               	subwfb	strlen@s+1,w,c
  4165  003E20  6E14               	movwf	?_strlen+1,c
  4166  003E22  0012               	return		;funcret
  4167  003E24                     __end_of_strlen:
  4168                           	opt callstack 0
  4169                           
  4170 ;; *************** function _fputs *****************
  4171 ;; Defined at:
  4172 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  s               2   27[COMRAM] PTR const unsigned char 
  4175 ;;		 -> dbuf(80), 
  4176 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4177 ;;		 -> sprintf@f(6), 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;  i               2   32[COMRAM] int 
  4180 ;;  c               1   31[COMRAM] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  2   27[COMRAM] int 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;Total ram usage:        7 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    6
  4197 ;; This function calls:
  4198 ;;		_fputc
  4199 ;; This function is called by:
  4200 ;;		_pad
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text11
  4205  003D02                     __ptext11:
  4206                           	opt callstack 0
  4207  003D02                     _fputs:
  4208                           	opt callstack 18
  4209                           
  4210                           ;incstack = 0
  4211  003D02  0E00               	movlw	0
  4212  003D04  6E22               	movwf	fputs@i+1,c
  4213  003D06  0E00               	movlw	0
  4214  003D08  6E21               	movwf	fputs@i,c
  4215  003D0A  D00B               	goto	l5057
  4216  003D0C                     l5053:
  4217  003D0C  C020  F013         	movff	fputs@c,fputc@c
  4218  003D10  6A14               	clrf	fputc@c+1,c
  4219  003D12  C01E  F015         	movff	fputs@fp,fputc@fp
  4220  003D16  C01F  F016         	movff	fputs@fp+1,fputc@fp+1
  4221  003D1A  EC0A  F01A         	call	_fputc	;wreg free
  4222  003D1E  4A21               	infsnz	fputs@i,f,c
  4223  003D20  2A22               	incf	fputs@i+1,f,c
  4224  003D22                     l5057:
  4225  003D22  5021               	movf	fputs@i,w,c
  4226  003D24  241C               	addwf	fputs@s,w,c
  4227  003D26  6ED9               	movwf	fsr2l,c
  4228  003D28  5022               	movf	fputs@i+1,w,c
  4229  003D2A  201D               	addwfc	fputs@s+1,w,c
  4230  003D2C  6EDA               	movwf	fsr2h,c
  4231  003D2E  50DF               	movf	indf2,w,c
  4232  003D30  6E20               	movwf	fputs@c,c
  4233  003D32  5020               	movf	fputs@c,w,c
  4234  003D34  B4D8               	btfsc	status,2,c
  4235  003D36  0012               	return	
  4236  003D38  D7E9               	goto	l5053
  4237  003D3A                     __end_of_fputs:
  4238                           	opt callstack 0
  4239                           
  4240 ;; *************** function _fputc *****************
  4241 ;; Defined at:
  4242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  c               2   18[COMRAM] int 
  4245 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4246 ;;		 -> sprintf@f(6), 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2   18[COMRAM] int 
  4251 ;; Registers used:
  4252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;Total ram usage:        9 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    5
  4265 ;; This function calls:
  4266 ;;		_putch
  4267 ;; This function is called by:
  4268 ;;		_pad
  4269 ;;		_vfpfcnvrt
  4270 ;;		_fputs
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text12
  4275  003414                     __ptext12:
  4276                           	opt callstack 0
  4277  003414                     _fputc:
  4278                           	opt callstack 21
  4279                           
  4280                           ;incstack = 0
  4281  003414  5015               	movf	fputc@fp,w,c
  4282  003416  1016               	iorwf	fputc@fp+1,w,c
  4283  003418  B4D8               	btfsc	status,2,c
  4284  00341A  D004               	goto	u5840
  4285  00341C  5015               	movf	fputc@fp,w,c
  4286  00341E  1016               	iorwf	fputc@fp+1,w,c
  4287  003420  A4D8               	btfss	status,2,c
  4288  003422  D004               	goto	l5043
  4289  003424                     u5840:
  4290  003424  5013               	movf	fputc@c,w,c
  4291  003426  EC41  F01F         	call	_putch
  4292  00342A  0012               	return	
  4293  00342C                     l5043:
  4294  00342C  EE20 F004          	lfsr	2,4
  4295  003430  5015               	movf	fputc@fp,w,c
  4296  003432  26D9               	addwf	fsr2l,f,c
  4297  003434  5016               	movf	fputc@fp+1,w,c
  4298  003436  22DA               	addwfc	fsr2h,f,c
  4299  003438  50DE               	movf	postinc2,w,c
  4300  00343A  10DE               	iorwf	postinc2,w,c
  4301  00343C  B4D8               	btfsc	status,2,c
  4302  00343E  D016               	goto	u5860
  4303  003440  EE20 F004          	lfsr	2,4
  4304  003444  5015               	movf	fputc@fp,w,c
  4305  003446  26D9               	addwf	fsr2l,f,c
  4306  003448  5016               	movf	fputc@fp+1,w,c
  4307  00344A  22DA               	addwfc	fsr2h,f,c
  4308  00344C  EE10 F002          	lfsr	1,2
  4309  003450  5015               	movf	fputc@fp,w,c
  4310  003452  26E1               	addwf	fsr1l,f,c
  4311  003454  5016               	movf	fputc@fp+1,w,c
  4312  003456  22E2               	addwfc	fsr1h,f,c
  4313  003458  50DE               	movf	postinc2,w,c
  4314  00345A  5CE6               	subwf	postinc1,w,c
  4315  00345C  50E6               	movf	postinc1,w,c
  4316  00345E  0A80               	xorlw	128
  4317  003460  6E1B               	movwf	(??_fputc+4)& (0+255),c
  4318  003462  50DE               	movf	postinc2,w,c
  4319  003464  0A80               	xorlw	128
  4320  003466  581B               	subwfb	(??_fputc+4)& (0+255),w,c
  4321  003468  B0D8               	btfsc	status,0,c
  4322  00346A  0012               	return	
  4323  00346C                     u5860:
  4324  00346C  EE20 F002          	lfsr	2,2
  4325  003470  5015               	movf	fputc@fp,w,c
  4326  003472  26D9               	addwf	fsr2l,f,c
  4327  003474  5016               	movf	fputc@fp+1,w,c
  4328  003476  22DA               	addwfc	fsr2h,f,c
  4329  003478  CFDE F017          	movff	postinc2,??_fputc
  4330  00347C  CFDD F018          	movff	postdec2,??_fputc+1
  4331  003480  C015  FFD9         	movff	fputc@fp,fsr2l
  4332  003484  C016  FFDA         	movff	fputc@fp+1,fsr2h
  4333  003488  CFDE F019          	movff	postinc2,??_fputc+2
  4334  00348C  CFDD F01A          	movff	postdec2,??_fputc+3
  4335  003490  5017               	movf	??_fputc,w,c
  4336  003492  2419               	addwf	??_fputc+2,w,c
  4337  003494  6ED9               	movwf	fsr2l,c
  4338  003496  5018               	movf	??_fputc+1,w,c
  4339  003498  201A               	addwfc	??_fputc+3,w,c
  4340  00349A  6EDA               	movwf	fsr2h,c
  4341  00349C  C013  FFDF         	movff	fputc@c,indf2
  4342  0034A0  EE20 F002          	lfsr	2,2
  4343  0034A4  5015               	movf	fputc@fp,w,c
  4344  0034A6  26D9               	addwf	fsr2l,f,c
  4345  0034A8  5016               	movf	fputc@fp+1,w,c
  4346  0034AA  22DA               	addwfc	fsr2h,f,c
  4347  0034AC  2ADE               	incf	postinc2,f,c
  4348  0034AE  0E00               	movlw	0
  4349  0034B0  22DD               	addwfc	postdec2,f,c
  4350  0034B2  0012               	return		;funcret
  4351  0034B4                     __end_of_fputc:
  4352                           	opt callstack 0
  4353                           
  4354 ;; *************** function _putch *****************
  4355 ;; Defined at:
  4356 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  c               1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  c               1    0[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    4
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_fputc
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text13
  4385  003E82                     __ptext13:
  4386                           	opt callstack 0
  4387  003E82                     _putch:
  4388                           	opt callstack 21
  4389                           
  4390                           ;incstack = 0
  4391  003E82  0012               	return		;funcret
  4392  003E84                     __end_of_putch:
  4393                           	opt callstack 0
  4394                           
  4395 ;; *************** function _floorf *****************
  4396 ;; Defined at:
  4397 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  x               4   43[COMRAM] float 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  u               4    6[BANK0 ] struct .
  4402 ;;  m               4    0[BANK0 ] unsigned long 
  4403 ;;  e               2    4[BANK0 ] int 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  4   43[COMRAM] float 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:       20 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    4
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_efgtoa
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text14
  4428  002722                     __ptext14:
  4429                           	opt callstack 0
  4430  002722                     _floorf:
  4431                           	opt callstack 21
  4432                           
  4433                           ;incstack = 0
  4434  002722  C100  F066         	movff	floorf@F524,floorf@u
  4435  002726  C101  F067         	movff	floorf@F524+1,floorf@u+1
  4436  00272A  C102  F068         	movff	floorf@F524+2,floorf@u+2
  4437  00272E  C103  F069         	movff	floorf@F524+3,floorf@u+3
  4438  002732  C02C  F066         	movff	floorf@x,floorf@u
  4439  002736  C02D  F067         	movff	floorf@x+1,floorf@u+1
  4440  00273A  C02E  F068         	movff	floorf@x+2,floorf@u+2
  4441  00273E  C02F  F069         	movff	floorf@x+3,floorf@u+3
  4442  002742  0E81               	movlw	129
  4443  002744  6E30               	movwf	??_floorf& (0+255),c
  4444  002746  0EFF               	movlw	255
  4445  002748  6E31               	movwf	(??_floorf+1)& (0+255),c
  4446  00274A  C066  F032         	movff	floorf@u,??_floorf+2
  4447  00274E  C067  F033         	movff	floorf@u+1,??_floorf+3
  4448  002752  C068  F034         	movff	floorf@u+2,??_floorf+4
  4449  002756  C069  F035         	movff	floorf@u+3,??_floorf+5
  4450  00275A  0E18               	movlw	24
  4451  00275C  D005               	goto	u6460
  4452  00275E                     u6465:
  4453  00275E  90D8               	bcf	status,0,c
  4454  002760  3235               	rrcf	??_floorf+5,f,c
  4455  002762  3234               	rrcf	??_floorf+4,f,c
  4456  002764  3233               	rrcf	??_floorf+3,f,c
  4457  002766  3232               	rrcf	??_floorf+2,f,c
  4458  002768                     u6460:
  4459  002768  2EE8               	decfsz	wreg,f,c
  4460  00276A  D7F9               	goto	u6465
  4461  00276C  5032               	movf	??_floorf+2,w,c
  4462  00276E  2430               	addwf	??_floorf,w,c
  4463  002770  0100               	movlb	0	; () banked
  4464  002772  6F64               	movwf	floorf@e& (0+255),b
  4465  002774  0E00               	movlw	0
  4466  002776  2031               	addwfc	??_floorf+1,w,c
  4467  002778  6F65               	movwf	(floorf@e+1)& (0+255),b
  4468  00277A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4469  00277C  D00F               	goto	l5339
  4470  00277E  5165               	movf	(floorf@e+1)& (0+255),w,b
  4471  002780  E104               	bnz	u6470
  4472  002782  0E17               	movlw	23
  4473  002784  5D64               	subwf	floorf@e& (0+255),w,b
  4474  002786  A0D8               	btfss	status,0,c
  4475  002788  D009               	goto	l5339
  4476  00278A                     u6470:
  4477                           
  4478                           ; BSR set to: 0
  4479  00278A  C02C  F02C         	movff	floorf@x,?_floorf
  4480  00278E  C02D  F02D         	movff	floorf@x+1,?_floorf+1
  4481  002792  C02E  F02E         	movff	floorf@x+2,?_floorf+2
  4482  002796  C02F  F02F         	movff	floorf@x+3,?_floorf+3
  4483  00279A  0012               	return	
  4484  00279C                     l5339:
  4485                           
  4486                           ; BSR set to: 0
  4487  00279C  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4488  00279E  D05F               	goto	l5349
  4489                           
  4490                           ; BSR set to: 0
  4491  0027A0  C064  F030         	movff	floorf@e,??_floorf
  4492  0027A4  0EFF               	movlw	255
  4493  0027A6  6E31               	movwf	(??_floorf+1)& (0+255),c
  4494  0027A8  0EFF               	movlw	255
  4495  0027AA  6E32               	movwf	(??_floorf+2)& (0+255),c
  4496  0027AC  0E7F               	movlw	127
  4497  0027AE  6E33               	movwf	(??_floorf+3)& (0+255),c
  4498  0027B0  0E00               	movlw	0
  4499  0027B2  6E34               	movwf	(??_floorf+4)& (0+255),c
  4500  0027B4                     u6495:
  4501  0027B4  6630               	tstfsz	??_floorf,c
  4502  0027B6  D001               	goto	u6496
  4503  0027B8  D007               	goto	u6497
  4504  0027BA                     u6496:
  4505  0027BA  3434               	rlcf	??_floorf+4,w,c
  4506  0027BC  3234               	rrcf	??_floorf+4,f,c
  4507  0027BE  3233               	rrcf	??_floorf+3,f,c
  4508  0027C0  3232               	rrcf	??_floorf+2,f,c
  4509  0027C2  3231               	rrcf	??_floorf+1,f,c
  4510  0027C4  2E30               	decfsz	??_floorf,f,c
  4511  0027C6  D7F6               	goto	u6495
  4512  0027C8                     u6497:
  4513  0027C8  C031  F060         	movff	??_floorf+1,floorf@m
  4514  0027CC  C032  F061         	movff	??_floorf+2,floorf@m+1
  4515  0027D0  C033  F062         	movff	??_floorf+3,floorf@m+2
  4516  0027D4  C034  F063         	movff	??_floorf+4,floorf@m+3
  4517  0027D8  0100               	movlb	0	; () banked
  4518  0027DA  5160               	movf	floorf@m& (0+255),w,b
  4519  0027DC  1566               	andwf	floorf@u& (0+255),w,b
  4520  0027DE  6E30               	movwf	??_floorf& (0+255),c
  4521  0027E0  5161               	movf	(floorf@m+1)& (0+255),w,b
  4522  0027E2  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4523  0027E4  6E31               	movwf	(??_floorf+1)& (0+255),c
  4524  0027E6  5162               	movf	(floorf@m+2)& (0+255),w,b
  4525  0027E8  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4526  0027EA  6E32               	movwf	(??_floorf+2)& (0+255),c
  4527  0027EC  5163               	movf	(floorf@m+3)& (0+255),w,b
  4528  0027EE  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4529  0027F0  6E33               	movwf	(??_floorf+3)& (0+255),c
  4530  0027F2  5030               	movf	??_floorf,w,c
  4531  0027F4  1031               	iorwf	??_floorf+1,w,c
  4532  0027F6  1032               	iorwf	??_floorf+2,w,c
  4533  0027F8  1033               	iorwf	??_floorf+3,w,c
  4534  0027FA  B4D8               	btfsc	status,2,c
  4535  0027FC  D7C6               	goto	u6470
  4536                           
  4537                           ; BSR set to: 0
  4538  0027FE  C066  F030         	movff	floorf@u,??_floorf
  4539  002802  C067  F031         	movff	floorf@u+1,??_floorf+1
  4540  002806  C068  F032         	movff	floorf@u+2,??_floorf+2
  4541  00280A  C069  F033         	movff	floorf@u+3,??_floorf+3
  4542  00280E  0E20               	movlw	32
  4543  002810  D005               	goto	u6510
  4544  002812                     u6515:
  4545  002812  90D8               	bcf	status,0,c
  4546  002814  3233               	rrcf	??_floorf+3,f,c
  4547  002816  3232               	rrcf	??_floorf+2,f,c
  4548  002818  3231               	rrcf	??_floorf+1,f,c
  4549  00281A  3230               	rrcf	??_floorf,f,c
  4550  00281C                     u6510:
  4551  00281C  2EE8               	decfsz	wreg,f,c
  4552  00281E  D7F9               	goto	u6515
  4553  002820  5030               	movf	??_floorf,w,c
  4554  002822  1031               	iorwf	??_floorf+1,w,c
  4555  002824  1032               	iorwf	??_floorf+2,w,c
  4556  002826  1033               	iorwf	??_floorf+3,w,c
  4557  002828  B4D8               	btfsc	status,2,c
  4558  00282A  D008               	goto	l1233
  4559                           
  4560                           ; BSR set to: 0
  4561  00282C  5160               	movf	floorf@m& (0+255),w,b
  4562  00282E  2766               	addwf	floorf@u& (0+255),f,b
  4563  002830  5161               	movf	(floorf@m+1)& (0+255),w,b
  4564  002832  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4565  002834  5162               	movf	(floorf@m+2)& (0+255),w,b
  4566  002836  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4567  002838  5163               	movf	(floorf@m+3)& (0+255),w,b
  4568  00283A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4569  00283C                     l1233:
  4570                           
  4571                           ; BSR set to: 0
  4572  00283C  1D60               	comf	floorf@m& (0+255),w,b
  4573  00283E  6E30               	movwf	??_floorf& (0+255),c
  4574  002840  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4575  002842  6E31               	movwf	(??_floorf+1)& (0+255),c
  4576  002844  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4577  002846  6E32               	movwf	(??_floorf+2)& (0+255),c
  4578  002848  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4579  00284A  6E33               	movwf	(??_floorf+3)& (0+255),c
  4580  00284C  5030               	movf	??_floorf,w,c
  4581  00284E  1766               	andwf	floorf@u& (0+255),f,b
  4582  002850  5031               	movf	??_floorf+1,w,c
  4583  002852  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4584  002854  5032               	movf	??_floorf+2,w,c
  4585  002856  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4586  002858  5033               	movf	??_floorf+3,w,c
  4587  00285A  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4588  00285C  D036               	goto	l5357
  4589  00285E                     l5349:
  4590                           
  4591                           ; BSR set to: 0
  4592  00285E  C066  F030         	movff	floorf@u,??_floorf
  4593  002862  C067  F031         	movff	floorf@u+1,??_floorf+1
  4594  002866  C068  F032         	movff	floorf@u+2,??_floorf+2
  4595  00286A  C069  F033         	movff	floorf@u+3,??_floorf+3
  4596  00286E  0E20               	movlw	32
  4597  002870  D005               	goto	u6530
  4598  002872                     u6535:
  4599  002872  90D8               	bcf	status,0,c
  4600  002874  3233               	rrcf	??_floorf+3,f,c
  4601  002876  3232               	rrcf	??_floorf+2,f,c
  4602  002878  3231               	rrcf	??_floorf+1,f,c
  4603  00287A  3230               	rrcf	??_floorf,f,c
  4604  00287C                     u6530:
  4605  00287C  2EE8               	decfsz	wreg,f,c
  4606  00287E  D7F9               	goto	u6535
  4607  002880  5030               	movf	??_floorf,w,c
  4608  002882  1031               	iorwf	??_floorf+1,w,c
  4609  002884  1032               	iorwf	??_floorf+2,w,c
  4610  002886  1033               	iorwf	??_floorf+3,w,c
  4611  002888  A4D8               	btfss	status,2,c
  4612  00288A  D008               	goto	l5353
  4613                           
  4614                           ; BSR set to: 0
  4615  00288C  0E00               	movlw	0
  4616  00288E  6F66               	movwf	floorf@u& (0+255),b
  4617  002890  0E00               	movlw	0
  4618  002892  6F67               	movwf	(floorf@u+1)& (0+255),b
  4619  002894  0E00               	movlw	0
  4620  002896  6F68               	movwf	(floorf@u+2)& (0+255),b
  4621  002898  0E00               	movlw	0
  4622  00289A  D016               	goto	L6
  4623  00289C                     l5353:
  4624                           
  4625                           ; BSR set to: 0
  4626  00289C  90D8               	bcf	status,0,c
  4627  00289E  3566               	rlcf	floorf@u& (0+255),w,b
  4628  0028A0  6E30               	movwf	??_floorf& (0+255),c
  4629  0028A2  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  4630  0028A4  6E31               	movwf	(??_floorf+1)& (0+255),c
  4631  0028A6  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  4632  0028A8  6E32               	movwf	(??_floorf+2)& (0+255),c
  4633  0028AA  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  4634  0028AC  6E33               	movwf	(??_floorf+3)& (0+255),c
  4635  0028AE  5030               	movf	??_floorf,w,c
  4636  0028B0  1031               	iorwf	??_floorf+1,w,c
  4637  0028B2  1032               	iorwf	??_floorf+2,w,c
  4638  0028B4  1033               	iorwf	??_floorf+3,w,c
  4639  0028B6  B4D8               	btfsc	status,2,c
  4640  0028B8  D008               	goto	l5357
  4641                           
  4642                           ; BSR set to: 0
  4643  0028BA  0E00               	movlw	0
  4644  0028BC  6F66               	movwf	floorf@u& (0+255),b
  4645  0028BE  0E00               	movlw	0
  4646  0028C0  6F67               	movwf	(floorf@u+1)& (0+255),b
  4647  0028C2  0E80               	movlw	128
  4648  0028C4  6F68               	movwf	(floorf@u+2)& (0+255),b
  4649  0028C6  0EBF               	movlw	191
  4650  0028C8                     L6:
  4651  0028C8  6F69               	movwf	(floorf@u+3)& (0+255),b
  4652  0028CA                     l5357:
  4653                           
  4654                           ; BSR set to: 0
  4655  0028CA  C066  F02C         	movff	floorf@u,?_floorf
  4656  0028CE  C067  F02D         	movff	floorf@u+1,?_floorf+1
  4657  0028D2  C068  F02E         	movff	floorf@u+2,?_floorf+2
  4658  0028D6  C069  F02F         	movff	floorf@u+3,?_floorf+3
  4659                           
  4660                           ; BSR set to: 0
  4661  0028DA  0012               	return		;funcret
  4662  0028DC                     __end_of_floorf:
  4663                           	opt callstack 0
  4664                           
  4665 ;; *************** function ___fpclassifyf *****************
  4666 ;; Defined at:
  4667 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  x               4   18[COMRAM] float 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  u               4   28[COMRAM] struct .
  4672 ;;  e               2   26[COMRAM] int 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2   18[COMRAM] int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;Total ram usage:       14 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    4
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_efgtoa
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text15
  4697  003136                     __ptext15:
  4698                           	opt callstack 0
  4699  003136                     ___fpclassifyf:
  4700                           	opt callstack 21
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;incstack = 0
  4704  003136  C0D0  F01D         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4705  00313A  C0D1  F01E         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4706  00313E  C0D2  F01F         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4707  003142  C0D3  F020         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4708  003146  C013  F01D         	movff	___fpclassifyf@x,___fpclassifyf@u
  4709  00314A  C014  F01E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4710  00314E  C015  F01F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4711  003152  C016  F020         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4712  003156  C01D  F017         	movff	___fpclassifyf@u,??___fpclassifyf
  4713  00315A  C01E  F018         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4714  00315E  C01F  F019         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4715  003162  C020  F01A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4716  003166  0E18               	movlw	24
  4717  003168  D005               	goto	u6360
  4718  00316A                     u6365:
  4719  00316A  90D8               	bcf	status,0,c
  4720  00316C  321A               	rrcf	??___fpclassifyf+3,f,c
  4721  00316E  3219               	rrcf	??___fpclassifyf+2,f,c
  4722  003170  3218               	rrcf	??___fpclassifyf+1,f,c
  4723  003172  3217               	rrcf	??___fpclassifyf,f,c
  4724  003174                     u6360:
  4725  003174  2EE8               	decfsz	wreg,f,c
  4726  003176  D7F9               	goto	u6365
  4727  003178  5017               	movf	??___fpclassifyf,w,c
  4728  00317A  6E1B               	movwf	___fpclassifyf@e,c
  4729  00317C  6A1C               	clrf	___fpclassifyf@e+1,c
  4730  00317E  501B               	movf	___fpclassifyf@e,w,c
  4731  003180  101C               	iorwf	___fpclassifyf@e+1,w,c
  4732  003182  A4D8               	btfss	status,2,c
  4733  003184  D019               	goto	l5313
  4734  003186  90D8               	bcf	status,0,c
  4735  003188  341D               	rlcf	___fpclassifyf@u,w,c
  4736  00318A  6E17               	movwf	??___fpclassifyf& (0+255),c
  4737  00318C  341E               	rlcf	___fpclassifyf@u+1,w,c
  4738  00318E  6E18               	movwf	(??___fpclassifyf+1)& (0+255),c
  4739  003190  341F               	rlcf	___fpclassifyf@u+2,w,c
  4740  003192  6E19               	movwf	(??___fpclassifyf+2)& (0+255),c
  4741  003194  3420               	rlcf	___fpclassifyf@u+3,w,c
  4742  003196  6E1A               	movwf	(??___fpclassifyf+3)& (0+255),c
  4743  003198  5017               	movf	??___fpclassifyf,w,c
  4744  00319A  1018               	iorwf	??___fpclassifyf+1,w,c
  4745  00319C  1019               	iorwf	??___fpclassifyf+2,w,c
  4746  00319E  101A               	iorwf	??___fpclassifyf+3,w,c
  4747  0031A0  A4D8               	btfss	status,2,c
  4748  0031A2  D005               	goto	l5309
  4749  0031A4  0E00               	movlw	0
  4750  0031A6  6E14               	movwf	?___fpclassifyf+1,c
  4751  0031A8  0E02               	movlw	2
  4752  0031AA  6E13               	movwf	?___fpclassifyf,c
  4753  0031AC  0012               	return	
  4754  0031AE                     l5309:
  4755  0031AE  0E00               	movlw	0
  4756  0031B0  6E14               	movwf	?___fpclassifyf+1,c
  4757  0031B2  0E03               	movlw	3
  4758  0031B4  6E13               	movwf	?___fpclassifyf,c
  4759  0031B6  0012               	return	
  4760  0031B8                     l5313:
  4761  0031B8  281B               	incf	___fpclassifyf@e,w,c
  4762  0031BA  101C               	iorwf	___fpclassifyf@e+1,w,c
  4763  0031BC  A4D8               	btfss	status,2,c
  4764  0031BE  D01C               	goto	l5319
  4765  0031C0  C01D  F017         	movff	___fpclassifyf@u,??___fpclassifyf
  4766  0031C4  C01E  F018         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4767  0031C8  C01F  F019         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4768  0031CC  C020  F01A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4769  0031D0  0E09               	movlw	9
  4770  0031D2                     u6405:
  4771  0031D2  90D8               	bcf	status,0,c
  4772  0031D4  3617               	rlcf	??___fpclassifyf,f,c
  4773  0031D6  3618               	rlcf	??___fpclassifyf+1,f,c
  4774  0031D8  3619               	rlcf	??___fpclassifyf+2,f,c
  4775  0031DA  361A               	rlcf	??___fpclassifyf+3,f,c
  4776  0031DC  2EE8               	decfsz	wreg,f,c
  4777  0031DE  D7F9               	goto	u6405
  4778  0031E0  5017               	movf	??___fpclassifyf,w,c
  4779  0031E2  1018               	iorwf	??___fpclassifyf+1,w,c
  4780  0031E4  1019               	iorwf	??___fpclassifyf+2,w,c
  4781  0031E6  101A               	iorwf	??___fpclassifyf+3,w,c
  4782  0031E8  A4D8               	btfss	status,2,c
  4783  0031EA  D002               	goto	u6410
  4784  0031EC  0E01               	movlw	1
  4785  0031EE  D001               	goto	u6420
  4786  0031F0                     u6410:
  4787  0031F0  0E00               	movlw	0
  4788  0031F2                     u6420:
  4789  0031F2  6E13               	movwf	?___fpclassifyf,c
  4790  0031F4  6A14               	clrf	?___fpclassifyf+1,c
  4791  0031F6  0012               	return	
  4792  0031F8                     l5319:
  4793  0031F8  0E00               	movlw	0
  4794  0031FA  6E14               	movwf	?___fpclassifyf+1,c
  4795  0031FC  0E04               	movlw	4
  4796  0031FE  6E13               	movwf	?___fpclassifyf,c
  4797  003200  0012               	return		;funcret
  4798  003202                     __end_of___fpclassifyf:
  4799                           	opt callstack 0
  4800                           
  4801 ;; *************** function ___fltol *****************
  4802 ;; Defined at:
  4803 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  f1              4   18[COMRAM] int 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  exp1            1   27[COMRAM] unsigned char 
  4808 ;;  sign1           1   26[COMRAM] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  4   18[COMRAM] long 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;Total ram usage:       10 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; Hardware stack levels required when called:    4
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_efgtoa
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text16
  4833  003202                     __ptext16:
  4834                           	opt callstack 0
  4835  003202                     ___fltol:
  4836                           	opt callstack 21
  4837                           
  4838                           ;incstack = 0
  4839  003202  3415               	rlcf	___fltol@f1+2,w,c
  4840  003204  3416               	rlcf	___fltol@f1+3,w,c
  4841  003206  6E1C               	movwf	___fltol@exp1,c
  4842  003208  501C               	movf	___fltol@exp1,w,c
  4843  00320A  A4D8               	btfss	status,2,c
  4844  00320C  D009               	goto	l5777
  4845  00320E                     u7210:
  4846  00320E  0E00               	movlw	0
  4847  003210  6E13               	movwf	?___fltol,c
  4848  003212  0E00               	movlw	0
  4849  003214  6E14               	movwf	?___fltol+1,c
  4850  003216  0E00               	movlw	0
  4851  003218  6E15               	movwf	?___fltol+2,c
  4852  00321A  0E00               	movlw	0
  4853  00321C  6E16               	movwf	?___fltol+3,c
  4854  00321E  0012               	return	
  4855  003220                     l5777:
  4856  003220  C013  F017         	movff	___fltol@f1,??___fltol
  4857  003224  C014  F018         	movff	___fltol@f1+1,??___fltol+1
  4858  003228  C015  F019         	movff	___fltol@f1+2,??___fltol+2
  4859  00322C  C016  F01A         	movff	___fltol@f1+3,??___fltol+3
  4860  003230  0E20               	movlw	32
  4861  003232  D005               	goto	u7220
  4862  003234                     u7225:
  4863  003234  90D8               	bcf	status,0,c
  4864  003236  321A               	rrcf	??___fltol+3,f,c
  4865  003238  3219               	rrcf	??___fltol+2,f,c
  4866  00323A  3218               	rrcf	??___fltol+1,f,c
  4867  00323C  3217               	rrcf	??___fltol,f,c
  4868  00323E                     u7220:
  4869  00323E  2EE8               	decfsz	wreg,f,c
  4870  003240  D7F9               	goto	u7225
  4871  003242  5017               	movf	??___fltol,w,c
  4872  003244  6E1B               	movwf	___fltol@sign1,c
  4873  003246  8E15               	bsf	___fltol@f1+2,7,c
  4874  003248  0EFF               	movlw	255
  4875  00324A  1613               	andwf	___fltol@f1,f,c
  4876  00324C  0EFF               	movlw	255
  4877  00324E  1614               	andwf	___fltol@f1+1,f,c
  4878  003250  0EFF               	movlw	255
  4879  003252  1615               	andwf	___fltol@f1+2,f,c
  4880  003254  0E00               	movlw	0
  4881  003256  1616               	andwf	___fltol@f1+3,f,c
  4882  003258  0E96               	movlw	150
  4883  00325A  5E1C               	subwf	___fltol@exp1,f,c
  4884  00325C  AE1C               	btfss	___fltol@exp1,7,c
  4885  00325E  D00D               	goto	l5797
  4886  003260  501C               	movf	___fltol@exp1,w,c
  4887  003262  0A80               	xorlw	128
  4888  003264  0F97               	addlw	151
  4889  003266  A0D8               	btfss	status,0,c
  4890  003268  D7D2               	goto	u7210
  4891  00326A                     l5793:
  4892  00326A  90D8               	bcf	status,0,c
  4893  00326C  3216               	rrcf	___fltol@f1+3,f,c
  4894  00326E  3215               	rrcf	___fltol@f1+2,f,c
  4895  003270  3214               	rrcf	___fltol@f1+1,f,c
  4896  003272  3213               	rrcf	___fltol@f1,f,c
  4897  003274  3E1C               	incfsz	___fltol@exp1,f,c
  4898  003276  D7F9               	goto	l5793
  4899  003278  D00D               	goto	u7260
  4900  00327A                     l5797:
  4901  00327A  0E1F               	movlw	31
  4902  00327C  641C               	cpfsgt	___fltol@exp1,c
  4903  00327E  D007               	goto	l5805
  4904  003280  D7C6               	goto	u7210
  4905  003282                     l5803:
  4906  003282  90D8               	bcf	status,0,c
  4907  003284  3613               	rlcf	___fltol@f1,f,c
  4908  003286  3614               	rlcf	___fltol@f1+1,f,c
  4909  003288  3615               	rlcf	___fltol@f1+2,f,c
  4910  00328A  3616               	rlcf	___fltol@f1+3,f,c
  4911  00328C  061C               	decf	___fltol@exp1,f,c
  4912  00328E                     l5805:
  4913  00328E  501C               	movf	___fltol@exp1,w,c
  4914  003290  A4D8               	btfss	status,2,c
  4915  003292  D7F7               	goto	l5803
  4916  003294                     u7260:
  4917  003294  501B               	movf	___fltol@sign1,w,c
  4918  003296  B4D8               	btfsc	status,2,c
  4919  003298  D008               	goto	l5811
  4920  00329A  1E16               	comf	___fltol@f1+3,f,c
  4921  00329C  1E15               	comf	___fltol@f1+2,f,c
  4922  00329E  1E14               	comf	___fltol@f1+1,f,c
  4923  0032A0  6C13               	negf	___fltol@f1,c
  4924  0032A2  0E00               	movlw	0
  4925  0032A4  2214               	addwfc	___fltol@f1+1,f,c
  4926  0032A6  2215               	addwfc	___fltol@f1+2,f,c
  4927  0032A8  2216               	addwfc	___fltol@f1+3,f,c
  4928  0032AA                     l5811:
  4929  0032AA  C013  F013         	movff	___fltol@f1,?___fltol
  4930  0032AE  C014  F014         	movff	___fltol@f1+1,?___fltol+1
  4931  0032B2  C015  F015         	movff	___fltol@f1+2,?___fltol+2
  4932  0032B6  C016  F016         	movff	___fltol@f1+3,?___fltol+3
  4933  0032BA  0012               	return		;funcret
  4934  0032BC                     __end_of___fltol:
  4935                           	opt callstack 0
  4936                           
  4937 ;; *************** function ___flsub *****************
  4938 ;; Defined at:
  4939 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  b               4    0[BANK0 ] long 
  4942 ;;  a               4    4[BANK0 ] long 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;		None
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  4    0[BANK0 ] long 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4954 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;Total ram usage:        8 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    5
  4961 ;; This function calls:
  4962 ;;		___fladd
  4963 ;; This function is called by:
  4964 ;;		_efgtoa
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text17
  4969  003C42                     __ptext17:
  4970                           	opt callstack 0
  4971  003C42                     ___flsub:
  4972                           	opt callstack 20
  4973                           
  4974                           ;incstack = 0
  4975  003C42  0E00               	movlw	0
  4976  003C44  0100               	movlb	0	; () banked
  4977  003C46  1B64               	xorwf	___flsub@a& (0+255),f,b
  4978  003C48  0E00               	movlw	0
  4979  003C4A  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
  4980  003C4C  0E00               	movlw	0
  4981  003C4E  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
  4982  003C50  0E80               	movlw	128
  4983  003C52  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
  4984                           
  4985                           ; BSR set to: 0
  4986  003C54  C060  F013         	movff	___flsub@b,___fladd@b
  4987  003C58  C061  F014         	movff	___flsub@b+1,___fladd@b+1
  4988  003C5C  C062  F015         	movff	___flsub@b+2,___fladd@b+2
  4989  003C60  C063  F016         	movff	___flsub@b+3,___fladd@b+3
  4990  003C64  C064  F017         	movff	___flsub@a,___fladd@a
  4991  003C68  C065  F018         	movff	___flsub@a+1,___fladd@a+1
  4992  003C6C  C066  F019         	movff	___flsub@a+2,___fladd@a+2
  4993  003C70  C067  F01A         	movff	___flsub@a+3,___fladd@a+3
  4994  003C74  ECC7  F010         	call	___fladd	;wreg free
  4995  003C78  C013  F060         	movff	?___fladd,?___flsub
  4996  003C7C  C014  F061         	movff	?___fladd+1,?___flsub+1
  4997  003C80  C015  F062         	movff	?___fladd+2,?___flsub+2
  4998  003C84  C016  F063         	movff	?___fladd+3,?___flsub+3
  4999  003C88  0012               	return		;funcret
  5000  003C8A                     __end_of___flsub:
  5001                           	opt callstack 0
  5002                           
  5003 ;; *************** function ___fladd *****************
  5004 ;; Defined at:
  5005 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  b               4   18[COMRAM] long 
  5008 ;;  a               4   22[COMRAM] long 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  grs             1   33[COMRAM] unsigned char 
  5011 ;;  bexp            1   32[COMRAM] unsigned char 
  5012 ;;  aexp            1   31[COMRAM] unsigned char 
  5013 ;;  signs           1   30[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  4   18[COMRAM] unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5023 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5027 ;;Total ram usage:       16 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_efgtoa
  5034 ;;		___flsub
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text18
  5039  00218E                     __ptext18:
  5040                           	opt callstack 0
  5041  00218E                     ___fladd:
  5042                           	opt callstack 20
  5043                           
  5044                           ;incstack = 0
  5045  00218E  5016               	movf	___fladd@b+3,w,c
  5046  002190  0B80               	andlw	128
  5047  002192  6E1F               	movwf	___fladd@signs,c
  5048  002194  5016               	movf	___fladd@b+3,w,c
  5049  002196  2416               	addwf	___fladd@b+3,w,c
  5050  002198  6E21               	movwf	___fladd@bexp,c
  5051  00219A  BE15               	btfsc	___fladd@b+2,7,c
  5052  00219C  8021               	bsf	___fladd@bexp,0,c
  5053  00219E  5021               	movf	___fladd@bexp,w,c
  5054  0021A0  B4D8               	btfsc	status,2,c
  5055  0021A2  D00D               	goto	l5089
  5056  0021A4  2821               	incf	___fladd@bexp,w,c
  5057  0021A6  A4D8               	btfss	status,2,c
  5058  0021A8  D008               	goto	l5085
  5059  0021AA  0E00               	movlw	0
  5060  0021AC  6E13               	movwf	___fladd@b,c
  5061  0021AE  0E00               	movlw	0
  5062  0021B0  6E14               	movwf	___fladd@b+1,c
  5063  0021B2  0E00               	movlw	0
  5064  0021B4  6E15               	movwf	___fladd@b+2,c
  5065  0021B6  0E00               	movlw	0
  5066  0021B8  6E16               	movwf	___fladd@b+3,c
  5067  0021BA                     l5085:
  5068  0021BA  8E15               	bsf	___fladd@b+2,7,c
  5069  0021BC  D006               	goto	L7
  5070  0021BE                     l5089:
  5071  0021BE  0E00               	movlw	0
  5072  0021C0  6E13               	movwf	___fladd@b,c
  5073  0021C2  0E00               	movlw	0
  5074  0021C4  6E14               	movwf	___fladd@b+1,c
  5075  0021C6  0E00               	movlw	0
  5076  0021C8  6E15               	movwf	___fladd@b+2,c
  5077  0021CA                     L7:
  5078  0021CA  0E00               	movlw	0
  5079  0021CC  6E16               	movwf	___fladd@b+3,c
  5080  0021CE  501A               	movf	___fladd@a+3,w,c
  5081  0021D0  0B80               	andlw	128
  5082  0021D2  6E20               	movwf	___fladd@aexp,c
  5083  0021D4  501F               	movf	___fladd@signs,w,c
  5084  0021D6  1820               	xorwf	___fladd@aexp,w,c
  5085  0021D8  A4D8               	btfss	status,2,c
  5086  0021DA  8C1F               	bsf	___fladd@signs,6,c
  5087  0021DC  501A               	movf	___fladd@a+3,w,c
  5088  0021DE  241A               	addwf	___fladd@a+3,w,c
  5089  0021E0  6E20               	movwf	___fladd@aexp,c
  5090  0021E2  BE19               	btfsc	___fladd@a+2,7,c
  5091  0021E4  8020               	bsf	___fladd@aexp,0,c
  5092  0021E6  5020               	movf	___fladd@aexp,w,c
  5093  0021E8  B4D8               	btfsc	status,2,c
  5094  0021EA  D00D               	goto	l5113
  5095  0021EC  2820               	incf	___fladd@aexp,w,c
  5096  0021EE  A4D8               	btfss	status,2,c
  5097  0021F0  D008               	goto	l5109
  5098  0021F2  0E00               	movlw	0
  5099  0021F4  6E17               	movwf	___fladd@a,c
  5100  0021F6  0E00               	movlw	0
  5101  0021F8  6E18               	movwf	___fladd@a+1,c
  5102  0021FA  0E00               	movlw	0
  5103  0021FC  6E19               	movwf	___fladd@a+2,c
  5104  0021FE  0E00               	movlw	0
  5105  002200  6E1A               	movwf	___fladd@a+3,c
  5106  002202                     l5109:
  5107  002202  8E19               	bsf	___fladd@a+2,7,c
  5108  002204  D006               	goto	L8
  5109  002206                     l5113:
  5110  002206  0E00               	movlw	0
  5111  002208  6E17               	movwf	___fladd@a,c
  5112  00220A  0E00               	movlw	0
  5113  00220C  6E18               	movwf	___fladd@a+1,c
  5114  00220E  0E00               	movlw	0
  5115  002210  6E19               	movwf	___fladd@a+2,c
  5116  002212                     L8:
  5117  002212  0E00               	movlw	0
  5118  002214  6E1A               	movwf	___fladd@a+3,c
  5119  002216  5021               	movf	___fladd@bexp,w,c
  5120  002218  5C20               	subwf	___fladd@aexp,w,c
  5121  00221A  B0D8               	btfsc	status,0,c
  5122  00221C  D022               	goto	l5151
  5123  00221E  AC1F               	btfss	___fladd@signs,6,c
  5124  002220  D002               	goto	l5121
  5125  002222  0E80               	movlw	128
  5126  002224  1A1F               	xorwf	___fladd@signs,f,c
  5127  002226                     l5121:
  5128  002226  C021  F022         	movff	___fladd@bexp,___fladd@grs
  5129  00222A  C020  F021         	movff	___fladd@aexp,___fladd@bexp
  5130  00222E  C022  F020         	movff	___fladd@grs,___fladd@aexp
  5131  002232  C013  F022         	movff	___fladd@b,___fladd@grs
  5132  002236  C017  F013         	movff	___fladd@a,___fladd@b
  5133  00223A  C022  F017         	movff	___fladd@grs,___fladd@a
  5134  00223E  C014  F022         	movff	___fladd@b+1,___fladd@grs
  5135  002242  C018  F014         	movff	___fladd@a+1,___fladd@b+1
  5136  002246  C022  F018         	movff	___fladd@grs,___fladd@a+1
  5137  00224A  C015  F022         	movff	___fladd@b+2,___fladd@grs
  5138  00224E  C019  F015         	movff	___fladd@a+2,___fladd@b+2
  5139  002252  C022  F019         	movff	___fladd@grs,___fladd@a+2
  5140  002256  C016  F022         	movff	___fladd@b+3,___fladd@grs
  5141  00225A  C01A  F016         	movff	___fladd@a+3,___fladd@b+3
  5142  00225E  C022  F01A         	movff	___fladd@grs,___fladd@a+3
  5143  002262                     l5151:
  5144  002262  0E00               	movlw	0
  5145  002264  6E22               	movwf	___fladd@grs,c
  5146  002266  5021               	movf	___fladd@bexp,w,c
  5147  002268  C020  F01B         	movff	___fladd@aexp,??___fladd
  5148  00226C  6A1C               	clrf	(??___fladd+1)& (0+255),c
  5149  00226E  5E1B               	subwf	??___fladd,f,c
  5150  002270  0E00               	movlw	0
  5151  002272  5A1C               	subwfb	??___fladd+1,f,c
  5152  002274  BE1C               	btfsc	??___fladd+1,7,c
  5153  002276  D02C               	goto	l1040
  5154  002278  501C               	movf	??___fladd+1,w,c
  5155  00227A  E104               	bnz	u6000
  5156  00227C  0E1A               	movlw	26
  5157  00227E  5C1B               	subwf	??___fladd,w,c
  5158  002280  A0D8               	btfss	status,0,c
  5159  002282  D026               	goto	l1040
  5160  002284                     u6000:
  5161  002284  5013               	movf	___fladd@b,w,c
  5162  002286  1014               	iorwf	___fladd@b+1,w,c
  5163  002288  1015               	iorwf	___fladd@b+2,w,c
  5164  00228A  1016               	iorwf	___fladd@b+3,w,c
  5165  00228C  B4D8               	btfsc	status,2,c
  5166  00228E  D002               	goto	u6010
  5167  002290  0E01               	movlw	1
  5168  002292  D001               	goto	u6020
  5169  002294                     u6010:
  5170  002294  0E00               	movlw	0
  5171  002296                     u6020:
  5172  002296  6E22               	movwf	___fladd@grs,c
  5173  002298  0E00               	movlw	0
  5174  00229A  6E13               	movwf	___fladd@b,c
  5175  00229C  0E00               	movlw	0
  5176  00229E  6E14               	movwf	___fladd@b+1,c
  5177  0022A0  0E00               	movlw	0
  5178  0022A2  6E15               	movwf	___fladd@b+2,c
  5179  0022A4  0E00               	movlw	0
  5180  0022A6  6E16               	movwf	___fladd@b+3,c
  5181  0022A8  C020  F021         	movff	___fladd@aexp,___fladd@bexp
  5182  0022AC  D015               	goto	u6050
  5183  0022AE                     l1041:
  5184  0022AE  A022               	btfss	___fladd@grs,0,c
  5185  0022B0  D005               	goto	l5163
  5186  0022B2  90D8               	bcf	status,0,c
  5187  0022B4  3022               	rrcf	___fladd@grs,w,c
  5188  0022B6  0901               	iorlw	1
  5189  0022B8  6E22               	movwf	___fladd@grs,c
  5190  0022BA  D002               	goto	l5165
  5191  0022BC                     l5163:
  5192  0022BC  90D8               	bcf	status,0,c
  5193  0022BE  3222               	rrcf	___fladd@grs,f,c
  5194  0022C0                     l5165:
  5195  0022C0  B013               	btfsc	___fladd@b,0,c
  5196  0022C2  8E22               	bsf	___fladd@grs,7,c
  5197  0022C4  3416               	rlcf	___fladd@b+3,w,c
  5198  0022C6  3216               	rrcf	___fladd@b+3,f,c
  5199  0022C8  3215               	rrcf	___fladd@b+2,f,c
  5200  0022CA  3214               	rrcf	___fladd@b+1,f,c
  5201  0022CC  3213               	rrcf	___fladd@b,f,c
  5202  0022CE  2A21               	incf	___fladd@bexp,f,c
  5203  0022D0                     l1040:
  5204  0022D0  5020               	movf	___fladd@aexp,w,c
  5205  0022D2  5C21               	subwf	___fladd@bexp,w,c
  5206  0022D4  A0D8               	btfss	status,0,c
  5207  0022D6  D7EB               	goto	l1041
  5208  0022D8                     u6050:
  5209  0022D8  BC1F               	btfsc	___fladd@signs,6,c
  5210  0022DA  D028               	goto	l5197
  5211  0022DC  5021               	movf	___fladd@bexp,w,c
  5212  0022DE  A4D8               	btfss	status,2,c
  5213  0022E0  D009               	goto	l5179
  5214  0022E2  0E00               	movlw	0
  5215  0022E4  6E13               	movwf	?___fladd,c
  5216  0022E6  0E00               	movlw	0
  5217  0022E8  6E14               	movwf	?___fladd+1,c
  5218  0022EA  0E00               	movlw	0
  5219  0022EC  6E15               	movwf	?___fladd+2,c
  5220  0022EE  0E00               	movlw	0
  5221  0022F0  6E16               	movwf	?___fladd+3,c
  5222  0022F2  0012               	return	
  5223  0022F4                     l5179:
  5224  0022F4  5017               	movf	___fladd@a,w,c
  5225  0022F6  2613               	addwf	___fladd@b,f,c
  5226  0022F8  5018               	movf	___fladd@a+1,w,c
  5227  0022FA  2214               	addwfc	___fladd@b+1,f,c
  5228  0022FC  5019               	movf	___fladd@a+2,w,c
  5229  0022FE  2215               	addwfc	___fladd@b+2,f,c
  5230  002300  501A               	movf	___fladd@a+3,w,c
  5231  002302  2216               	addwfc	___fladd@b+3,f,c
  5232  002304  A016               	btfss	___fladd@b+3,0,c
  5233  002306  D071               	goto	u6180
  5234  002308  A022               	btfss	___fladd@grs,0,c
  5235  00230A  D005               	goto	l5187
  5236  00230C  90D8               	bcf	status,0,c
  5237  00230E  3022               	rrcf	___fladd@grs,w,c
  5238  002310  0901               	iorlw	1
  5239  002312  6E22               	movwf	___fladd@grs,c
  5240  002314  D002               	goto	l5189
  5241  002316                     l5187:
  5242  002316  90D8               	bcf	status,0,c
  5243  002318  3222               	rrcf	___fladd@grs,f,c
  5244  00231A                     l5189:
  5245  00231A  B013               	btfsc	___fladd@b,0,c
  5246  00231C  8E22               	bsf	___fladd@grs,7,c
  5247  00231E  3416               	rlcf	___fladd@b+3,w,c
  5248  002320  3216               	rrcf	___fladd@b+3,f,c
  5249  002322  3215               	rrcf	___fladd@b+2,f,c
  5250  002324  3214               	rrcf	___fladd@b+1,f,c
  5251  002326  3213               	rrcf	___fladd@b,f,c
  5252  002328  2A21               	incf	___fladd@bexp,f,c
  5253  00232A  D05F               	goto	u6180
  5254  00232C                     l5197:
  5255  00232C  5017               	movf	___fladd@a,w,c
  5256  00232E  5C13               	subwf	___fladd@b,w,c
  5257  002330  5018               	movf	___fladd@a+1,w,c
  5258  002332  5814               	subwfb	___fladd@b+1,w,c
  5259  002334  5019               	movf	___fladd@a+2,w,c
  5260  002336  5815               	subwfb	___fladd@b+2,w,c
  5261  002338  5016               	movf	___fladd@b+3,w,c
  5262  00233A  0A80               	xorlw	128
  5263  00233C  6E1B               	movwf	??___fladd& (0+255),c
  5264  00233E  501A               	movf	___fladd@a+3,w,c
  5265  002340  0A80               	xorlw	128
  5266  002342  581B               	subwfb	??___fladd& (0+255),w,c
  5267  002344  B0D8               	btfsc	status,0,c
  5268  002346  D025               	goto	l5207
  5269  002348  5013               	movf	___fladd@b,w,c
  5270  00234A  5C17               	subwf	___fladd@a,w,c
  5271  00234C  6E1B               	movwf	??___fladd& (0+255),c
  5272  00234E  5014               	movf	___fladd@b+1,w,c
  5273  002350  5818               	subwfb	___fladd@a+1,w,c
  5274  002352  6E1C               	movwf	(??___fladd+1)& (0+255),c
  5275  002354  5015               	movf	___fladd@b+2,w,c
  5276  002356  5819               	subwfb	___fladd@a+2,w,c
  5277  002358  6E1D               	movwf	(??___fladd+2)& (0+255),c
  5278  00235A  5016               	movf	___fladd@b+3,w,c
  5279  00235C  581A               	subwfb	___fladd@a+3,w,c
  5280  00235E  6E1E               	movwf	(??___fladd+3)& (0+255),c
  5281  002360  0EFF               	movlw	255
  5282  002362  241B               	addwf	??___fladd,w,c
  5283  002364  6E13               	movwf	___fladd@b,c
  5284  002366  0EFF               	movlw	255
  5285  002368  201C               	addwfc	??___fladd+1,w,c
  5286  00236A  6E14               	movwf	___fladd@b+1,c
  5287  00236C  0EFF               	movlw	255
  5288  00236E  201D               	addwfc	??___fladd+2,w,c
  5289  002370  6E15               	movwf	___fladd@b+2,c
  5290  002372  0EFF               	movlw	255
  5291  002374  201E               	addwfc	??___fladd+3,w,c
  5292  002376  6E16               	movwf	___fladd@b+3,c
  5293  002378  0E80               	movlw	128
  5294  00237A  1A1F               	xorwf	___fladd@signs,f,c
  5295  00237C  6C22               	negf	___fladd@grs,c
  5296  00237E  5022               	movf	___fladd@grs,w,c
  5297  002380  A4D8               	btfss	status,2,c
  5298  002382  D00F               	goto	l1056
  5299  002384  0E01               	movlw	1
  5300  002386  2613               	addwf	___fladd@b,f,c
  5301  002388  0E00               	movlw	0
  5302  00238A  2214               	addwfc	___fladd@b+1,f,c
  5303  00238C  2215               	addwfc	___fladd@b+2,f,c
  5304  00238E  2216               	addwfc	___fladd@b+3,f,c
  5305  002390  D008               	goto	l1056
  5306  002392                     l5207:
  5307  002392  5017               	movf	___fladd@a,w,c
  5308  002394  5E13               	subwf	___fladd@b,f,c
  5309  002396  5018               	movf	___fladd@a+1,w,c
  5310  002398  5A14               	subwfb	___fladd@b+1,f,c
  5311  00239A  5019               	movf	___fladd@a+2,w,c
  5312  00239C  5A15               	subwfb	___fladd@b+2,f,c
  5313  00239E  501A               	movf	___fladd@a+3,w,c
  5314  0023A0  5A16               	subwfb	___fladd@b+3,f,c
  5315  0023A2                     l1056:
  5316  0023A2  5013               	movf	___fladd@b,w,c
  5317  0023A4  1014               	iorwf	___fladd@b+1,w,c
  5318  0023A6  1015               	iorwf	___fladd@b+2,w,c
  5319  0023A8  1016               	iorwf	___fladd@b+3,w,c
  5320  0023AA  A4D8               	btfss	status,2,c
  5321  0023AC  D01C               	goto	l5231
  5322  0023AE  5022               	movf	___fladd@grs,w,c
  5323  0023B0  A4D8               	btfss	status,2,c
  5324  0023B2  D019               	goto	l5231
  5325  0023B4  0E00               	movlw	0
  5326  0023B6  6E13               	movwf	?___fladd,c
  5327  0023B8  0E00               	movlw	0
  5328  0023BA  6E14               	movwf	?___fladd+1,c
  5329  0023BC  0E00               	movlw	0
  5330  0023BE  6E15               	movwf	?___fladd+2,c
  5331  0023C0  0E00               	movlw	0
  5332  0023C2  6E16               	movwf	?___fladd+3,c
  5333  0023C4  0012               	return	
  5334  0023C6                     l5215:
  5335  0023C6  90D8               	bcf	status,0,c
  5336  0023C8  3613               	rlcf	___fladd@b,f,c
  5337  0023CA  3614               	rlcf	___fladd@b+1,f,c
  5338  0023CC  3615               	rlcf	___fladd@b+2,f,c
  5339  0023CE  3616               	rlcf	___fladd@b+3,f,c
  5340  0023D0  BE22               	btfsc	___fladd@grs,7,c
  5341  0023D2  8013               	bsf	___fladd@b,0,c
  5342  0023D4  A022               	btfss	___fladd@grs,0,c
  5343  0023D6  D002               	goto	l5225
  5344  0023D8  80D8               	bsf	status,0,c
  5345  0023DA  D001               	goto	L9
  5346  0023DC                     l5225:
  5347  0023DC  90D8               	bcf	status,0,c
  5348  0023DE                     L9:
  5349  0023DE  3622               	rlcf	___fladd@grs,f,c
  5350  0023E0  5021               	movf	___fladd@bexp,w,c
  5351  0023E2  A4D8               	btfss	status,2,c
  5352  0023E4  0621               	decf	___fladd@bexp,f,c
  5353  0023E6                     l5231:
  5354  0023E6  AE15               	btfss	___fladd@b+2,7,c
  5355  0023E8  D7EE               	goto	l5215
  5356  0023EA                     u6180:
  5357  0023EA  0E00               	movlw	0
  5358  0023EC  6E20               	movwf	___fladd@aexp,c
  5359  0023EE  AE22               	btfss	___fladd@grs,7,c
  5360  0023F0  D00B               	goto	l1065
  5361  0023F2  C022  F01B         	movff	___fladd@grs,??___fladd
  5362  0023F6  0E7F               	movlw	127
  5363  0023F8  161B               	andwf	??___fladd,f,c
  5364  0023FA  B4D8               	btfsc	status,2,c
  5365  0023FC  D003               	goto	l1066
  5366  0023FE                     u6200:
  5367  0023FE  0E01               	movlw	1
  5368  002400  6E20               	movwf	___fladd@aexp,c
  5369  002402  D002               	goto	l1065
  5370  002404                     l1066:
  5371  002404  B013               	btfsc	___fladd@b,0,c
  5372  002406  D7FB               	goto	u6200
  5373  002408                     l1065:
  5374  002408  5020               	movf	___fladd@aexp,w,c
  5375  00240A  B4D8               	btfsc	status,2,c
  5376  00240C  D020               	goto	l5251
  5377  00240E  0E01               	movlw	1
  5378  002410  2613               	addwf	___fladd@b,f,c
  5379  002412  0E00               	movlw	0
  5380  002414  2214               	addwfc	___fladd@b+1,f,c
  5381  002416  2215               	addwfc	___fladd@b+2,f,c
  5382  002418  2216               	addwfc	___fladd@b+3,f,c
  5383  00241A  A016               	btfss	___fladd@b+3,0,c
  5384  00241C  D018               	goto	l5251
  5385  00241E  C013  F01B         	movff	___fladd@b,??___fladd
  5386  002422  C014  F01C         	movff	___fladd@b+1,??___fladd+1
  5387  002426  C015  F01D         	movff	___fladd@b+2,??___fladd+2
  5388  00242A  C016  F01E         	movff	___fladd@b+3,??___fladd+3
  5389  00242E  341E               	rlcf	??___fladd+3,w,c
  5390  002430  321E               	rrcf	??___fladd+3,f,c
  5391  002432  321D               	rrcf	??___fladd+2,f,c
  5392  002434  321C               	rrcf	??___fladd+1,f,c
  5393  002436  321B               	rrcf	??___fladd,f,c
  5394  002438  C01B  F013         	movff	??___fladd,___fladd@b
  5395  00243C  C01C  F014         	movff	??___fladd+1,___fladd@b+1
  5396  002440  C01D  F015         	movff	??___fladd+2,___fladd@b+2
  5397  002444  C01E  F016         	movff	??___fladd+3,___fladd@b+3
  5398  002448  2821               	incf	___fladd@bexp,w,c
  5399  00244A  A4D8               	btfss	status,2,c
  5400  00244C  2A21               	incf	___fladd@bexp,f,c
  5401  00244E                     l5251:
  5402  00244E  2821               	incf	___fladd@bexp,w,c
  5403  002450  B4D8               	btfsc	status,2,c
  5404  002452  D003               	goto	u6260
  5405  002454  5021               	movf	___fladd@bexp,w,c
  5406  002456  A4D8               	btfss	status,2,c
  5407  002458  D00D               	goto	l5259
  5408  00245A                     u6260:
  5409  00245A  0E00               	movlw	0
  5410  00245C  6E13               	movwf	___fladd@b,c
  5411  00245E  0E00               	movlw	0
  5412  002460  6E14               	movwf	___fladd@b+1,c
  5413  002462  0E00               	movlw	0
  5414  002464  6E15               	movwf	___fladd@b+2,c
  5415  002466  0E00               	movlw	0
  5416  002468  6E16               	movwf	___fladd@b+3,c
  5417  00246A  5021               	movf	___fladd@bexp,w,c
  5418  00246C  A4D8               	btfss	status,2,c
  5419  00246E  D002               	goto	l5259
  5420  002470  0E00               	movlw	0
  5421  002472  6E1F               	movwf	___fladd@signs,c
  5422  002474                     l5259:
  5423  002474  A021               	btfss	___fladd@bexp,0,c
  5424  002476  D002               	goto	l5263
  5425  002478  8E15               	bsf	___fladd@b+2,7,c
  5426  00247A  D001               	goto	l5265
  5427  00247C                     l5263:
  5428  00247C  9E15               	bcf	___fladd@b+2,7,c
  5429  00247E                     l5265:
  5430  00247E  90D8               	bcf	status,0,c
  5431  002480  3021               	rrcf	___fladd@bexp,w,c
  5432  002482  6E16               	movwf	___fladd@b+3,c
  5433  002484  BE1F               	btfsc	___fladd@signs,7,c
  5434  002486  8E16               	bsf	___fladd@b+3,7,c
  5435  002488  C013  F013         	movff	___fladd@b,?___fladd
  5436  00248C  C014  F014         	movff	___fladd@b+1,?___fladd+1
  5437  002490  C015  F015         	movff	___fladd@b+2,?___fladd+2
  5438  002494  C016  F016         	movff	___fladd@b+3,?___fladd+3
  5439  002498  0012               	return		;funcret
  5440  00249A                     __end_of___fladd:
  5441                           	opt callstack 0
  5442                           
  5443 ;; *************** function ___flneg *****************
  5444 ;; Defined at:
  5445 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  f1              4   18[COMRAM] unsigned char 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  4   18[COMRAM] unsigned char 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;Total ram usage:        4 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    4
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_efgtoa
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text19
  5474  003DCC                     __ptext19:
  5475                           	opt callstack 0
  5476  003DCC                     ___flneg:
  5477                           	opt callstack 21
  5478                           
  5479                           ;incstack = 0
  5480  003DCC  5013               	movf	___flneg@f1,w,c
  5481  003DCE  1014               	iorwf	___flneg@f1+1,w,c
  5482  003DD0  1015               	iorwf	___flneg@f1+2,w,c
  5483  003DD2  1016               	iorwf	___flneg@f1+3,w,c
  5484  003DD4  B4D8               	btfsc	status,2,c
  5485  003DD6  D008               	goto	l5767
  5486  003DD8  0E00               	movlw	0
  5487  003DDA  1A13               	xorwf	___flneg@f1,f,c
  5488  003DDC  0E00               	movlw	0
  5489  003DDE  1A14               	xorwf	___flneg@f1+1,f,c
  5490  003DE0  0E00               	movlw	0
  5491  003DE2  1A15               	xorwf	___flneg@f1+2,f,c
  5492  003DE4  0E80               	movlw	128
  5493  003DE6  1A16               	xorwf	___flneg@f1+3,f,c
  5494  003DE8                     l5767:
  5495  003DE8  C013  F013         	movff	___flneg@f1,?___flneg
  5496  003DEC  C014  F014         	movff	___flneg@f1+1,?___flneg+1
  5497  003DF0  C015  F015         	movff	___flneg@f1+2,?___flneg+2
  5498  003DF4  C016  F016         	movff	___flneg@f1+3,?___flneg+3
  5499  003DF8  0012               	return		;funcret
  5500  003DFA                     __end_of___flneg:
  5501                           	opt callstack 0
  5502                           
  5503 ;; *************** function ___flmul *****************
  5504 ;; Defined at:
  5505 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  b               4   32[COMRAM] unsigned char 
  5508 ;;  a               4   36[COMRAM] unsigned char 
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  prod            4   51[COMRAM] struct .
  5511 ;;  grs             4   46[COMRAM] unsigned long 
  5512 ;;  temp            2   55[COMRAM] struct .
  5513 ;;  bexp            1   50[COMRAM] unsigned char 
  5514 ;;  aexp            1   45[COMRAM] unsigned char 
  5515 ;;  sign            1   44[COMRAM] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  4   32[COMRAM] unsigned char 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, prodl, prodh
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5525 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;Total ram usage:       25 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    4
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_tempC
  5536 ;;		_volts
  5537 ;;		_efgtoa
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text20
  5542  001E3C                     __ptext20:
  5543                           	opt callstack 0
  5544  001E3C                     ___flmul:
  5545                           	opt callstack 21
  5546                           
  5547                           ;incstack = 0
  5548  001E3C  5024               	movf	___flmul@b+3,w,c
  5549  001E3E  0B80               	andlw	128
  5550  001E40  6E2D               	movwf	___flmul@sign,c
  5551  001E42  5024               	movf	___flmul@b+3,w,c
  5552  001E44  2424               	addwf	___flmul@b+3,w,c
  5553  001E46  6E33               	movwf	___flmul@bexp,c
  5554  001E48  BE23               	btfsc	___flmul@b+2,7,c
  5555  001E4A  8033               	bsf	___flmul@bexp,0,c
  5556  001E4C  5033               	movf	___flmul@bexp,w,c
  5557  001E4E  B4D8               	btfsc	status,2,c
  5558  001E50  D00D               	goto	l5523
  5559  001E52  2833               	incf	___flmul@bexp,w,c
  5560  001E54  A4D8               	btfss	status,2,c
  5561  001E56  D008               	goto	l5521
  5562  001E58  0E00               	movlw	0
  5563  001E5A  6E21               	movwf	___flmul@b,c
  5564  001E5C  0E00               	movlw	0
  5565  001E5E  6E22               	movwf	___flmul@b+1,c
  5566  001E60  0E00               	movlw	0
  5567  001E62  6E23               	movwf	___flmul@b+2,c
  5568  001E64  0E00               	movlw	0
  5569  001E66  6E24               	movwf	___flmul@b+3,c
  5570  001E68                     l5521:
  5571  001E68  8E23               	bsf	___flmul@b+2,7,c
  5572  001E6A  D008               	goto	l5525
  5573  001E6C                     l5523:
  5574  001E6C  0E00               	movlw	0
  5575  001E6E  6E21               	movwf	___flmul@b,c
  5576  001E70  0E00               	movlw	0
  5577  001E72  6E22               	movwf	___flmul@b+1,c
  5578  001E74  0E00               	movlw	0
  5579  001E76  6E23               	movwf	___flmul@b+2,c
  5580  001E78  0E00               	movlw	0
  5581  001E7A  6E24               	movwf	___flmul@b+3,c
  5582  001E7C                     l5525:
  5583  001E7C  5028               	movf	___flmul@a+3,w,c
  5584  001E7E  0B80               	andlw	128
  5585  001E80  1A2D               	xorwf	___flmul@sign,f,c
  5586  001E82  5028               	movf	___flmul@a+3,w,c
  5587  001E84  2428               	addwf	___flmul@a+3,w,c
  5588  001E86  6E2E               	movwf	___flmul@aexp,c
  5589  001E88  BE27               	btfsc	___flmul@a+2,7,c
  5590  001E8A  802E               	bsf	___flmul@aexp,0,c
  5591  001E8C  502E               	movf	___flmul@aexp,w,c
  5592  001E8E  B4D8               	btfsc	status,2,c
  5593  001E90  D00D               	goto	l5541
  5594  001E92  282E               	incf	___flmul@aexp,w,c
  5595  001E94  A4D8               	btfss	status,2,c
  5596  001E96  D008               	goto	l5539
  5597  001E98  0E00               	movlw	0
  5598  001E9A  6E25               	movwf	___flmul@a,c
  5599  001E9C  0E00               	movlw	0
  5600  001E9E  6E26               	movwf	___flmul@a+1,c
  5601  001EA0  0E00               	movlw	0
  5602  001EA2  6E27               	movwf	___flmul@a+2,c
  5603  001EA4  0E00               	movlw	0
  5604  001EA6  6E28               	movwf	___flmul@a+3,c
  5605  001EA8                     l5539:
  5606  001EA8  8E27               	bsf	___flmul@a+2,7,c
  5607  001EAA  D008               	goto	l1125
  5608  001EAC                     l5541:
  5609  001EAC  0E00               	movlw	0
  5610  001EAE  6E25               	movwf	___flmul@a,c
  5611  001EB0  0E00               	movlw	0
  5612  001EB2  6E26               	movwf	___flmul@a+1,c
  5613  001EB4  0E00               	movlw	0
  5614  001EB6  6E27               	movwf	___flmul@a+2,c
  5615  001EB8  0E00               	movlw	0
  5616  001EBA  6E28               	movwf	___flmul@a+3,c
  5617  001EBC                     l1125:
  5618  001EBC  502E               	movf	___flmul@aexp,w,c
  5619  001EBE  B4D8               	btfsc	status,2,c
  5620  001EC0  D003               	goto	u6880
  5621  001EC2  5033               	movf	___flmul@bexp,w,c
  5622  001EC4  A4D8               	btfss	status,2,c
  5623  001EC6  D009               	goto	l5549
  5624  001EC8                     u6880:
  5625  001EC8  0E00               	movlw	0
  5626  001ECA  6E21               	movwf	?___flmul,c
  5627  001ECC  0E00               	movlw	0
  5628  001ECE  6E22               	movwf	?___flmul+1,c
  5629  001ED0  0E00               	movlw	0
  5630  001ED2  6E23               	movwf	?___flmul+2,c
  5631  001ED4  0E00               	movlw	0
  5632  001ED6  6E24               	movwf	?___flmul+3,c
  5633  001ED8  0012               	return	
  5634  001EDA                     l5549:
  5635  001EDA  5027               	movf	___flmul@a+2,w,c
  5636  001EDC  0221               	mulwf	___flmul@b,c
  5637  001EDE  CFF3 F038          	movff	prodl,___flmul@temp
  5638  001EE2  CFF4 F039          	movff	prodh,___flmul@temp+1
  5639  001EE6  5038               	movf	___flmul@temp,w,c
  5640  001EE8  6E2F               	movwf	___flmul@grs,c
  5641  001EEA  6A30               	clrf	___flmul@grs+1,c
  5642  001EEC  6A31               	clrf	___flmul@grs+2,c
  5643  001EEE  6A32               	clrf	___flmul@grs+3,c
  5644  001EF0  5039               	movf	___flmul@temp+1,w,c
  5645  001EF2  6E34               	movwf	___flmul@prod,c
  5646  001EF4  6A35               	clrf	___flmul@prod+1,c
  5647  001EF6  6A36               	clrf	___flmul@prod+2,c
  5648  001EF8  6A37               	clrf	___flmul@prod+3,c
  5649  001EFA  5026               	movf	___flmul@a+1,w,c
  5650  001EFC  0222               	mulwf	___flmul@b+1,c
  5651  001EFE  CFF3 F038          	movff	prodl,___flmul@temp
  5652  001F02  CFF4 F039          	movff	prodh,___flmul@temp+1
  5653  001F06  5038               	movf	___flmul@temp,w,c
  5654  001F08  262F               	addwf	___flmul@grs,f,c
  5655  001F0A  0E00               	movlw	0
  5656  001F0C  2230               	addwfc	___flmul@grs+1,f,c
  5657  001F0E  2231               	addwfc	___flmul@grs+2,f,c
  5658  001F10  2232               	addwfc	___flmul@grs+3,f,c
  5659  001F12  5039               	movf	___flmul@temp+1,w,c
  5660  001F14  2634               	addwf	___flmul@prod,f,c
  5661  001F16  0E00               	movlw	0
  5662  001F18  2235               	addwfc	___flmul@prod+1,f,c
  5663  001F1A  2236               	addwfc	___flmul@prod+2,f,c
  5664  001F1C  2237               	addwfc	___flmul@prod+3,f,c
  5665  001F1E  5025               	movf	___flmul@a,w,c
  5666  001F20  0223               	mulwf	___flmul@b+2,c
  5667  001F22  CFF3 F038          	movff	prodl,___flmul@temp
  5668  001F26  CFF4 F039          	movff	prodh,___flmul@temp+1
  5669  001F2A  5038               	movf	___flmul@temp,w,c
  5670  001F2C  262F               	addwf	___flmul@grs,f,c
  5671  001F2E  0E00               	movlw	0
  5672  001F30  2230               	addwfc	___flmul@grs+1,f,c
  5673  001F32  2231               	addwfc	___flmul@grs+2,f,c
  5674  001F34  2232               	addwfc	___flmul@grs+3,f,c
  5675  001F36  5039               	movf	___flmul@temp+1,w,c
  5676  001F38  2634               	addwf	___flmul@prod,f,c
  5677  001F3A  0E00               	movlw	0
  5678  001F3C  2235               	addwfc	___flmul@prod+1,f,c
  5679  001F3E  2236               	addwfc	___flmul@prod+2,f,c
  5680  001F40  2237               	addwfc	___flmul@prod+3,f,c
  5681  001F42  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  5682  001F46  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  5683  001F4A  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  5684  001F4E  6A2F               	clrf	___flmul@grs,c
  5685  001F50  5025               	movf	___flmul@a,w,c
  5686  001F52  0222               	mulwf	___flmul@b+1,c
  5687  001F54  CFF3 F038          	movff	prodl,___flmul@temp
  5688  001F58  CFF4 F039          	movff	prodh,___flmul@temp+1
  5689  001F5C  5038               	movf	___flmul@temp,w,c
  5690  001F5E  262F               	addwf	___flmul@grs,f,c
  5691  001F60  5039               	movf	___flmul@temp+1,w,c
  5692  001F62  2230               	addwfc	___flmul@grs+1,f,c
  5693  001F64  0E00               	movlw	0
  5694  001F66  2231               	addwfc	___flmul@grs+2,f,c
  5695  001F68  0E00               	movlw	0
  5696  001F6A  2232               	addwfc	___flmul@grs+3,f,c
  5697  001F6C  5026               	movf	___flmul@a+1,w,c
  5698  001F6E  0221               	mulwf	___flmul@b,c
  5699  001F70  CFF3 F038          	movff	prodl,___flmul@temp
  5700  001F74  CFF4 F039          	movff	prodh,___flmul@temp+1
  5701  001F78  5038               	movf	___flmul@temp,w,c
  5702  001F7A  262F               	addwf	___flmul@grs,f,c
  5703  001F7C  5039               	movf	___flmul@temp+1,w,c
  5704  001F7E  2230               	addwfc	___flmul@grs+1,f,c
  5705  001F80  0E00               	movlw	0
  5706  001F82  2231               	addwfc	___flmul@grs+2,f,c
  5707  001F84  0E00               	movlw	0
  5708  001F86  2232               	addwfc	___flmul@grs+3,f,c
  5709  001F88  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  5710  001F8C  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  5711  001F90  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  5712  001F94  6A2F               	clrf	___flmul@grs,c
  5713  001F96  5025               	movf	___flmul@a,w,c
  5714  001F98  0221               	mulwf	___flmul@b,c
  5715  001F9A  CFF3 F038          	movff	prodl,___flmul@temp
  5716  001F9E  CFF4 F039          	movff	prodh,___flmul@temp+1
  5717  001FA2  5038               	movf	___flmul@temp,w,c
  5718  001FA4  262F               	addwf	___flmul@grs,f,c
  5719  001FA6  5039               	movf	___flmul@temp+1,w,c
  5720  001FA8  2230               	addwfc	___flmul@grs+1,f,c
  5721  001FAA  0E00               	movlw	0
  5722  001FAC  2231               	addwfc	___flmul@grs+2,f,c
  5723  001FAE  0E00               	movlw	0
  5724  001FB0  2232               	addwfc	___flmul@grs+3,f,c
  5725  001FB2  5027               	movf	___flmul@a+2,w,c
  5726  001FB4  0222               	mulwf	___flmul@b+1,c
  5727  001FB6  CFF3 F038          	movff	prodl,___flmul@temp
  5728  001FBA  CFF4 F039          	movff	prodh,___flmul@temp+1
  5729  001FBE  5038               	movf	___flmul@temp,w,c
  5730  001FC0  2634               	addwf	___flmul@prod,f,c
  5731  001FC2  5039               	movf	___flmul@temp+1,w,c
  5732  001FC4  2235               	addwfc	___flmul@prod+1,f,c
  5733  001FC6  0E00               	movlw	0
  5734  001FC8  2236               	addwfc	___flmul@prod+2,f,c
  5735  001FCA  0E00               	movlw	0
  5736  001FCC  2237               	addwfc	___flmul@prod+3,f,c
  5737  001FCE  5026               	movf	___flmul@a+1,w,c
  5738  001FD0  0223               	mulwf	___flmul@b+2,c
  5739  001FD2  CFF3 F038          	movff	prodl,___flmul@temp
  5740  001FD6  CFF4 F039          	movff	prodh,___flmul@temp+1
  5741  001FDA  5038               	movf	___flmul@temp,w,c
  5742  001FDC  2634               	addwf	___flmul@prod,f,c
  5743  001FDE  5039               	movf	___flmul@temp+1,w,c
  5744  001FE0  2235               	addwfc	___flmul@prod+1,f,c
  5745  001FE2  0E00               	movlw	0
  5746  001FE4  2236               	addwfc	___flmul@prod+2,f,c
  5747  001FE6  0E00               	movlw	0
  5748  001FE8  2237               	addwfc	___flmul@prod+3,f,c
  5749  001FEA  5027               	movf	___flmul@a+2,w,c
  5750  001FEC  0223               	mulwf	___flmul@b+2,c
  5751  001FEE  CFF3 F038          	movff	prodl,___flmul@temp
  5752  001FF2  CFF4 F039          	movff	prodh,___flmul@temp+1
  5753  001FF6  5038               	movf	___flmul@temp,w,c
  5754  001FF8  6E29               	movwf	??___flmul& (0+255),c
  5755  001FFA  5039               	movf	___flmul@temp+1,w,c
  5756  001FFC  6E2A               	movwf	(??___flmul+1)& (0+255),c
  5757  001FFE  6A2B               	clrf	(??___flmul+2)& (0+255),c
  5758  002000  6A2C               	clrf	(??___flmul+3)& (0+255),c
  5759  002002  C02B  F02C         	movff	??___flmul+2,??___flmul+3
  5760  002006  C02A  F02B         	movff	??___flmul+1,??___flmul+2
  5761  00200A  C029  F02A         	movff	??___flmul,??___flmul+1
  5762  00200E  6A29               	clrf	??___flmul,c
  5763  002010  5029               	movf	??___flmul,w,c
  5764  002012  2634               	addwf	___flmul@prod,f,c
  5765  002014  502A               	movf	??___flmul+1,w,c
  5766  002016  2235               	addwfc	___flmul@prod+1,f,c
  5767  002018  502B               	movf	??___flmul+2,w,c
  5768  00201A  2236               	addwfc	___flmul@prod+2,f,c
  5769  00201C  502C               	movf	??___flmul+3,w,c
  5770  00201E  2237               	addwfc	___flmul@prod+3,f,c
  5771  002020  C02F  F029         	movff	___flmul@grs,??___flmul
  5772  002024  C030  F02A         	movff	___flmul@grs+1,??___flmul+1
  5773  002028  C031  F02B         	movff	___flmul@grs+2,??___flmul+2
  5774  00202C  C032  F02C         	movff	___flmul@grs+3,??___flmul+3
  5775  002030  0E19               	movlw	25
  5776  002032  D005               	goto	u6890
  5777  002034                     u6895:
  5778  002034  90D8               	bcf	status,0,c
  5779  002036  322C               	rrcf	??___flmul+3,f,c
  5780  002038  322B               	rrcf	??___flmul+2,f,c
  5781  00203A  322A               	rrcf	??___flmul+1,f,c
  5782  00203C  3229               	rrcf	??___flmul,f,c
  5783  00203E                     u6890:
  5784  00203E  2EE8               	decfsz	wreg,f,c
  5785  002040  D7F9               	goto	u6895
  5786  002042  5029               	movf	??___flmul,w,c
  5787  002044  2634               	addwf	___flmul@prod,f,c
  5788  002046  502A               	movf	??___flmul+1,w,c
  5789  002048  2235               	addwfc	___flmul@prod+1,f,c
  5790  00204A  502B               	movf	??___flmul+2,w,c
  5791  00204C  2236               	addwfc	___flmul@prod+2,f,c
  5792  00204E  502C               	movf	??___flmul+3,w,c
  5793  002050  2237               	addwfc	___flmul@prod+3,f,c
  5794  002052  C031  F032         	movff	___flmul@grs+2,___flmul@grs+3
  5795  002056  C030  F031         	movff	___flmul@grs+1,___flmul@grs+2
  5796  00205A  C02F  F030         	movff	___flmul@grs,___flmul@grs+1
  5797  00205E  6A2F               	clrf	___flmul@grs,c
  5798  002060  502E               	movf	___flmul@aexp,w,c
  5799  002062  C033  F029         	movff	___flmul@bexp,??___flmul
  5800  002066  6A2A               	clrf	(??___flmul+1)& (0+255),c
  5801  002068  2629               	addwf	??___flmul,f,c
  5802  00206A  0E00               	movlw	0
  5803  00206C  222A               	addwfc	??___flmul+1,f,c
  5804  00206E  0E82               	movlw	130
  5805  002070  2429               	addwf	??___flmul,w,c
  5806  002072  6E38               	movwf	___flmul@temp,c
  5807  002074  0EFF               	movlw	255
  5808  002076  202A               	addwfc	??___flmul+1,w,c
  5809  002078  6E39               	movwf	___flmul@temp+1,c
  5810  00207A  D00F               	goto	l5597
  5811  00207C                     l5591:
  5812  00207C  90D8               	bcf	status,0,c
  5813  00207E  3634               	rlcf	___flmul@prod,f,c
  5814  002080  3635               	rlcf	___flmul@prod+1,f,c
  5815  002082  3636               	rlcf	___flmul@prod+2,f,c
  5816  002084  3637               	rlcf	___flmul@prod+3,f,c
  5817  002086  BE32               	btfsc	___flmul@grs+3,7,c
  5818  002088  8034               	bsf	___flmul@prod,0,c
  5819  00208A  90D8               	bcf	status,0,c
  5820  00208C  362F               	rlcf	___flmul@grs,f,c
  5821  00208E  3630               	rlcf	___flmul@grs+1,f,c
  5822  002090  3631               	rlcf	___flmul@grs+2,f,c
  5823  002092  3632               	rlcf	___flmul@grs+3,f,c
  5824  002094  0638               	decf	___flmul@temp,f,c
  5825  002096  A0D8               	btfss	status,0,c
  5826  002098  0639               	decf	___flmul@temp+1,f,c
  5827  00209A                     l5597:
  5828  00209A  AE36               	btfss	___flmul@prod+2,7,c
  5829  00209C  D7EF               	goto	l5591
  5830  00209E  0E00               	movlw	0
  5831  0020A0  6E2E               	movwf	___flmul@aexp,c
  5832  0020A2  AE32               	btfss	___flmul@grs+3,7,c
  5833  0020A4  D017               	goto	l1134
  5834  0020A6  0EFF               	movlw	255
  5835  0020A8  142F               	andwf	___flmul@grs,w,c
  5836  0020AA  6E29               	movwf	??___flmul& (0+255),c
  5837  0020AC  0EFF               	movlw	255
  5838  0020AE  1430               	andwf	___flmul@grs+1,w,c
  5839  0020B0  6E2A               	movwf	(??___flmul+1)& (0+255),c
  5840  0020B2  0EFF               	movlw	255
  5841  0020B4  1431               	andwf	___flmul@grs+2,w,c
  5842  0020B6  6E2B               	movwf	(??___flmul+2)& (0+255),c
  5843  0020B8  0E7F               	movlw	127
  5844  0020BA  1432               	andwf	___flmul@grs+3,w,c
  5845  0020BC  6E2C               	movwf	(??___flmul+3)& (0+255),c
  5846  0020BE  5029               	movf	??___flmul,w,c
  5847  0020C0  102A               	iorwf	??___flmul+1,w,c
  5848  0020C2  102B               	iorwf	??___flmul+2,w,c
  5849  0020C4  102C               	iorwf	??___flmul+3,w,c
  5850  0020C6  B4D8               	btfsc	status,2,c
  5851  0020C8  D003               	goto	l1135
  5852  0020CA                     u6930:
  5853  0020CA  0E01               	movlw	1
  5854  0020CC  6E2E               	movwf	___flmul@aexp,c
  5855  0020CE  D002               	goto	l1134
  5856  0020D0                     l1135:
  5857  0020D0  B034               	btfsc	___flmul@prod,0,c
  5858  0020D2  D7FB               	goto	u6930
  5859  0020D4                     l1134:
  5860  0020D4  502E               	movf	___flmul@aexp,w,c
  5861  0020D6  B4D8               	btfsc	status,2,c
  5862  0020D8  D01F               	goto	l5617
  5863  0020DA  0E01               	movlw	1
  5864  0020DC  2634               	addwf	___flmul@prod,f,c
  5865  0020DE  0E00               	movlw	0
  5866  0020E0  2235               	addwfc	___flmul@prod+1,f,c
  5867  0020E2  2236               	addwfc	___flmul@prod+2,f,c
  5868  0020E4  2237               	addwfc	___flmul@prod+3,f,c
  5869  0020E6  A037               	btfss	___flmul@prod+3,0,c
  5870  0020E8  D017               	goto	l5617
  5871  0020EA  C034  F029         	movff	___flmul@prod,??___flmul
  5872  0020EE  C035  F02A         	movff	___flmul@prod+1,??___flmul+1
  5873  0020F2  C036  F02B         	movff	___flmul@prod+2,??___flmul+2
  5874  0020F6  C037  F02C         	movff	___flmul@prod+3,??___flmul+3
  5875  0020FA  342C               	rlcf	??___flmul+3,w,c
  5876  0020FC  322C               	rrcf	??___flmul+3,f,c
  5877  0020FE  322B               	rrcf	??___flmul+2,f,c
  5878  002100  322A               	rrcf	??___flmul+1,f,c
  5879  002102  3229               	rrcf	??___flmul,f,c
  5880  002104  C029  F034         	movff	??___flmul,___flmul@prod
  5881  002108  C02A  F035         	movff	??___flmul+1,___flmul@prod+1
  5882  00210C  C02B  F036         	movff	??___flmul+2,___flmul@prod+2
  5883  002110  C02C  F037         	movff	??___flmul+3,___flmul@prod+3
  5884  002114  4A38               	infsnz	___flmul@temp,f,c
  5885  002116  2A39               	incf	___flmul@temp+1,f,c
  5886  002118                     l5617:
  5887  002118  BE39               	btfsc	___flmul@temp+1,7,c
  5888  00211A  D00D               	goto	l5621
  5889  00211C  5039               	movf	___flmul@temp+1,w,c
  5890  00211E  E103               	bnz	u6970
  5891  002120  2838               	incf	___flmul@temp,w,c
  5892  002122  A0D8               	btfss	status,0,c
  5893  002124  D008               	goto	l5621
  5894  002126                     u6970:
  5895  002126  0E00               	movlw	0
  5896  002128  6E34               	movwf	___flmul@prod,c
  5897  00212A  0E00               	movlw	0
  5898  00212C  6E35               	movwf	___flmul@prod+1,c
  5899  00212E  0E80               	movlw	128
  5900  002130  6E36               	movwf	___flmul@prod+2,c
  5901  002132  0E7F               	movlw	127
  5902  002134  D020               	goto	L10
  5903  002136                     l5621:
  5904  002136  BE39               	btfsc	___flmul@temp+1,7,c
  5905  002138  D005               	goto	u6980
  5906  00213A  5039               	movf	___flmul@temp+1,w,c
  5907  00213C  E10E               	bnz	l1142
  5908  00213E  0438               	decf	___flmul@temp,w,c
  5909  002140  B0D8               	btfsc	status,0,c
  5910  002142  D00B               	goto	l1142
  5911  002144                     u6980:
  5912  002144  0E00               	movlw	0
  5913  002146  6E34               	movwf	___flmul@prod,c
  5914  002148  0E00               	movlw	0
  5915  00214A  6E35               	movwf	___flmul@prod+1,c
  5916  00214C  0E00               	movlw	0
  5917  00214E  6E36               	movwf	___flmul@prod+2,c
  5918  002150  0E00               	movlw	0
  5919  002152  6E37               	movwf	___flmul@prod+3,c
  5920  002154  0E00               	movlw	0
  5921  002156  6E2D               	movwf	___flmul@sign,c
  5922  002158  D00F               	goto	l5633
  5923  00215A                     l1142:
  5924  00215A  C038  F033         	movff	___flmul@temp,___flmul@bexp
  5925  00215E  0EFF               	movlw	255
  5926  002160  1634               	andwf	___flmul@prod,f,c
  5927  002162  0EFF               	movlw	255
  5928  002164  1635               	andwf	___flmul@prod+1,f,c
  5929  002166  0E7F               	movlw	127
  5930  002168  1636               	andwf	___flmul@prod+2,f,c
  5931  00216A  0E00               	movlw	0
  5932  00216C  1637               	andwf	___flmul@prod+3,f,c
  5933  00216E  B033               	btfsc	___flmul@bexp,0,c
  5934  002170  8E36               	bsf	___flmul@prod+2,7,c
  5935  002172  90D8               	bcf	status,0,c
  5936  002174  3033               	rrcf	___flmul@bexp,w,c
  5937  002176                     L10:
  5938  002176  6E37               	movwf	___flmul@prod+3,c
  5939  002178                     l5633:
  5940  002178  502D               	movf	___flmul@sign,w,c
  5941  00217A  1237               	iorwf	___flmul@prod+3,f,c
  5942  00217C  C034  F021         	movff	___flmul@prod,?___flmul
  5943  002180  C035  F022         	movff	___flmul@prod+1,?___flmul+1
  5944  002184  C036  F023         	movff	___flmul@prod+2,?___flmul+2
  5945  002188  C037  F024         	movff	___flmul@prod+3,?___flmul+3
  5946  00218C  0012               	return		;funcret
  5947  00218E                     __end_of___flmul:
  5948                           	opt callstack 0
  5949                           
  5950 ;; *************** function ___flge *****************
  5951 ;; Defined at:
  5952 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  ff1             4    0[BANK0 ] unsigned char 
  5955 ;;  ff2             4    4[BANK0 ] unsigned char 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;		None               void
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5967 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;Total ram usage:       12 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:    4
  5974 ;; This function calls:
  5975 ;;		Nothing
  5976 ;; This function is called by:
  5977 ;;		_efgtoa
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text21
  5982  003064                     __ptext21:
  5983                           	opt callstack 0
  5984  003064                     ___flge:
  5985                           	opt callstack 21
  5986                           
  5987                           ;incstack = 0
  5988  003064  0E00               	movlw	0
  5989  003066  0100               	movlb	0	; () banked
  5990  003068  1560               	andwf	___flge@ff1& (0+255),w,b
  5991  00306A  6F68               	movwf	??___flge& (0+255),b
  5992  00306C  0E00               	movlw	0
  5993  00306E  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  5994  003070  6F69               	movwf	(??___flge+1)& (0+255),b
  5995  003072  0E80               	movlw	128
  5996  003074  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  5997  003076  6F6A               	movwf	(??___flge+2)& (0+255),b
  5998  003078  0E7F               	movlw	127
  5999  00307A  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  6000  00307C  6F6B               	movwf	(??___flge+3)& (0+255),b
  6001  00307E  5168               	movf	??___flge& (0+255),w,b
  6002  003080  1169               	iorwf	(??___flge+1)& (0+255),w,b
  6003  003082  116A               	iorwf	(??___flge+2)& (0+255),w,b
  6004  003084  116B               	iorwf	(??___flge+3)& (0+255),w,b
  6005  003086  A4D8               	btfss	status,2,c
  6006  003088  D008               	goto	l5745
  6007                           
  6008                           ; BSR set to: 0
  6009  00308A  0E00               	movlw	0
  6010  00308C  6F60               	movwf	___flge@ff1& (0+255),b
  6011  00308E  0E00               	movlw	0
  6012  003090  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  6013  003092  0E00               	movlw	0
  6014  003094  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  6015  003096  0E00               	movlw	0
  6016  003098  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  6017  00309A                     l5745:
  6018                           
  6019                           ; BSR set to: 0
  6020  00309A  0E00               	movlw	0
  6021  00309C  1564               	andwf	___flge@ff2& (0+255),w,b
  6022  00309E  6F68               	movwf	??___flge& (0+255),b
  6023  0030A0  0E00               	movlw	0
  6024  0030A2  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  6025  0030A4  6F69               	movwf	(??___flge+1)& (0+255),b
  6026  0030A6  0E80               	movlw	128
  6027  0030A8  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  6028  0030AA  6F6A               	movwf	(??___flge+2)& (0+255),b
  6029  0030AC  0E7F               	movlw	127
  6030  0030AE  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  6031  0030B0  6F6B               	movwf	(??___flge+3)& (0+255),b
  6032  0030B2  5168               	movf	??___flge& (0+255),w,b
  6033  0030B4  1169               	iorwf	(??___flge+1)& (0+255),w,b
  6034  0030B6  116A               	iorwf	(??___flge+2)& (0+255),w,b
  6035  0030B8  116B               	iorwf	(??___flge+3)& (0+255),w,b
  6036  0030BA  A4D8               	btfss	status,2,c
  6037  0030BC  D008               	goto	l5749
  6038                           
  6039                           ; BSR set to: 0
  6040  0030BE  0E00               	movlw	0
  6041  0030C0  6F64               	movwf	___flge@ff2& (0+255),b
  6042  0030C2  0E00               	movlw	0
  6043  0030C4  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  6044  0030C6  0E00               	movlw	0
  6045  0030C8  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  6046  0030CA  0E00               	movlw	0
  6047  0030CC  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  6048  0030CE                     l5749:
  6049                           
  6050                           ; BSR set to: 0
  6051  0030CE  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  6052  0030D0  D009               	goto	l5753
  6053                           
  6054                           ; BSR set to: 0
  6055  0030D2  6D60               	negf	___flge@ff1& (0+255),b
  6056  0030D4  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  6057  0030D6  B0D8               	btfsc	status,0,c
  6058  0030D8  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  6059  0030DA  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  6060  0030DC  B0D8               	btfsc	status,0,c
  6061  0030DE  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  6062  0030E0  0E80               	movlw	128
  6063  0030E2  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6064  0030E4                     l5753:
  6065                           
  6066                           ; BSR set to: 0
  6067  0030E4  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  6068  0030E6  D009               	goto	l776
  6069                           
  6070                           ; BSR set to: 0
  6071  0030E8  6D64               	negf	___flge@ff2& (0+255),b
  6072  0030EA  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  6073  0030EC  B0D8               	btfsc	status,0,c
  6074  0030EE  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  6075  0030F0  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  6076  0030F2  B0D8               	btfsc	status,0,c
  6077  0030F4  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  6078  0030F6  0E80               	movlw	128
  6079  0030F8  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6080  0030FA                     l776:
  6081                           
  6082                           ; BSR set to: 0
  6083  0030FA  0E00               	movlw	0
  6084  0030FC  1B60               	xorwf	___flge@ff1& (0+255),f,b
  6085  0030FE  0E00               	movlw	0
  6086  003100  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6087  003102  0E00               	movlw	0
  6088  003104  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6089  003106  0E80               	movlw	128
  6090  003108  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6091  00310A  0E00               	movlw	0
  6092  00310C  1B64               	xorwf	___flge@ff2& (0+255),f,b
  6093  00310E  0E00               	movlw	0
  6094  003110  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6095  003112  0E00               	movlw	0
  6096  003114  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6097  003116  0E80               	movlw	128
  6098  003118  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6099  00311A  5164               	movf	___flge@ff2& (0+255),w,b
  6100  00311C  5D60               	subwf	___flge@ff1& (0+255),w,b
  6101  00311E  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  6102  003120  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6103  003122  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  6104  003124  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6105  003126  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  6106  003128  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6107  00312A  B0D8               	btfsc	status,0,c
  6108  00312C  D002               	goto	l5759
  6109                           
  6110                           ; BSR set to: 0
  6111  00312E  90D8               	bcf	status,0,c
  6112  003130  0012               	return	
  6113  003132                     l5759:
  6114                           
  6115                           ; BSR set to: 0
  6116  003132  80D8               	bsf	status,0,c
  6117                           
  6118                           ; BSR set to: 0
  6119  003134  0012               	return		;funcret
  6120  003136                     __end_of___flge:
  6121                           	opt callstack 0
  6122                           
  6123 ;; *************** function ___fleq *****************
  6124 ;; Defined at:
  6125 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  ff1             4   18[COMRAM] unsigned char 
  6128 ;;  ff2             4   22[COMRAM] unsigned char 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;		None               void
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6140 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;Total ram usage:       12 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    4
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_efgtoa
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text22
  6155  0035DA                     __ptext22:
  6156                           	opt callstack 0
  6157  0035DA                     ___fleq:
  6158                           	opt callstack 21
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;incstack = 0
  6162  0035DA  0E00               	movlw	0
  6163  0035DC  1413               	andwf	___fleq@ff1,w,c
  6164  0035DE  6E1B               	movwf	??___fleq& (0+255),c
  6165  0035E0  0E00               	movlw	0
  6166  0035E2  1414               	andwf	___fleq@ff1+1,w,c
  6167  0035E4  6E1C               	movwf	(??___fleq+1)& (0+255),c
  6168  0035E6  0E80               	movlw	128
  6169  0035E8  1415               	andwf	___fleq@ff1+2,w,c
  6170  0035EA  6E1D               	movwf	(??___fleq+2)& (0+255),c
  6171  0035EC  0E7F               	movlw	127
  6172  0035EE  1416               	andwf	___fleq@ff1+3,w,c
  6173  0035F0  6E1E               	movwf	(??___fleq+3)& (0+255),c
  6174  0035F2  501B               	movf	??___fleq,w,c
  6175  0035F4  101C               	iorwf	??___fleq+1,w,c
  6176  0035F6  101D               	iorwf	??___fleq+2,w,c
  6177  0035F8  101E               	iorwf	??___fleq+3,w,c
  6178  0035FA  A4D8               	btfss	status,2,c
  6179  0035FC  D008               	goto	l5729
  6180  0035FE  0E00               	movlw	0
  6181  003600  6E13               	movwf	___fleq@ff1,c
  6182  003602  0E00               	movlw	0
  6183  003604  6E14               	movwf	___fleq@ff1+1,c
  6184  003606  0E00               	movlw	0
  6185  003608  6E15               	movwf	___fleq@ff1+2,c
  6186  00360A  0E00               	movlw	0
  6187  00360C  6E16               	movwf	___fleq@ff1+3,c
  6188  00360E                     l5729:
  6189  00360E  0E00               	movlw	0
  6190  003610  1417               	andwf	___fleq@ff2,w,c
  6191  003612  6E1B               	movwf	??___fleq& (0+255),c
  6192  003614  0E00               	movlw	0
  6193  003616  1418               	andwf	___fleq@ff2+1,w,c
  6194  003618  6E1C               	movwf	(??___fleq+1)& (0+255),c
  6195  00361A  0E80               	movlw	128
  6196  00361C  1419               	andwf	___fleq@ff2+2,w,c
  6197  00361E  6E1D               	movwf	(??___fleq+2)& (0+255),c
  6198  003620  0E7F               	movlw	127
  6199  003622  141A               	andwf	___fleq@ff2+3,w,c
  6200  003624  6E1E               	movwf	(??___fleq+3)& (0+255),c
  6201  003626  501B               	movf	??___fleq,w,c
  6202  003628  101C               	iorwf	??___fleq+1,w,c
  6203  00362A  101D               	iorwf	??___fleq+2,w,c
  6204  00362C  101E               	iorwf	??___fleq+3,w,c
  6205  00362E  A4D8               	btfss	status,2,c
  6206  003630  D008               	goto	l5733
  6207  003632  0E00               	movlw	0
  6208  003634  6E17               	movwf	___fleq@ff2,c
  6209  003636  0E00               	movlw	0
  6210  003638  6E18               	movwf	___fleq@ff2+1,c
  6211  00363A  0E00               	movlw	0
  6212  00363C  6E19               	movwf	___fleq@ff2+2,c
  6213  00363E  0E00               	movlw	0
  6214  003640  6E1A               	movwf	___fleq@ff2+3,c
  6215  003642                     l5733:
  6216  003642  5017               	movf	___fleq@ff2,w,c
  6217  003644  1813               	xorwf	___fleq@ff1,w,c
  6218  003646  E10A               	bnz	u7140
  6219  003648  5018               	movf	___fleq@ff2+1,w,c
  6220  00364A  1814               	xorwf	___fleq@ff1+1,w,c
  6221  00364C  E107               	bnz	u7140
  6222  00364E  5019               	movf	___fleq@ff2+2,w,c
  6223  003650  1815               	xorwf	___fleq@ff1+2,w,c
  6224  003652  E104               	bnz	u7140
  6225  003654  501A               	movf	___fleq@ff2+3,w,c
  6226  003656  1816               	xorwf	___fleq@ff1+3,w,c
  6227  003658  B4D8               	btfsc	status,2,c
  6228  00365A  D002               	goto	l5737
  6229  00365C                     u7140:
  6230  00365C  90D8               	bcf	status,0,c
  6231  00365E  0012               	return	
  6232  003660                     l5737:
  6233  003660  80D8               	bsf	status,0,c
  6234  003662  0012               	return		;funcret
  6235  003664                     __end_of___fleq:
  6236                           	opt callstack 0
  6237                           
  6238 ;; *************** function ___fldiv *****************
  6239 ;; Defined at:
  6240 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  b               4   18[COMRAM] unsigned char 
  6243 ;;  a               4   22[COMRAM] unsigned char 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  grs             4   37[COMRAM] unsigned long 
  6246 ;;  rem             4   30[COMRAM] unsigned long 
  6247 ;;  new_exp         2   35[COMRAM] short 
  6248 ;;  aexp            1   42[COMRAM] unsigned char 
  6249 ;;  bexp            1   41[COMRAM] unsigned char 
  6250 ;;  sign            1   34[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  4   18[COMRAM] unsigned char 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6260 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;Total ram usage:       25 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    4
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_efgtoa
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text23
  6275  00249A                     __ptext23:
  6276                           	opt callstack 0
  6277  00249A                     ___fldiv:
  6278                           	opt callstack 21
  6279                           
  6280                           ;incstack = 0
  6281  00249A  5016               	movf	___fldiv@b+3,w,c
  6282  00249C  0B80               	andlw	128
  6283  00249E  6E23               	movwf	___fldiv@sign,c
  6284  0024A0  5016               	movf	___fldiv@b+3,w,c
  6285  0024A2  2416               	addwf	___fldiv@b+3,w,c
  6286  0024A4  6E2A               	movwf	___fldiv@bexp,c
  6287  0024A6  BE15               	btfsc	___fldiv@b+2,7,c
  6288  0024A8  802A               	bsf	___fldiv@bexp,0,c
  6289  0024AA  502A               	movf	___fldiv@bexp,w,c
  6290  0024AC  B4D8               	btfsc	status,2,c
  6291  0024AE  D00D               	goto	l5387
  6292  0024B0  282A               	incf	___fldiv@bexp,w,c
  6293  0024B2  A4D8               	btfss	status,2,c
  6294  0024B4  D008               	goto	l5383
  6295  0024B6  0E00               	movlw	0
  6296  0024B8  6E13               	movwf	___fldiv@b,c
  6297  0024BA  0E00               	movlw	0
  6298  0024BC  6E14               	movwf	___fldiv@b+1,c
  6299  0024BE  0E00               	movlw	0
  6300  0024C0  6E15               	movwf	___fldiv@b+2,c
  6301  0024C2  0E00               	movlw	0
  6302  0024C4  6E16               	movwf	___fldiv@b+3,c
  6303  0024C6                     l5383:
  6304  0024C6  8E15               	bsf	___fldiv@b+2,7,c
  6305  0024C8  D006               	goto	L11
  6306  0024CA                     l5387:
  6307  0024CA  0E00               	movlw	0
  6308  0024CC  6E13               	movwf	___fldiv@b,c
  6309  0024CE  0E00               	movlw	0
  6310  0024D0  6E14               	movwf	___fldiv@b+1,c
  6311  0024D2  0E00               	movlw	0
  6312  0024D4  6E15               	movwf	___fldiv@b+2,c
  6313  0024D6                     L11:
  6314  0024D6  0E00               	movlw	0
  6315  0024D8  6E16               	movwf	___fldiv@b+3,c
  6316  0024DA  501A               	movf	___fldiv@a+3,w,c
  6317  0024DC  0B80               	andlw	128
  6318  0024DE  1A23               	xorwf	___fldiv@sign,f,c
  6319  0024E0  501A               	movf	___fldiv@a+3,w,c
  6320  0024E2  241A               	addwf	___fldiv@a+3,w,c
  6321  0024E4  6E2B               	movwf	___fldiv@aexp,c
  6322  0024E6  BE19               	btfsc	___fldiv@a+2,7,c
  6323  0024E8  802B               	bsf	___fldiv@aexp,0,c
  6324  0024EA  502B               	movf	___fldiv@aexp,w,c
  6325  0024EC  B4D8               	btfsc	status,2,c
  6326  0024EE  D00D               	goto	l5407
  6327  0024F0  282B               	incf	___fldiv@aexp,w,c
  6328  0024F2  A4D8               	btfss	status,2,c
  6329  0024F4  D008               	goto	l5403
  6330  0024F6  0E00               	movlw	0
  6331  0024F8  6E17               	movwf	___fldiv@a,c
  6332  0024FA  0E00               	movlw	0
  6333  0024FC  6E18               	movwf	___fldiv@a+1,c
  6334  0024FE  0E00               	movlw	0
  6335  002500  6E19               	movwf	___fldiv@a+2,c
  6336  002502  0E00               	movlw	0
  6337  002504  6E1A               	movwf	___fldiv@a+3,c
  6338  002506                     l5403:
  6339  002506  8E19               	bsf	___fldiv@a+2,7,c
  6340  002508  D006               	goto	L12
  6341  00250A                     l5407:
  6342  00250A  0E00               	movlw	0
  6343  00250C  6E17               	movwf	___fldiv@a,c
  6344  00250E  0E00               	movlw	0
  6345  002510  6E18               	movwf	___fldiv@a+1,c
  6346  002512  0E00               	movlw	0
  6347  002514  6E19               	movwf	___fldiv@a+2,c
  6348  002516                     L12:
  6349  002516  0E00               	movlw	0
  6350  002518  6E1A               	movwf	___fldiv@a+3,c
  6351  00251A  5017               	movf	___fldiv@a,w,c
  6352  00251C  1018               	iorwf	___fldiv@a+1,w,c
  6353  00251E  1019               	iorwf	___fldiv@a+2,w,c
  6354  002520  101A               	iorwf	___fldiv@a+3,w,c
  6355  002522  A4D8               	btfss	status,2,c
  6356  002524  D017               	goto	l5421
  6357  002526  0E00               	movlw	0
  6358  002528  6E13               	movwf	___fldiv@b,c
  6359  00252A  0E00               	movlw	0
  6360  00252C  6E14               	movwf	___fldiv@b+1,c
  6361  00252E  0E00               	movlw	0
  6362  002530  6E15               	movwf	___fldiv@b+2,c
  6363  002532  0E00               	movlw	0
  6364  002534  6E16               	movwf	___fldiv@b+3,c
  6365  002536  0E80               	movlw	128
  6366  002538  1215               	iorwf	___fldiv@b+2,f,c
  6367  00253A  0E7F               	movlw	127
  6368  00253C  1216               	iorwf	___fldiv@b+3,f,c
  6369  00253E                     l5415:
  6370  00253E  5023               	movf	___fldiv@sign,w,c
  6371  002540  1216               	iorwf	___fldiv@b+3,f,c
  6372  002542  C013  F013         	movff	___fldiv@b,?___fldiv
  6373  002546  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
  6374  00254A  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
  6375  00254E  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
  6376  002552  0012               	return	
  6377  002554                     l5421:
  6378  002554  502A               	movf	___fldiv@bexp,w,c
  6379  002556  A4D8               	btfss	status,2,c
  6380  002558  D009               	goto	l5429
  6381  00255A  0E00               	movlw	0
  6382  00255C  6E13               	movwf	?___fldiv,c
  6383  00255E  0E00               	movlw	0
  6384  002560  6E14               	movwf	?___fldiv+1,c
  6385  002562  0E00               	movlw	0
  6386  002564  6E15               	movwf	?___fldiv+2,c
  6387  002566  0E00               	movlw	0
  6388  002568  6E16               	movwf	?___fldiv+3,c
  6389  00256A  0012               	return	
  6390  00256C                     l5429:
  6391  00256C  502B               	movf	___fldiv@aexp,w,c
  6392  00256E  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
  6393  002572  6A1C               	clrf	(??___fldiv+1)& (0+255),c
  6394  002574  5E1B               	subwf	??___fldiv,f,c
  6395  002576  0E00               	movlw	0
  6396  002578  5A1C               	subwfb	??___fldiv+1,f,c
  6397  00257A  0E7F               	movlw	127
  6398  00257C  241B               	addwf	??___fldiv,w,c
  6399  00257E  6E24               	movwf	___fldiv@new_exp,c
  6400  002580  0E00               	movlw	0
  6401  002582  201C               	addwfc	??___fldiv+1,w,c
  6402  002584  6E25               	movwf	___fldiv@new_exp+1,c
  6403  002586  C013  F01F         	movff	___fldiv@b,___fldiv@rem
  6404  00258A  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
  6405  00258E  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
  6406  002592  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
  6407  002596  0E00               	movlw	0
  6408  002598  6E13               	movwf	___fldiv@b,c
  6409  00259A  0E00               	movlw	0
  6410  00259C  6E14               	movwf	___fldiv@b+1,c
  6411  00259E  0E00               	movlw	0
  6412  0025A0  6E15               	movwf	___fldiv@b+2,c
  6413  0025A2  0E00               	movlw	0
  6414  0025A4  6E16               	movwf	___fldiv@b+3,c
  6415  0025A6  0E00               	movlw	0
  6416  0025A8  6E26               	movwf	___fldiv@grs,c
  6417  0025AA  0E00               	movlw	0
  6418  0025AC  6E27               	movwf	___fldiv@grs+1,c
  6419  0025AE  0E00               	movlw	0
  6420  0025B0  6E28               	movwf	___fldiv@grs+2,c
  6421  0025B2  0E00               	movlw	0
  6422  0025B4  6E29               	movwf	___fldiv@grs+3,c
  6423  0025B6  0E00               	movlw	0
  6424  0025B8  6E2B               	movwf	___fldiv@aexp,c
  6425  0025BA  D028               	goto	l1095
  6426  0025BC                     l5439:
  6427  0025BC  502B               	movf	___fldiv@aexp,w,c
  6428  0025BE  B4D8               	btfsc	status,2,c
  6429  0025C0  D011               	goto	l5447
  6430  0025C2  90D8               	bcf	status,0,c
  6431  0025C4  361F               	rlcf	___fldiv@rem,f,c
  6432  0025C6  3620               	rlcf	___fldiv@rem+1,f,c
  6433  0025C8  3621               	rlcf	___fldiv@rem+2,f,c
  6434  0025CA  3622               	rlcf	___fldiv@rem+3,f,c
  6435  0025CC  90D8               	bcf	status,0,c
  6436  0025CE  3613               	rlcf	___fldiv@b,f,c
  6437  0025D0  3614               	rlcf	___fldiv@b+1,f,c
  6438  0025D2  3615               	rlcf	___fldiv@b+2,f,c
  6439  0025D4  3616               	rlcf	___fldiv@b+3,f,c
  6440  0025D6  BE29               	btfsc	___fldiv@grs+3,7,c
  6441  0025D8  8013               	bsf	___fldiv@b,0,c
  6442  0025DA  90D8               	bcf	status,0,c
  6443  0025DC  3626               	rlcf	___fldiv@grs,f,c
  6444  0025DE  3627               	rlcf	___fldiv@grs+1,f,c
  6445  0025E0  3628               	rlcf	___fldiv@grs+2,f,c
  6446  0025E2  3629               	rlcf	___fldiv@grs+3,f,c
  6447  0025E4                     l5447:
  6448  0025E4  5017               	movf	___fldiv@a,w,c
  6449  0025E6  5C1F               	subwf	___fldiv@rem,w,c
  6450  0025E8  5018               	movf	___fldiv@a+1,w,c
  6451  0025EA  5820               	subwfb	___fldiv@rem+1,w,c
  6452  0025EC  5019               	movf	___fldiv@a+2,w,c
  6453  0025EE  5821               	subwfb	___fldiv@rem+2,w,c
  6454  0025F0  501A               	movf	___fldiv@a+3,w,c
  6455  0025F2  5822               	subwfb	___fldiv@rem+3,w,c
  6456  0025F4  A0D8               	btfss	status,0,c
  6457  0025F6  D009               	goto	l5453
  6458  0025F8  8C29               	bsf	___fldiv@grs+3,6,c
  6459  0025FA  5017               	movf	___fldiv@a,w,c
  6460  0025FC  5E1F               	subwf	___fldiv@rem,f,c
  6461  0025FE  5018               	movf	___fldiv@a+1,w,c
  6462  002600  5A20               	subwfb	___fldiv@rem+1,f,c
  6463  002602  5019               	movf	___fldiv@a+2,w,c
  6464  002604  5A21               	subwfb	___fldiv@rem+2,f,c
  6465  002606  501A               	movf	___fldiv@a+3,w,c
  6466  002608  5A22               	subwfb	___fldiv@rem+3,f,c
  6467  00260A                     l5453:
  6468  00260A  2A2B               	incf	___fldiv@aexp,f,c
  6469  00260C                     l1095:
  6470  00260C  0E19               	movlw	25
  6471  00260E  642B               	cpfsgt	___fldiv@aexp,c
  6472  002610  D7D5               	goto	l5439
  6473  002612  501F               	movf	___fldiv@rem,w,c
  6474  002614  1020               	iorwf	___fldiv@rem+1,w,c
  6475  002616  1021               	iorwf	___fldiv@rem+2,w,c
  6476  002618  1022               	iorwf	___fldiv@rem+3,w,c
  6477  00261A  B4D8               	btfsc	status,2,c
  6478  00261C  D011               	goto	l5465
  6479  00261E  8026               	bsf	___fldiv@grs,0,c
  6480  002620  D00F               	goto	l5465
  6481  002622                     l5459:
  6482  002622  90D8               	bcf	status,0,c
  6483  002624  3613               	rlcf	___fldiv@b,f,c
  6484  002626  3614               	rlcf	___fldiv@b+1,f,c
  6485  002628  3615               	rlcf	___fldiv@b+2,f,c
  6486  00262A  3616               	rlcf	___fldiv@b+3,f,c
  6487  00262C  BE29               	btfsc	___fldiv@grs+3,7,c
  6488  00262E  8013               	bsf	___fldiv@b,0,c
  6489  002630  90D8               	bcf	status,0,c
  6490  002632  3626               	rlcf	___fldiv@grs,f,c
  6491  002634  3627               	rlcf	___fldiv@grs+1,f,c
  6492  002636  3628               	rlcf	___fldiv@grs+2,f,c
  6493  002638  3629               	rlcf	___fldiv@grs+3,f,c
  6494  00263A  0624               	decf	___fldiv@new_exp,f,c
  6495  00263C  A0D8               	btfss	status,0,c
  6496  00263E  0625               	decf	___fldiv@new_exp+1,f,c
  6497  002640                     l5465:
  6498  002640  AE15               	btfss	___fldiv@b+2,7,c
  6499  002642  D7EF               	goto	l5459
  6500  002644  0E00               	movlw	0
  6501  002646  6E2B               	movwf	___fldiv@aexp,c
  6502  002648  AE29               	btfss	___fldiv@grs+3,7,c
  6503  00264A  D017               	goto	l1106
  6504  00264C  0EFF               	movlw	255
  6505  00264E  1426               	andwf	___fldiv@grs,w,c
  6506  002650  6E1B               	movwf	??___fldiv& (0+255),c
  6507  002652  0EFF               	movlw	255
  6508  002654  1427               	andwf	___fldiv@grs+1,w,c
  6509  002656  6E1C               	movwf	(??___fldiv+1)& (0+255),c
  6510  002658  0EFF               	movlw	255
  6511  00265A  1428               	andwf	___fldiv@grs+2,w,c
  6512  00265C  6E1D               	movwf	(??___fldiv+2)& (0+255),c
  6513  00265E  0E7F               	movlw	127
  6514  002660  1429               	andwf	___fldiv@grs+3,w,c
  6515  002662  6E1E               	movwf	(??___fldiv+3)& (0+255),c
  6516  002664  501B               	movf	??___fldiv,w,c
  6517  002666  101C               	iorwf	??___fldiv+1,w,c
  6518  002668  101D               	iorwf	??___fldiv+2,w,c
  6519  00266A  101E               	iorwf	??___fldiv+3,w,c
  6520  00266C  B4D8               	btfsc	status,2,c
  6521  00266E  D003               	goto	l1107
  6522  002670                     u6740:
  6523  002670  0E01               	movlw	1
  6524  002672  6E2B               	movwf	___fldiv@aexp,c
  6525  002674  D002               	goto	l1106
  6526  002676                     l1107:
  6527  002676  B013               	btfsc	___fldiv@b,0,c
  6528  002678  D7FB               	goto	u6740
  6529  00267A                     l1106:
  6530  00267A  502B               	movf	___fldiv@aexp,w,c
  6531  00267C  B4D8               	btfsc	status,2,c
  6532  00267E  D01F               	goto	l5485
  6533  002680  0E01               	movlw	1
  6534  002682  2613               	addwf	___fldiv@b,f,c
  6535  002684  0E00               	movlw	0
  6536  002686  2214               	addwfc	___fldiv@b+1,f,c
  6537  002688  2215               	addwfc	___fldiv@b+2,f,c
  6538  00268A  2216               	addwfc	___fldiv@b+3,f,c
  6539  00268C  A016               	btfss	___fldiv@b+3,0,c
  6540  00268E  D017               	goto	l5485
  6541  002690  C013  F01B         	movff	___fldiv@b,??___fldiv
  6542  002694  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
  6543  002698  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
  6544  00269C  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
  6545  0026A0  341E               	rlcf	??___fldiv+3,w,c
  6546  0026A2  321E               	rrcf	??___fldiv+3,f,c
  6547  0026A4  321D               	rrcf	??___fldiv+2,f,c
  6548  0026A6  321C               	rrcf	??___fldiv+1,f,c
  6549  0026A8  321B               	rrcf	??___fldiv,f,c
  6550  0026AA  C01B  F013         	movff	??___fldiv,___fldiv@b
  6551  0026AE  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
  6552  0026B2  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
  6553  0026B6  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
  6554  0026BA  4A24               	infsnz	___fldiv@new_exp,f,c
  6555  0026BC  2A25               	incf	___fldiv@new_exp+1,f,c
  6556  0026BE                     l5485:
  6557  0026BE  BE25               	btfsc	___fldiv@new_exp+1,7,c
  6558  0026C0  D010               	goto	l5489
  6559  0026C2  5025               	movf	___fldiv@new_exp+1,w,c
  6560  0026C4  E103               	bnz	u6780
  6561  0026C6  2824               	incf	___fldiv@new_exp,w,c
  6562  0026C8  A0D8               	btfss	status,0,c
  6563  0026CA  D00B               	goto	l5489
  6564  0026CC                     u6780:
  6565  0026CC  0E00               	movlw	0
  6566  0026CE  6E25               	movwf	___fldiv@new_exp+1,c
  6567  0026D0  6824               	setf	___fldiv@new_exp,c
  6568  0026D2  0E00               	movlw	0
  6569  0026D4  6E13               	movwf	___fldiv@b,c
  6570  0026D6  0E00               	movlw	0
  6571  0026D8  6E14               	movwf	___fldiv@b+1,c
  6572  0026DA  0E00               	movlw	0
  6573  0026DC  6E15               	movwf	___fldiv@b+2,c
  6574  0026DE  0E00               	movlw	0
  6575  0026E0  6E16               	movwf	___fldiv@b+3,c
  6576  0026E2                     l5489:
  6577  0026E2  BE25               	btfsc	___fldiv@new_exp+1,7,c
  6578  0026E4  D005               	goto	u6790
  6579  0026E6  5025               	movf	___fldiv@new_exp+1,w,c
  6580  0026E8  E111               	bnz	l5493
  6581  0026EA  0424               	decf	___fldiv@new_exp,w,c
  6582  0026EC  B0D8               	btfsc	status,0,c
  6583  0026EE  D00E               	goto	l5493
  6584  0026F0                     u6790:
  6585  0026F0  0E00               	movlw	0
  6586  0026F2  6E25               	movwf	___fldiv@new_exp+1,c
  6587  0026F4  0E00               	movlw	0
  6588  0026F6  6E24               	movwf	___fldiv@new_exp,c
  6589  0026F8  0E00               	movlw	0
  6590  0026FA  6E13               	movwf	___fldiv@b,c
  6591  0026FC  0E00               	movlw	0
  6592  0026FE  6E14               	movwf	___fldiv@b+1,c
  6593  002700  0E00               	movlw	0
  6594  002702  6E15               	movwf	___fldiv@b+2,c
  6595  002704  0E00               	movlw	0
  6596  002706  6E16               	movwf	___fldiv@b+3,c
  6597  002708  0E00               	movlw	0
  6598  00270A  6E23               	movwf	___fldiv@sign,c
  6599  00270C                     l5493:
  6600  00270C  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
  6601  002710  A02A               	btfss	___fldiv@bexp,0,c
  6602  002712  D002               	goto	l5499
  6603  002714  8E15               	bsf	___fldiv@b+2,7,c
  6604  002716  D001               	goto	l5501
  6605  002718                     l5499:
  6606  002718  9E15               	bcf	___fldiv@b+2,7,c
  6607  00271A                     l5501:
  6608  00271A  90D8               	bcf	status,0,c
  6609  00271C  302A               	rrcf	___fldiv@bexp,w,c
  6610  00271E  6E16               	movwf	___fldiv@b+3,c
  6611  002720  D70E               	goto	l5415
  6612  002722                     __end_of___fldiv:
  6613                           	opt callstack 0
  6614                           
  6615 ;; *************** function ___awmod *****************
  6616 ;; Defined at:
  6617 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  dividend        2   18[COMRAM] int 
  6620 ;;  divisor         2   20[COMRAM] int 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  sign            1   23[COMRAM] unsigned char 
  6623 ;;  counter         1   22[COMRAM] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2   18[COMRAM] int 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;Total ram usage:        6 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    4
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_efgtoa
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text24
  6648  0039C0                     __ptext24:
  6649                           	opt callstack 0
  6650  0039C0                     ___awmod:
  6651                           	opt callstack 21
  6652                           
  6653                           ;incstack = 0
  6654  0039C0  0E00               	movlw	0
  6655  0039C2  6E18               	movwf	___awmod@sign,c
  6656  0039C4  AE14               	btfss	___awmod@dividend+1,7,c
  6657  0039C6  D006               	goto	l5697
  6658  0039C8  6C13               	negf	___awmod@dividend,c
  6659  0039CA  1E14               	comf	___awmod@dividend+1,f,c
  6660  0039CC  B0D8               	btfsc	status,0,c
  6661  0039CE  2A14               	incf	___awmod@dividend+1,f,c
  6662  0039D0  0E01               	movlw	1
  6663  0039D2  6E18               	movwf	___awmod@sign,c
  6664  0039D4                     l5697:
  6665  0039D4  AE16               	btfss	___awmod@divisor+1,7,c
  6666  0039D6  D004               	goto	l5701
  6667  0039D8  6C15               	negf	___awmod@divisor,c
  6668  0039DA  1E16               	comf	___awmod@divisor+1,f,c
  6669  0039DC  B0D8               	btfsc	status,0,c
  6670  0039DE  2A16               	incf	___awmod@divisor+1,f,c
  6671  0039E0                     l5701:
  6672  0039E0  5015               	movf	___awmod@divisor,w,c
  6673  0039E2  1016               	iorwf	___awmod@divisor+1,w,c
  6674  0039E4  B4D8               	btfsc	status,2,c
  6675  0039E6  D018               	goto	l5717
  6676  0039E8  0E01               	movlw	1
  6677  0039EA  6E17               	movwf	___awmod@counter,c
  6678  0039EC  D004               	goto	l5707
  6679  0039EE                     l5705:
  6680  0039EE  90D8               	bcf	status,0,c
  6681  0039F0  3615               	rlcf	___awmod@divisor,f,c
  6682  0039F2  3616               	rlcf	___awmod@divisor+1,f,c
  6683  0039F4  2A17               	incf	___awmod@counter,f,c
  6684  0039F6                     l5707:
  6685  0039F6  AE16               	btfss	___awmod@divisor+1,7,c
  6686  0039F8  D7FA               	goto	l5705
  6687  0039FA                     u7090:
  6688  0039FA  5015               	movf	___awmod@divisor,w,c
  6689  0039FC  5C13               	subwf	___awmod@dividend,w,c
  6690  0039FE  5016               	movf	___awmod@divisor+1,w,c
  6691  003A00  5814               	subwfb	___awmod@dividend+1,w,c
  6692  003A02  A0D8               	btfss	status,0,c
  6693  003A04  D004               	goto	l5713
  6694  003A06  5015               	movf	___awmod@divisor,w,c
  6695  003A08  5E13               	subwf	___awmod@dividend,f,c
  6696  003A0A  5016               	movf	___awmod@divisor+1,w,c
  6697  003A0C  5A14               	subwfb	___awmod@dividend+1,f,c
  6698  003A0E                     l5713:
  6699  003A0E  90D8               	bcf	status,0,c
  6700  003A10  3216               	rrcf	___awmod@divisor+1,f,c
  6701  003A12  3215               	rrcf	___awmod@divisor,f,c
  6702  003A14  2E17               	decfsz	___awmod@counter,f,c
  6703  003A16  D7F1               	goto	u7090
  6704  003A18                     l5717:
  6705  003A18  5018               	movf	___awmod@sign,w,c
  6706  003A1A  B4D8               	btfsc	status,2,c
  6707  003A1C  D004               	goto	l5721
  6708  003A1E  6C13               	negf	___awmod@dividend,c
  6709  003A20  1E14               	comf	___awmod@dividend+1,f,c
  6710  003A22  B0D8               	btfsc	status,0,c
  6711  003A24  2A14               	incf	___awmod@dividend+1,f,c
  6712  003A26                     l5721:
  6713  003A26  C013  F013         	movff	___awmod@dividend,?___awmod
  6714  003A2A  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  6715  003A2E  0012               	return		;funcret
  6716  003A30                     __end_of___awmod:
  6717                           	opt callstack 0
  6718                           
  6719 ;; *************** function ___awdiv *****************
  6720 ;; Defined at:
  6721 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  dividend        2   18[COMRAM] int 
  6724 ;;  divisor         2   20[COMRAM] int 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  quotient        2   24[COMRAM] int 
  6727 ;;  sign            1   23[COMRAM] unsigned char 
  6728 ;;  counter         1   22[COMRAM] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2   18[COMRAM] int 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6738 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6739 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;Total ram usage:        8 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    4
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_efgtoa
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text25
  6753  0036E8                     __ptext25:
  6754                           	opt callstack 0
  6755  0036E8                     ___awdiv:
  6756                           	opt callstack 21
  6757                           
  6758                           ;incstack = 0
  6759  0036E8  0E00               	movlw	0
  6760  0036EA  6E18               	movwf	___awdiv@sign,c
  6761  0036EC  AE16               	btfss	___awdiv@divisor+1,7,c
  6762  0036EE  D006               	goto	l5653
  6763  0036F0  6C15               	negf	___awdiv@divisor,c
  6764  0036F2  1E16               	comf	___awdiv@divisor+1,f,c
  6765  0036F4  B0D8               	btfsc	status,0,c
  6766  0036F6  2A16               	incf	___awdiv@divisor+1,f,c
  6767  0036F8  0E01               	movlw	1
  6768  0036FA  6E18               	movwf	___awdiv@sign,c
  6769  0036FC                     l5653:
  6770  0036FC  AE14               	btfss	___awdiv@dividend+1,7,c
  6771  0036FE  D006               	goto	l5659
  6772  003700  6C13               	negf	___awdiv@dividend,c
  6773  003702  1E14               	comf	___awdiv@dividend+1,f,c
  6774  003704  B0D8               	btfsc	status,0,c
  6775  003706  2A14               	incf	___awdiv@dividend+1,f,c
  6776  003708  0E01               	movlw	1
  6777  00370A  1A18               	xorwf	___awdiv@sign,f,c
  6778  00370C                     l5659:
  6779  00370C  0E00               	movlw	0
  6780  00370E  6E1A               	movwf	___awdiv@quotient+1,c
  6781  003710  0E00               	movlw	0
  6782  003712  6E19               	movwf	___awdiv@quotient,c
  6783  003714  5015               	movf	___awdiv@divisor,w,c
  6784  003716  1016               	iorwf	___awdiv@divisor+1,w,c
  6785  003718  B4D8               	btfsc	status,2,c
  6786  00371A  D01C               	goto	l5681
  6787  00371C  0E01               	movlw	1
  6788  00371E  6E17               	movwf	___awdiv@counter,c
  6789  003720  D004               	goto	l5667
  6790  003722                     l5665:
  6791  003722  90D8               	bcf	status,0,c
  6792  003724  3615               	rlcf	___awdiv@divisor,f,c
  6793  003726  3616               	rlcf	___awdiv@divisor+1,f,c
  6794  003728  2A17               	incf	___awdiv@counter,f,c
  6795  00372A                     l5667:
  6796  00372A  AE16               	btfss	___awdiv@divisor+1,7,c
  6797  00372C  D7FA               	goto	l5665
  6798  00372E                     u7030:
  6799  00372E  90D8               	bcf	status,0,c
  6800  003730  3619               	rlcf	___awdiv@quotient,f,c
  6801  003732  361A               	rlcf	___awdiv@quotient+1,f,c
  6802  003734  5015               	movf	___awdiv@divisor,w,c
  6803  003736  5C13               	subwf	___awdiv@dividend,w,c
  6804  003738  5016               	movf	___awdiv@divisor+1,w,c
  6805  00373A  5814               	subwfb	___awdiv@dividend+1,w,c
  6806  00373C  A0D8               	btfss	status,0,c
  6807  00373E  D005               	goto	l5677
  6808  003740  5015               	movf	___awdiv@divisor,w,c
  6809  003742  5E13               	subwf	___awdiv@dividend,f,c
  6810  003744  5016               	movf	___awdiv@divisor+1,w,c
  6811  003746  5A14               	subwfb	___awdiv@dividend+1,f,c
  6812  003748  8019               	bsf	___awdiv@quotient,0,c
  6813  00374A                     l5677:
  6814  00374A  90D8               	bcf	status,0,c
  6815  00374C  3216               	rrcf	___awdiv@divisor+1,f,c
  6816  00374E  3215               	rrcf	___awdiv@divisor,f,c
  6817  003750  2E17               	decfsz	___awdiv@counter,f,c
  6818  003752  D7ED               	goto	u7030
  6819  003754                     l5681:
  6820  003754  5018               	movf	___awdiv@sign,w,c
  6821  003756  B4D8               	btfsc	status,2,c
  6822  003758  D004               	goto	l5685
  6823  00375A  6C19               	negf	___awdiv@quotient,c
  6824  00375C  1E1A               	comf	___awdiv@quotient+1,f,c
  6825  00375E  B0D8               	btfsc	status,0,c
  6826  003760  2A1A               	incf	___awdiv@quotient+1,f,c
  6827  003762                     l5685:
  6828  003762  C019  F013         	movff	___awdiv@quotient,?___awdiv
  6829  003766  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  6830  00376A  0012               	return		;funcret
  6831  00376C                     __end_of___awdiv:
  6832                           	opt callstack 0
  6833                           
  6834 ;; *************** function _atoi *****************
  6835 ;; Defined at:
  6836 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6839 ;;		 -> STR_2(11), STR_1(11), 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  n               2   38[COMRAM] int 
  6842 ;;  neg             2   31[COMRAM] int 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  2   25[COMRAM] int 
  6845 ;; Registers used:
  6846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;Total ram usage:       15 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    5
  6859 ;; This function calls:
  6860 ;;		___wmul
  6861 ;;		_isdigit
  6862 ;;		_isspace
  6863 ;; This function is called by:
  6864 ;;		_vfpfcnvrt
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text26
  6869  002A6A                     __ptext26:
  6870                           	opt callstack 0
  6871  002A6A                     _atoi:
  6872                           	opt callstack 21
  6873                           
  6874                           ;incstack = 0
  6875  002A6A  0E00               	movlw	0
  6876  002A6C  6E28               	movwf	atoi@n+1,c
  6877  002A6E  0E00               	movlw	0
  6878  002A70  6E27               	movwf	atoi@n,c
  6879  002A72  0E00               	movlw	0
  6880  002A74  6E21               	movwf	atoi@neg+1,c
  6881  002A76  0E00               	movlw	0
  6882  002A78  6E20               	movwf	atoi@neg,c
  6883  002A7A  D002               	goto	l6149
  6884  002A7C                     l6147:
  6885  002A7C  4A1A               	infsnz	atoi@s,f,c
  6886  002A7E  2A1B               	incf	atoi@s+1,f,c
  6887  002A80                     l6149:
  6888  002A80  0E01               	movlw	1
  6889  002A82  6E26               	movwf	_atoi$1977,c
  6890  002A84  C01A  FFF6         	movff	atoi@s,tblptrl
  6891  002A88  C01B  FFF7         	movff	atoi@s+1,tblptrh
  6892  002A8C                     	if	0	;tblptru may be non-zero
  6893  002A8C                     	endif
  6894  002A8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6895  002A8C  0E00               	movlw	low (__mediumconst shr (0+16))
  6896  002A8E  6EF8               	movwf	tblptru,c
  6897  002A90                     	endif
  6898  002A90  0008               	tblrd		*
  6899  002A92  50F5               	movf	tablat,w,c
  6900  002A94  0A20               	xorlw	32
  6901  002A96  B4D8               	btfsc	status,2,c
  6902  002A98  D01A               	goto	l6157
  6903  002A9A  0EF7               	movlw	247
  6904  002A9C  6E1C               	movwf	??_atoi& (0+255),c
  6905  002A9E  0EFF               	movlw	255
  6906  002AA0  6E1D               	movwf	(??_atoi+1)& (0+255),c
  6907  002AA2  C01A  FFF6         	movff	atoi@s,tblptrl
  6908  002AA6  C01B  FFF7         	movff	atoi@s+1,tblptrh
  6909  002AAA                     	if	0	;tblptru may be non-zero
  6910  002AAA                     	endif
  6911  002AAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6912  002AAA  0E00               	movlw	low (__mediumconst shr (0+16))
  6913  002AAC  6EF8               	movwf	tblptru,c
  6914  002AAE                     	endif
  6915  002AAE  0008               	tblrd		*
  6916  002AB0  50F5               	movf	tablat,w,c
  6917  002AB2  6E1E               	movwf	(??_atoi+2)& (0+255),c
  6918  002AB4  6A1F               	clrf	(??_atoi+3)& (0+255),c
  6919  002AB6  501C               	movf	??_atoi,w,c
  6920  002AB8  261E               	addwf	??_atoi+2,f,c
  6921  002ABA  501D               	movf	??_atoi+1,w,c
  6922  002ABC  221F               	addwfc	??_atoi+3,f,c
  6923  002ABE  501F               	movf	??_atoi+3,w,c
  6924  002AC0  E104               	bnz	u7880
  6925  002AC2  0E05               	movlw	5
  6926  002AC4  5C1E               	subwf	??_atoi+2,w,c
  6927  002AC6  A0D8               	btfss	status,0,c
  6928  002AC8  D002               	goto	l6157
  6929  002ACA                     u7880:
  6930  002ACA  0E00               	movlw	0
  6931  002ACC  6E26               	movwf	_atoi$1977,c
  6932  002ACE                     l6157:
  6933  002ACE  C026  F022         	movff	_atoi$1977,_atoi$1976
  6934  002AD2  6A23               	clrf	_atoi$1976+1,c
  6935  002AD4  5022               	movf	_atoi$1976,w,c
  6936  002AD6  1023               	iorwf	_atoi$1976+1,w,c
  6937  002AD8  B4D8               	btfsc	status,2,c
  6938  002ADA  D008               	goto	l6167
  6939  002ADC  D7CF               	goto	l6147
  6940  002ADE                     l6163:
  6941  002ADE  0E00               	movlw	0
  6942  002AE0  6E21               	movwf	atoi@neg+1,c
  6943  002AE2  0E01               	movlw	1
  6944  002AE4  6E20               	movwf	atoi@neg,c
  6945  002AE6                     l6165:
  6946  002AE6  4A1A               	infsnz	atoi@s,f,c
  6947  002AE8  2A1B               	incf	atoi@s+1,f,c
  6948  002AEA  D032               	goto	l6173
  6949  002AEC                     l6167:
  6950  002AEC  C01A  FFF6         	movff	atoi@s,tblptrl
  6951  002AF0  C01B  FFF7         	movff	atoi@s+1,tblptrh
  6952  002AF4                     	if	0	;tblptru may be non-zero
  6953  002AF4                     	endif
  6954  002AF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6955  002AF4  0E00               	movlw	low (__mediumconst shr (0+16))
  6956  002AF6  6EF8               	movwf	tblptru,c
  6957  002AF8                     	endif
  6958  002AF8  0008               	tblrd		*
  6959  002AFA  50F5               	movf	tablat,w,c
  6960  002AFC  6E1C               	movwf	??_atoi& (0+255),c
  6961  002AFE  6A1D               	clrf	(??_atoi+1)& (0+255),c
  6962                           
  6963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6964                           ; Switch size 1, requested type "simple"
  6965                           ; Number of cases is 1, Range of values is 0 to 0
  6966                           ; switch strategies available:
  6967                           ; Name         Instructions Cycles
  6968                           ; simple_byte            4     3 (average)
  6969                           ;	Chosen strategy is simple_byte
  6970  002B00  501D               	movf	??_atoi+1,w,c
  6971  002B02  0A00               	xorlw	0	; case 0
  6972  002B04  A4D8               	btfss	status,2,c
  6973  002B06  D024               	goto	l6173
  6974                           
  6975                           ; Switch size 1, requested type "simple"
  6976                           ; Number of cases is 2, Range of values is 43 to 45
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte            7     4 (average)
  6980                           ;	Chosen strategy is simple_byte
  6981  002B08  501C               	movf	??_atoi,w,c
  6982  002B0A  0A2B               	xorlw	43	; case 43
  6983  002B0C  B4D8               	btfsc	status,2,c
  6984  002B0E  D7EB               	goto	l6165
  6985  002B10  0A06               	xorlw	6	; case 45
  6986  002B12  B4D8               	btfsc	status,2,c
  6987  002B14  D7E4               	goto	l6163
  6988  002B16  D01C               	goto	l6173
  6989  002B18                     l6169:
  6990  002B18  C027  F013         	movff	atoi@n,___wmul@multiplier
  6991  002B1C  C028  F014         	movff	atoi@n+1,___wmul@multiplier+1
  6992  002B20  0E00               	movlw	0
  6993  002B22  6E16               	movwf	___wmul@multiplicand+1,c
  6994  002B24  0E0A               	movlw	10
  6995  002B26  6E15               	movwf	___wmul@multiplicand,c
  6996  002B28  EC12  F01F         	call	___wmul	;wreg free
  6997  002B2C  C01A  FFF6         	movff	atoi@s,tblptrl
  6998  002B30  C01B  FFF7         	movff	atoi@s+1,tblptrh
  6999  002B34                     	if	0	;tblptru may be non-zero
  7000  002B34                     	endif
  7001  002B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7002  002B34  0E00               	movlw	low (__mediumconst shr (0+16))
  7003  002B36  6EF8               	movwf	tblptru,c
  7004  002B38                     	endif
  7005  002B38  0008               	tblrd		*
  7006  002B3A  50F5               	movf	tablat,w,c
  7007  002B3C  5E13               	subwf	?___wmul,f,c
  7008  002B3E  0E00               	movlw	0
  7009  002B40  5A14               	subwfb	?___wmul+1,f,c
  7010  002B42  0E30               	movlw	48
  7011  002B44  2413               	addwf	?___wmul,w,c
  7012  002B46  6E27               	movwf	atoi@n,c
  7013  002B48  0E00               	movlw	0
  7014  002B4A  2014               	addwfc	?___wmul+1,w,c
  7015  002B4C  6E28               	movwf	atoi@n+1,c
  7016  002B4E  D7CB               	goto	l6165
  7017  002B50                     l6173:
  7018  002B50  0ED0               	movlw	208
  7019  002B52  6E1C               	movwf	??_atoi& (0+255),c
  7020  002B54  0EFF               	movlw	255
  7021  002B56  6E1D               	movwf	(??_atoi+1)& (0+255),c
  7022  002B58  C01A  FFF6         	movff	atoi@s,tblptrl
  7023  002B5C  C01B  FFF7         	movff	atoi@s+1,tblptrh
  7024  002B60                     	if	0	;tblptru may be non-zero
  7025  002B60                     	endif
  7026  002B60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7027  002B60  0E00               	movlw	low (__mediumconst shr (0+16))
  7028  002B62  6EF8               	movwf	tblptru,c
  7029  002B64                     	endif
  7030  002B64  0008               	tblrd		*
  7031  002B66  50F5               	movf	tablat,w,c
  7032  002B68  6E1E               	movwf	(??_atoi+2)& (0+255),c
  7033  002B6A  6A1F               	clrf	(??_atoi+3)& (0+255),c
  7034  002B6C  501C               	movf	??_atoi,w,c
  7035  002B6E  261E               	addwf	??_atoi+2,f,c
  7036  002B70  501D               	movf	??_atoi+1,w,c
  7037  002B72  221F               	addwfc	??_atoi+3,f,c
  7038  002B74  501F               	movf	??_atoi+3,w,c
  7039  002B76  E106               	bnz	u7900
  7040  002B78  0E0A               	movlw	10
  7041  002B7A  5C1E               	subwf	??_atoi+2,w,c
  7042  002B7C  B0D8               	btfsc	status,0,c
  7043  002B7E  D002               	goto	u7900
  7044  002B80  0E01               	movlw	1
  7045  002B82  D001               	goto	u7910
  7046  002B84                     u7900:
  7047  002B84  0E00               	movlw	0
  7048  002B86                     u7910:
  7049  002B86  6E24               	movwf	_atoi$1978,c
  7050  002B88  6A25               	clrf	_atoi$1978+1,c
  7051  002B8A  5024               	movf	_atoi$1978,w,c
  7052  002B8C  1025               	iorwf	_atoi$1978+1,w,c
  7053  002B8E  A4D8               	btfss	status,2,c
  7054  002B90  D7C3               	goto	l6169
  7055  002B92  5020               	movf	atoi@neg,w,c
  7056  002B94  1021               	iorwf	atoi@neg+1,w,c
  7057  002B96  A4D8               	btfss	status,2,c
  7058  002B98  D00D               	goto	l1221
  7059  002B9A  C027  F01C         	movff	atoi@n,??_atoi
  7060  002B9E  C028  F01D         	movff	atoi@n+1,??_atoi+1
  7061  002BA2  1E1C               	comf	??_atoi,f,c
  7062  002BA4  1E1D               	comf	??_atoi+1,f,c
  7063  002BA6  4A1C               	infsnz	??_atoi,f,c
  7064  002BA8  2A1D               	incf	??_atoi+1,f,c
  7065  002BAA  C01C  F01A         	movff	??_atoi,?_atoi
  7066  002BAE  C01D  F01B         	movff	??_atoi+1,?_atoi+1
  7067  002BB2  0012               	return	
  7068  002BB4                     l1221:
  7069  002BB4  C027  F01A         	movff	atoi@n,?_atoi
  7070  002BB8  C028  F01B         	movff	atoi@n+1,?_atoi+1
  7071  002BBC  0012               	return		;funcret
  7072  002BBE                     __end_of_atoi:
  7073                           	opt callstack 0
  7074                           
  7075 ;; *************** function _isspace *****************
  7076 ;; Defined at:
  7077 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  c               2   18[COMRAM] int 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;		None
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  2   18[COMRAM] int 
  7084 ;; Registers used:
  7085 ;;		wreg, status,2, status,0
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;Total ram usage:        7 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    4
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_atoi
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text27
  7106  003C8A                     __ptext27:
  7107                           	opt callstack 0
  7108  003C8A                     _isspace:
  7109                           	opt callstack 21
  7110                           
  7111                           ;incstack = 0
  7112  003C8A  0E01               	movlw	1
  7113  003C8C  6E19               	movwf	_isspace$2007,c
  7114  003C8E  0E20               	movlw	32
  7115  003C90  1813               	xorwf	isspace@c,w,c
  7116  003C92  1014               	iorwf	isspace@c+1,w,c
  7117  003C94  B4D8               	btfsc	status,2,c
  7118  003C96  D014               	goto	l5823
  7119  003C98  0EF7               	movlw	247
  7120  003C9A  6E15               	movwf	??_isspace& (0+255),c
  7121  003C9C  0EFF               	movlw	255
  7122  003C9E  6E16               	movwf	(??_isspace+1)& (0+255),c
  7123  003CA0  C013  F017         	movff	isspace@c,??_isspace+2
  7124  003CA4  C014  F018         	movff	isspace@c+1,??_isspace+3
  7125  003CA8  5015               	movf	??_isspace,w,c
  7126  003CAA  2617               	addwf	??_isspace+2,f,c
  7127  003CAC  5016               	movf	??_isspace+1,w,c
  7128  003CAE  2218               	addwfc	??_isspace+3,f,c
  7129  003CB0  5018               	movf	??_isspace+3,w,c
  7130  003CB2  E104               	bnz	u7290
  7131  003CB4  0E05               	movlw	5
  7132  003CB6  5C17               	subwf	??_isspace+2,w,c
  7133  003CB8  A0D8               	btfss	status,0,c
  7134  003CBA  D002               	goto	l5823
  7135  003CBC                     u7290:
  7136  003CBC  0E00               	movlw	0
  7137  003CBE  6E19               	movwf	_isspace$2007,c
  7138  003CC0                     l5823:
  7139  003CC0  C019  F013         	movff	_isspace$2007,?_isspace
  7140  003CC4  6A14               	clrf	?_isspace+1,c
  7141  003CC6  0012               	return		;funcret
  7142  003CC8                     __end_of_isspace:
  7143                           	opt callstack 0
  7144                           
  7145 ;; *************** function _isdigit *****************
  7146 ;; Defined at:
  7147 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  c               2   18[COMRAM] int 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  2   18[COMRAM] int 
  7154 ;; Registers used:
  7155 ;;		wreg, status,2, status,0
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;Total ram usage:        6 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    4
  7168 ;; This function calls:
  7169 ;;		Nothing
  7170 ;; This function is called by:
  7171 ;;		_vfpfcnvrt
  7172 ;;		_atoi
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text28
  7177  003D9C                     __ptext28:
  7178                           	opt callstack 0
  7179  003D9C                     _isdigit:
  7180                           	opt callstack 22
  7181                           
  7182                           ;incstack = 0
  7183  003D9C  0ED0               	movlw	208
  7184  003D9E  6E15               	movwf	??_isdigit& (0+255),c
  7185  003DA0  0EFF               	movlw	255
  7186  003DA2  6E16               	movwf	(??_isdigit+1)& (0+255),c
  7187  003DA4  C013  F017         	movff	isdigit@c,??_isdigit+2
  7188  003DA8  C014  F018         	movff	isdigit@c+1,??_isdigit+3
  7189  003DAC  5015               	movf	??_isdigit,w,c
  7190  003DAE  2617               	addwf	??_isdigit+2,f,c
  7191  003DB0  5016               	movf	??_isdigit+1,w,c
  7192  003DB2  2218               	addwfc	??_isdigit+3,f,c
  7193  003DB4  5018               	movf	??_isdigit+3,w,c
  7194  003DB6  E106               	bnz	u6560
  7195  003DB8  0E0A               	movlw	10
  7196  003DBA  5C17               	subwf	??_isdigit+2,w,c
  7197  003DBC  B0D8               	btfsc	status,0,c
  7198  003DBE  D002               	goto	u6560
  7199  003DC0  0E01               	movlw	1
  7200  003DC2  D001               	goto	u6570
  7201  003DC4                     u6560:
  7202  003DC4  0E00               	movlw	0
  7203  003DC6                     u6570:
  7204  003DC6  6E13               	movwf	?_isdigit,c
  7205  003DC8  6A14               	clrf	?_isdigit+1,c
  7206  003DCA  0012               	return		;funcret
  7207  003DCC                     __end_of_isdigit:
  7208                           	opt callstack 0
  7209                           
  7210 ;; *************** function ___wmul *****************
  7211 ;; Defined at:
  7212 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  multiplier      2   18[COMRAM] unsigned int 
  7215 ;;  multiplicand    2   20[COMRAM] unsigned int 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;  product         2   22[COMRAM] unsigned int 
  7218 ;; Return value:  Size  Location     Type
  7219 ;;                  2   18[COMRAM] unsigned int 
  7220 ;; Registers used:
  7221 ;;		wreg, status,2, status,0, prodl, prodh
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;Total ram usage:        6 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:    4
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_atoi
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           	psect	text29
  7242  003E24                     __ptext29:
  7243                           	opt callstack 0
  7244  003E24                     ___wmul:
  7245                           	opt callstack 21
  7246                           
  7247                           ;incstack = 0
  7248  003E24  5013               	movf	___wmul@multiplier,w,c
  7249  003E26  0215               	mulwf	___wmul@multiplicand,c
  7250  003E28  CFF3 F017          	movff	prodl,___wmul@product
  7251  003E2C  CFF4 F018          	movff	prodh,___wmul@product+1
  7252  003E30  5013               	movf	___wmul@multiplier,w,c
  7253  003E32  0216               	mulwf	___wmul@multiplicand+1,c
  7254  003E34  50F3               	movf	prodl,w,c
  7255  003E36  2618               	addwf	___wmul@product+1,f,c
  7256  003E38  5014               	movf	___wmul@multiplier+1,w,c
  7257  003E3A  0215               	mulwf	___wmul@multiplicand,c
  7258  003E3C  50F3               	movf	prodl,w,c
  7259  003E3E  2618               	addwf	___wmul@product+1,f,c
  7260  003E40  C017  F013         	movff	___wmul@product,?___wmul
  7261  003E44  C018  F014         	movff	___wmul@product+1,?___wmul+1
  7262  003E48  0012               	return		;funcret
  7263  003E4A                     __end_of___wmul:
  7264                           	opt callstack 0
  7265                           
  7266 ;; *************** function ___xxtofl *****************
  7267 ;; Defined at:
  7268 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  sign            1    wreg     unsigned char 
  7271 ;;  val             4   18[COMRAM] long 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  sign            1   26[COMRAM] unsigned char 
  7274 ;;  arg             4   28[COMRAM] unsigned long 
  7275 ;;  exp             1   27[COMRAM] unsigned char 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  4   18[COMRAM] unsigned char 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;Total ram usage:       14 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    4
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_tempC
  7296 ;;		_volts
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text30
  7301  002BBE                     __ptext30:
  7302                           	opt callstack 0
  7303  002BBE                     ___xxtofl:
  7304                           	opt callstack 25
  7305                           
  7306                           ;incstack = 0
  7307                           ;___xxtofl@sign stored from wreg
  7308  002BBE  6E1B               	movwf	___xxtofl@sign,c
  7309  002BC0  501B               	movf	___xxtofl@sign,w,c
  7310  002BC2  A4D8               	btfss	status,2,c
  7311  002BC4  AE16               	btfss	___xxtofl@val+3,7,c
  7312  002BC6  D01A               	goto	l1166
  7313  002BC8  C013  F017         	movff	___xxtofl@val,??___xxtofl
  7314  002BCC  C014  F018         	movff	___xxtofl@val+1,??___xxtofl+1
  7315  002BD0  C015  F019         	movff	___xxtofl@val+2,??___xxtofl+2
  7316  002BD4  C016  F01A         	movff	___xxtofl@val+3,??___xxtofl+3
  7317  002BD8  1E17               	comf	??___xxtofl,f,c
  7318  002BDA  1E18               	comf	??___xxtofl+1,f,c
  7319  002BDC  1E19               	comf	??___xxtofl+2,f,c
  7320  002BDE  1E1A               	comf	??___xxtofl+3,f,c
  7321  002BE0  2A17               	incf	??___xxtofl,f,c
  7322  002BE2  0E00               	movlw	0
  7323  002BE4  2218               	addwfc	??___xxtofl+1,f,c
  7324  002BE6  2219               	addwfc	??___xxtofl+2,f,c
  7325  002BE8  221A               	addwfc	??___xxtofl+3,f,c
  7326  002BEA  C017  F01D         	movff	??___xxtofl,___xxtofl@arg
  7327  002BEE  C018  F01E         	movff	??___xxtofl+1,___xxtofl@arg+1
  7328  002BF2  C019  F01F         	movff	??___xxtofl+2,___xxtofl@arg+2
  7329  002BF6  C01A  F020         	movff	??___xxtofl+3,___xxtofl@arg+3
  7330  002BFA  D008               	goto	l4627
  7331  002BFC                     l1166:
  7332  002BFC  C013  F01D         	movff	___xxtofl@val,___xxtofl@arg
  7333  002C00  C014  F01E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7334  002C04  C015  F01F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7335  002C08  C016  F020         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7336  002C0C                     l4627:
  7337  002C0C  5013               	movf	___xxtofl@val,w,c
  7338  002C0E  1014               	iorwf	___xxtofl@val+1,w,c
  7339  002C10  1015               	iorwf	___xxtofl@val+2,w,c
  7340  002C12  1016               	iorwf	___xxtofl@val+3,w,c
  7341  002C14  A4D8               	btfss	status,2,c
  7342  002C16  D009               	goto	l4633
  7343  002C18  0E00               	movlw	0
  7344  002C1A  6E13               	movwf	?___xxtofl,c
  7345  002C1C  0E00               	movlw	0
  7346  002C1E  6E14               	movwf	?___xxtofl+1,c
  7347  002C20  0E00               	movlw	0
  7348  002C22  6E15               	movwf	?___xxtofl+2,c
  7349  002C24  0E00               	movlw	0
  7350  002C26  6E16               	movwf	?___xxtofl+3,c
  7351  002C28  0012               	return	
  7352  002C2A                     l4633:
  7353  002C2A  0E96               	movlw	150
  7354  002C2C  6E1C               	movwf	___xxtofl@exp,c
  7355  002C2E  D006               	goto	l4637
  7356  002C30                     l4635:
  7357  002C30  2A1C               	incf	___xxtofl@exp,f,c
  7358  002C32  90D8               	bcf	status,0,c
  7359  002C34  3220               	rrcf	___xxtofl@arg+3,f,c
  7360  002C36  321F               	rrcf	___xxtofl@arg+2,f,c
  7361  002C38  321E               	rrcf	___xxtofl@arg+1,f,c
  7362  002C3A  321D               	rrcf	___xxtofl@arg,f,c
  7363  002C3C                     l4637:
  7364  002C3C  0E00               	movlw	0
  7365  002C3E  141D               	andwf	___xxtofl@arg,w,c
  7366  002C40  6E17               	movwf	??___xxtofl& (0+255),c
  7367  002C42  0E00               	movlw	0
  7368  002C44  141E               	andwf	___xxtofl@arg+1,w,c
  7369  002C46  6E18               	movwf	(??___xxtofl+1)& (0+255),c
  7370  002C48  0E00               	movlw	0
  7371  002C4A  141F               	andwf	___xxtofl@arg+2,w,c
  7372  002C4C  6E19               	movwf	(??___xxtofl+2)& (0+255),c
  7373  002C4E  0EFE               	movlw	254
  7374  002C50  1420               	andwf	___xxtofl@arg+3,w,c
  7375  002C52  6E1A               	movwf	(??___xxtofl+3)& (0+255),c
  7376  002C54  5017               	movf	??___xxtofl,w,c
  7377  002C56  1018               	iorwf	??___xxtofl+1,w,c
  7378  002C58  1019               	iorwf	??___xxtofl+2,w,c
  7379  002C5A  101A               	iorwf	??___xxtofl+3,w,c
  7380  002C5C  B4D8               	btfsc	status,2,c
  7381  002C5E  D00D               	goto	l1173
  7382  002C60  D7E7               	goto	l4635
  7383  002C62                     l4639:
  7384  002C62  2A1C               	incf	___xxtofl@exp,f,c
  7385  002C64  0E01               	movlw	1
  7386  002C66  261D               	addwf	___xxtofl@arg,f,c
  7387  002C68  0E00               	movlw	0
  7388  002C6A  221E               	addwfc	___xxtofl@arg+1,f,c
  7389  002C6C  221F               	addwfc	___xxtofl@arg+2,f,c
  7390  002C6E  2220               	addwfc	___xxtofl@arg+3,f,c
  7391  002C70  90D8               	bcf	status,0,c
  7392  002C72  3220               	rrcf	___xxtofl@arg+3,f,c
  7393  002C74  321F               	rrcf	___xxtofl@arg+2,f,c
  7394  002C76  321E               	rrcf	___xxtofl@arg+1,f,c
  7395  002C78  321D               	rrcf	___xxtofl@arg,f,c
  7396  002C7A                     l1173:
  7397  002C7A  0E00               	movlw	0
  7398  002C7C  141D               	andwf	___xxtofl@arg,w,c
  7399  002C7E  6E17               	movwf	??___xxtofl& (0+255),c
  7400  002C80  0E00               	movlw	0
  7401  002C82  141E               	andwf	___xxtofl@arg+1,w,c
  7402  002C84  6E18               	movwf	(??___xxtofl+1)& (0+255),c
  7403  002C86  0E00               	movlw	0
  7404  002C88  141F               	andwf	___xxtofl@arg+2,w,c
  7405  002C8A  6E19               	movwf	(??___xxtofl+2)& (0+255),c
  7406  002C8C  0EFF               	movlw	255
  7407  002C8E  1420               	andwf	___xxtofl@arg+3,w,c
  7408  002C90  6E1A               	movwf	(??___xxtofl+3)& (0+255),c
  7409  002C92  5017               	movf	??___xxtofl,w,c
  7410  002C94  1018               	iorwf	??___xxtofl+1,w,c
  7411  002C96  1019               	iorwf	??___xxtofl+2,w,c
  7412  002C98  101A               	iorwf	??___xxtofl+3,w,c
  7413  002C9A  B4D8               	btfsc	status,2,c
  7414  002C9C  D007               	goto	l4647
  7415  002C9E  D7E1               	goto	l4639
  7416  002CA0                     l4645:
  7417  002CA0  061C               	decf	___xxtofl@exp,f,c
  7418  002CA2  90D8               	bcf	status,0,c
  7419  002CA4  361D               	rlcf	___xxtofl@arg,f,c
  7420  002CA6  361E               	rlcf	___xxtofl@arg+1,f,c
  7421  002CA8  361F               	rlcf	___xxtofl@arg+2,f,c
  7422  002CAA  3620               	rlcf	___xxtofl@arg+3,f,c
  7423  002CAC                     l4647:
  7424  002CAC  BE1F               	btfsc	___xxtofl@arg+2,7,c
  7425  002CAE  D003               	goto	u5450
  7426  002CB0  0E02               	movlw	2
  7427  002CB2  601C               	cpfslt	___xxtofl@exp,c
  7428  002CB4  D7F5               	goto	l4645
  7429  002CB6                     u5450:
  7430  002CB6  A01C               	btfss	___xxtofl@exp,0,c
  7431  002CB8  9E1F               	bcf	___xxtofl@arg+2,7,c
  7432  002CBA  90D8               	bcf	status,0,c
  7433  002CBC  321C               	rrcf	___xxtofl@exp,f,c
  7434  002CBE  C01C  F017         	movff	___xxtofl@exp,??___xxtofl
  7435  002CC2  6A18               	clrf	(??___xxtofl+1)& (0+255),c
  7436  002CC4  6A19               	clrf	(??___xxtofl+2)& (0+255),c
  7437  002CC6  6A1A               	clrf	(??___xxtofl+3)& (0+255),c
  7438  002CC8  C017  F01A         	movff	??___xxtofl,??___xxtofl+3
  7439  002CCC  6A19               	clrf	??___xxtofl+2,c
  7440  002CCE  6A18               	clrf	??___xxtofl+1,c
  7441  002CD0  6A17               	clrf	??___xxtofl,c
  7442  002CD2  5017               	movf	??___xxtofl,w,c
  7443  002CD4  121D               	iorwf	___xxtofl@arg,f,c
  7444  002CD6  5018               	movf	??___xxtofl+1,w,c
  7445  002CD8  121E               	iorwf	___xxtofl@arg+1,f,c
  7446  002CDA  5019               	movf	??___xxtofl+2,w,c
  7447  002CDC  121F               	iorwf	___xxtofl@arg+2,f,c
  7448  002CDE  501A               	movf	??___xxtofl+3,w,c
  7449  002CE0  1220               	iorwf	___xxtofl@arg+3,f,c
  7450  002CE2  501B               	movf	___xxtofl@sign,w,c
  7451  002CE4  A4D8               	btfss	status,2,c
  7452  002CE6  AE16               	btfss	___xxtofl@val+3,7,c
  7453  002CE8  D001               	goto	l4663
  7454  002CEA  8E20               	bsf	___xxtofl@arg+3,7,c
  7455  002CEC                     l4663:
  7456  002CEC  C01D  F013         	movff	___xxtofl@arg,?___xxtofl
  7457  002CF0  C01E  F014         	movff	___xxtofl@arg+1,?___xxtofl+1
  7458  002CF4  C01F  F015         	movff	___xxtofl@arg+2,?___xxtofl+2
  7459  002CF8  C020  F016         	movff	___xxtofl@arg+3,?___xxtofl+3
  7460  002CFC  0012               	return		;funcret
  7461  002CFE                     __end_of___xxtofl:
  7462                           	opt callstack 0
  7463                           
  7464 ;; *************** function _sample *****************
  7465 ;; Defined at:
  7466 ;;		line 438 in file "Trozinski_Herrin_Lab6.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;		None
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, status,2, status,0
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    4
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_main
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494                           	psect	text31
  7495  003CC8                     __ptext31:
  7496                           	opt callstack 0
  7497  003CC8                     _sample:
  7498                           	opt callstack 26
  7499                           
  7500                           ;Trozinski_Herrin_Lab6.c: 441:     for(samplecount = 0; samplecount<3; samplecount++) {
  7501                           
  7502                           ;incstack = 0
  7503  003CC8  0E00               	movlw	0
  7504  003CCA  6E45               	movwf	_samplecount+1,c
  7505  003CCC  0E00               	movlw	0
  7506  003CCE  6E44               	movwf	_samplecount,c
  7507  003CD0                     l4811:
  7508                           
  7509                           ;Trozinski_Herrin_Lab6.c: 443:         _delay((unsigned long)((50)*(16000000/4000000.0))
      +                          );
  7510  003CD0  0E42               	movlw	66
  7511  003CD2                     u8197:
  7512  003CD2  2EE8               	decfsz	wreg,f,c
  7513  003CD4  D7FE               	bra	u8197
  7514  003CD6  D000               	nop2	
  7515                           
  7516                           ;Trozinski_Herrin_Lab6.c: 445:         ADCON0bits.GO = 1;
  7517  003CD8  82C2               	bsf	4034,1,c	;volatile
  7518  003CDA                     l292:
  7519  003CDA  B2C2               	btfsc	4034,1,c	;volatile
  7520  003CDC  D7FE               	goto	l292
  7521                           
  7522                           ;Trozinski_Herrin_Lab6.c: 450:         _delay((unsigned long)((50)*(16000000/4000000.0))
      +                          );
  7523  003CDE  0E42               	movlw	66
  7524  003CE0                     u8207:
  7525  003CE0  2EE8               	decfsz	wreg,f,c
  7526  003CE2  D7FE               	bra	u8207
  7527  003CE4  D000               	nop2	
  7528                           
  7529                           ;Trozinski_Herrin_Lab6.c: 455:         ADresult = ADRES;
  7530  003CE6  CFC3 F0F2          	movff	4035,_ADresult	;volatile
  7531  003CEA  CFC4 F0F3          	movff	4036,_ADresult+1	;volatile
  7532                           
  7533                           ;Trozinski_Herrin_Lab6.c: 456:     }
  7534  003CEE  4A44               	infsnz	_samplecount,f,c
  7535  003CF0  2A45               	incf	_samplecount+1,f,c
  7536  003CF2  5045               	movf	_samplecount+1,w,c
  7537  003CF4  E105               	bnz	u5560
  7538  003CF6  0E03               	movlw	3
  7539  003CF8  5C44               	subwf	_samplecount,w,c
  7540  003CFA  B0D8               	btfsc	status,0,c
  7541  003CFC  0012               	return	
  7542  003CFE  D7E8               	goto	l4811
  7543  003D00                     u5560:
  7544  003D00  0012               	return		;funcret
  7545  003D02                     __end_of_sample:
  7546                           	opt callstack 0
  7547                           
  7548 ;; *************** function _decoder *****************
  7549 ;; Defined at:
  7550 ;;		line 558 in file "Trozinski_Herrin_Lab6.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;		None
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;Total ram usage:        0 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    5
  7571 ;; This function calls:
  7572 ;;		_memset
  7573 ;;		_strncmp
  7574 ;;		_transmit
  7575 ;; This function is called by:
  7576 ;;		_main
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text32
  7581  0028DC                     __ptext32:
  7582                           	opt callstack 0
  7583  0028DC                     _decoder:
  7584                           	opt callstack 25
  7585                           
  7586                           ;Trozinski_Herrin_Lab6.c: 561:     memset(TBuffer, 0, sizeof(TBuffer));
  7587                           
  7588                           ;incstack = 0
  7589  0028DC  0E54               	movlw	low _TBuffer
  7590  0028DE  6E13               	movwf	memset@dest,c
  7591  0028E0  0E01               	movlw	high _TBuffer
  7592  0028E2  6E14               	movwf	memset@dest+1,c
  7593  0028E4  0E00               	movlw	0
  7594  0028E6  6E16               	movwf	memset@c+1,c
  7595  0028E8  0E00               	movlw	0
  7596  0028EA  6E15               	movwf	memset@c,c
  7597  0028EC  0E00               	movlw	0
  7598  0028EE  6E18               	movwf	memset@n+1,c
  7599  0028F0  0E14               	movlw	20
  7600  0028F2  6E17               	movwf	memset@n,c
  7601  0028F4  EC7F  F016         	call	_memset	;wreg free
  7602                           
  7603                           ;Trozinski_Herrin_Lab6.c: 562:     if(strncmp(RBuffer,"TEMP",4)==0){
  7604  0028F8  0E68               	movlw	low _RBuffer
  7605  0028FA  6E13               	movwf	strncmp@_l,c
  7606  0028FC  0E01               	movlw	high _RBuffer
  7607  0028FE  6E14               	movwf	strncmp@_l+1,c
  7608  002900  0E39               	movlw	low STR_3
  7609  002902  6E15               	movwf	strncmp@_r,c
  7610  002904  0E10               	movlw	high STR_3
  7611  002906  6E16               	movwf	strncmp@_r+1,c
  7612  002908  0E00               	movlw	0
  7613  00290A  6E18               	movwf	strncmp@n+1,c
  7614  00290C  0E04               	movlw	4
  7615  00290E  6E17               	movwf	strncmp@n,c
  7616  002910  EC5E  F019         	call	_strncmp	;wreg free
  7617  002914  5013               	movf	?_strncmp,w,c
  7618  002916  1014               	iorwf	?_strncmp+1,w,c
  7619  002918  A4D8               	btfss	status,2,c
  7620  00291A  D015               	goto	l6467
  7621                           
  7622                           ;Trozinski_Herrin_Lab6.c: 564:         TBuffer[0] = temperature[3];
  7623  00291C  C189  F154         	movff	_temperature+3,_TBuffer
  7624                           
  7625                           ;Trozinski_Herrin_Lab6.c: 565:         TBuffer[1] = temperature[4];
  7626  002920  C18A  F155         	movff	_temperature+4,_TBuffer+1
  7627                           
  7628                           ;Trozinski_Herrin_Lab6.c: 566:         TBuffer[2] = temperature[5];
  7629  002924  C18B  F156         	movff	_temperature+5,_TBuffer+2
  7630                           
  7631                           ;Trozinski_Herrin_Lab6.c: 567:         TBuffer[3] = temperature[6];
  7632  002928  C18C  F157         	movff	_temperature+6,_TBuffer+3
  7633                           
  7634                           ;Trozinski_Herrin_Lab6.c: 568:         TBuffer[4] = temperature[7];
  7635  00292C  C18D  F158         	movff	_temperature+7,_TBuffer+4
  7636                           
  7637                           ;Trozinski_Herrin_Lab6.c: 569:         TBuffer[5] = 0x00;
  7638  002930  0E00               	movlw	0
  7639  002932  0101               	movlb	1	; () banked
  7640  002934  6F59               	movwf	(_TBuffer+5)& (0+255),b
  7641                           
  7642                           ;Trozinski_Herrin_Lab6.c: 570:         TBuffer[6] = 0x00;
  7643  002936  0E00               	movlw	0
  7644  002938  6F5A               	movwf	(_TBuffer+6)& (0+255),b
  7645                           
  7646                           ;Trozinski_Herrin_Lab6.c: 571:         TBuffer[7] = 0x00;
  7647  00293A  0E00               	movlw	0
  7648  00293C  6F5B               	movwf	(_TBuffer+7)& (0+255),b
  7649                           
  7650                           ;Trozinski_Herrin_Lab6.c: 572:         TBuffer[8] = 0x00;
  7651  00293E  0E00               	movlw	0
  7652  002940  6F5C               	movwf	(_TBuffer+8)& (0+255),b
  7653                           
  7654                           ;Trozinski_Herrin_Lab6.c: 573:         TBuffer[9] = 0x00;
  7655  002942  0E00               	movlw	0
  7656  002944  6F5D               	movwf	(_TBuffer+9)& (0+255),b
  7657  002946                     l6467:
  7658                           
  7659                           ;Trozinski_Herrin_Lab6.c: 575:     if(strncmp(RBuffer,"POT",3)==0){
  7660  002946  0E68               	movlw	low _RBuffer
  7661  002948  6E13               	movwf	strncmp@_l,c
  7662  00294A  0E01               	movlw	high _RBuffer
  7663  00294C  6E14               	movwf	strncmp@_l+1,c
  7664  00294E  0E4E               	movlw	low STR_4
  7665  002950  6E15               	movwf	strncmp@_r,c
  7666  002952  0E10               	movlw	high STR_4
  7667  002954  6E16               	movwf	strncmp@_r+1,c
  7668  002956  0E00               	movlw	0
  7669  002958  6E18               	movwf	strncmp@n+1,c
  7670  00295A  0E03               	movlw	3
  7671  00295C  6E17               	movwf	strncmp@n,c
  7672  00295E  EC5E  F019         	call	_strncmp	;wreg free
  7673  002962  5013               	movf	?_strncmp,w,c
  7674  002964  1014               	iorwf	?_strncmp+1,w,c
  7675  002966  A4D8               	btfss	status,2,c
  7676  002968  D015               	goto	l324
  7677                           
  7678                           ;Trozinski_Herrin_Lab6.c: 577:         TBuffer[0] = voltage[4];
  7679  00296A  C180  F154         	movff	_voltage+4,_TBuffer
  7680                           
  7681                           ;Trozinski_Herrin_Lab6.c: 578:         TBuffer[1] = voltage[5];
  7682  00296E  C181  F155         	movff	_voltage+5,_TBuffer+1
  7683                           
  7684                           ;Trozinski_Herrin_Lab6.c: 579:         TBuffer[2] = voltage[6];
  7685  002972  C182  F156         	movff	_voltage+6,_TBuffer+2
  7686                           
  7687                           ;Trozinski_Herrin_Lab6.c: 580:         TBuffer[3] = voltage[7];
  7688  002976  C183  F157         	movff	_voltage+7,_TBuffer+3
  7689                           
  7690                           ;Trozinski_Herrin_Lab6.c: 581:         TBuffer[4] = voltage[8];
  7691  00297A  C184  F158         	movff	_voltage+8,_TBuffer+4
  7692                           
  7693                           ;Trozinski_Herrin_Lab6.c: 582:         TBuffer[5] = 0x00;
  7694  00297E  0E00               	movlw	0
  7695  002980  0101               	movlb	1	; () banked
  7696  002982  6F59               	movwf	(_TBuffer+5)& (0+255),b
  7697                           
  7698                           ;Trozinski_Herrin_Lab6.c: 583:         TBuffer[6] = 0x00;
  7699  002984  0E00               	movlw	0
  7700  002986  6F5A               	movwf	(_TBuffer+6)& (0+255),b
  7701                           
  7702                           ;Trozinski_Herrin_Lab6.c: 584:         TBuffer[7] = 0x00;
  7703  002988  0E00               	movlw	0
  7704  00298A  6F5B               	movwf	(_TBuffer+7)& (0+255),b
  7705                           
  7706                           ;Trozinski_Herrin_Lab6.c: 585:         TBuffer[8] = 0x00;
  7707  00298C  0E00               	movlw	0
  7708  00298E  6F5C               	movwf	(_TBuffer+8)& (0+255),b
  7709                           
  7710                           ;Trozinski_Herrin_Lab6.c: 586:         TBuffer[9] = 0x00;
  7711  002990  0E00               	movlw	0
  7712  002992  6F5D               	movwf	(_TBuffer+9)& (0+255),b
  7713  002994                     l324:
  7714                           
  7715                           ;Trozinski_Herrin_Lab6.c: 590:     tcount = 0;
  7716  002994  0E00               	movlw	0
  7717  002996  6E3F               	movwf	_tcount+1,c
  7718  002998  0E00               	movlw	0
  7719  00299A  6E3E               	movwf	_tcount,c
  7720                           
  7721                           ;Trozinski_Herrin_Lab6.c: 591:     if(strncmp(RBuffer,"CONT_ON",7)==0){
  7722  00299C  0E68               	movlw	low _RBuffer
  7723  00299E  6E13               	movwf	strncmp@_l,c
  7724  0029A0  0E01               	movlw	high _RBuffer
  7725  0029A2  6E14               	movwf	strncmp@_l+1,c
  7726  0029A4  0E31               	movlw	low STR_5
  7727  0029A6  6E15               	movwf	strncmp@_r,c
  7728  0029A8  0E10               	movlw	high STR_5
  7729  0029AA  6E16               	movwf	strncmp@_r+1,c
  7730  0029AC  0E00               	movlw	0
  7731  0029AE  6E18               	movwf	strncmp@n+1,c
  7732  0029B0  0E07               	movlw	7
  7733  0029B2  6E17               	movwf	strncmp@n,c
  7734  0029B4  EC5E  F019         	call	_strncmp	;wreg free
  7735  0029B8  5013               	movf	?_strncmp,w,c
  7736  0029BA  1014               	iorwf	?_strncmp+1,w,c
  7737  0029BC  A4D8               	btfss	status,2,c
  7738  0029BE  D005               	goto	l6477
  7739                           
  7740                           ;Trozinski_Herrin_Lab6.c: 592:         continuousMode = 1;
  7741  0029C0  0E00               	movlw	0
  7742  0029C2  0100               	movlb	0	; () banked
  7743  0029C4  6FE3               	movwf	(_continuousMode+1)& (0+255),b
  7744  0029C6  0E01               	movlw	1
  7745  0029C8  6FE2               	movwf	_continuousMode& (0+255),b
  7746  0029CA                     l6477:
  7747                           
  7748                           ;Trozinski_Herrin_Lab6.c: 594:     if(strncmp(RBuffer,"CONT_OFF",8)==0){
  7749  0029CA  0E68               	movlw	low _RBuffer
  7750  0029CC  6E13               	movwf	strncmp@_l,c
  7751  0029CE  0E01               	movlw	high _RBuffer
  7752  0029D0  6E14               	movwf	strncmp@_l+1,c
  7753  0029D2  0E28               	movlw	low STR_6
  7754  0029D4  6E15               	movwf	strncmp@_r,c
  7755  0029D6  0E10               	movlw	high STR_6
  7756  0029D8  6E16               	movwf	strncmp@_r+1,c
  7757  0029DA  0E00               	movlw	0
  7758  0029DC  6E18               	movwf	strncmp@n+1,c
  7759  0029DE  0E08               	movlw	8
  7760  0029E0  6E17               	movwf	strncmp@n,c
  7761  0029E2  EC5E  F019         	call	_strncmp	;wreg free
  7762  0029E6  5013               	movf	?_strncmp,w,c
  7763  0029E8  1014               	iorwf	?_strncmp+1,w,c
  7764  0029EA  A4D8               	btfss	status,2,c
  7765  0029EC  D005               	goto	l6481
  7766                           
  7767                           ;Trozinski_Herrin_Lab6.c: 595:         continuousMode = 0;
  7768  0029EE  0E00               	movlw	0
  7769  0029F0  0100               	movlb	0	; () banked
  7770  0029F2  6FE3               	movwf	(_continuousMode+1)& (0+255),b
  7771  0029F4  0E00               	movlw	0
  7772  0029F6  6FE2               	movwf	_continuousMode& (0+255),b
  7773  0029F8                     l6481:
  7774                           
  7775                           ;Trozinski_Herrin_Lab6.c: 597:     if(transmittime==1){
  7776  0029F8  0100               	movlb	0	; () banked
  7777  0029FA  05E0               	decf	_transmittime& (0+255),w,b
  7778  0029FC  11E1               	iorwf	(_transmittime+1)& (0+255),w,b
  7779  0029FE  A4D8               	btfss	status,2,c
  7780  002A00  D02C               	goto	l6503
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;Trozinski_Herrin_Lab6.c: 599:         TBuffer[0] = temperature[1];
  7784  002A02  C187  F154         	movff	_temperature+1,_TBuffer
  7785                           
  7786                           ;Trozinski_Herrin_Lab6.c: 600:         TBuffer[1] = temperature[2];
  7787  002A06  C188  F155         	movff	_temperature+2,_TBuffer+1
  7788                           
  7789                           ;Trozinski_Herrin_Lab6.c: 601:         TBuffer[2] = temperature[3];
  7790  002A0A  C189  F156         	movff	_temperature+3,_TBuffer+2
  7791                           
  7792                           ;Trozinski_Herrin_Lab6.c: 602:         TBuffer[3] = temperature[4];
  7793  002A0E  C18A  F157         	movff	_temperature+4,_TBuffer+3
  7794                           
  7795                           ;Trozinski_Herrin_Lab6.c: 603:         TBuffer[4] = temperature[5];
  7796  002A12  C18B  F158         	movff	_temperature+5,_TBuffer+4
  7797                           
  7798                           ;Trozinski_Herrin_Lab6.c: 604:         TBuffer[5] = temperature[6];
  7799  002A16  C18C  F159         	movff	_temperature+6,_TBuffer+5
  7800                           
  7801                           ;Trozinski_Herrin_Lab6.c: 605:         TBuffer[6] = temperature[7];
  7802  002A1A  C18D  F15A         	movff	_temperature+7,_TBuffer+6
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;Trozinski_Herrin_Lab6.c: 606:         TBuffer[7] = 0x3B;
  7806  002A1E  0E3B               	movlw	59
  7807  002A20  0101               	movlb	1	; () banked
  7808  002A22  6F5B               	movwf	(_TBuffer+7)& (0+255),b
  7809                           
  7810                           ;Trozinski_Herrin_Lab6.c: 607:         TBuffer[8] = 0x20;
  7811  002A24  0E20               	movlw	32
  7812  002A26  6F5C               	movwf	(_TBuffer+8)& (0+255),b
  7813                           
  7814                           ; BSR set to: 1
  7815                           ;Trozinski_Herrin_Lab6.c: 608:         TBuffer[9] = voltage[1];
  7816  002A28  C17D  F15D         	movff	_voltage+1,_TBuffer+9
  7817                           
  7818                           ; BSR set to: 1
  7819                           ;Trozinski_Herrin_Lab6.c: 609:         TBuffer[10] = voltage[2];
  7820  002A2C  C17E  F15E         	movff	_voltage+2,_TBuffer+10
  7821                           
  7822                           ; BSR set to: 1
  7823                           ;Trozinski_Herrin_Lab6.c: 610:         TBuffer[11] = voltage[3];
  7824  002A30  C17F  F15F         	movff	_voltage+3,_TBuffer+11
  7825                           
  7826                           ; BSR set to: 1
  7827                           ;Trozinski_Herrin_Lab6.c: 611:         TBuffer[12] = voltage[4];
  7828  002A34  C180  F160         	movff	_voltage+4,_TBuffer+12
  7829                           
  7830                           ; BSR set to: 1
  7831                           ;Trozinski_Herrin_Lab6.c: 612:         TBuffer[13] = voltage[5];
  7832  002A38  C181  F161         	movff	_voltage+5,_TBuffer+13
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;Trozinski_Herrin_Lab6.c: 613:         TBuffer[14] = voltage[6];
  7836  002A3C  C182  F162         	movff	_voltage+6,_TBuffer+14
  7837                           
  7838                           ; BSR set to: 1
  7839                           ;Trozinski_Herrin_Lab6.c: 614:         TBuffer[15] = voltage[7];
  7840  002A40  C183  F163         	movff	_voltage+7,_TBuffer+15
  7841                           
  7842                           ; BSR set to: 1
  7843                           ;Trozinski_Herrin_Lab6.c: 615:         TBuffer[16] = voltage[8];
  7844  002A44  C184  F164         	movff	_voltage+8,_TBuffer+16
  7845                           
  7846                           ;Trozinski_Herrin_Lab6.c: 616:         TBuffer[17] = 0x0A;
  7847  002A48  0E0A               	movlw	10
  7848  002A4A  6F65               	movwf	(_TBuffer+17)& (0+255),b
  7849                           
  7850                           ;Trozinski_Herrin_Lab6.c: 617:         TBuffer[18] = 0x00;
  7851  002A4C  0E00               	movlw	0
  7852  002A4E  6F66               	movwf	(_TBuffer+18)& (0+255),b
  7853                           
  7854                           ;Trozinski_Herrin_Lab6.c: 618:         transmittime = 0;
  7855  002A50  0E00               	movlw	0
  7856  002A52  0100               	movlb	0	; () banked
  7857  002A54  6FE1               	movwf	(_transmittime+1)& (0+255),b
  7858  002A56  0E00               	movlw	0
  7859  002A58  6FE0               	movwf	_transmittime& (0+255),b
  7860  002A5A                     l6503:
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;Trozinski_Herrin_Lab6.c: 620:     transmit();
  7864  002A5A  EC4A  F01D         	call	_transmit	;wreg free
  7865                           
  7866                           ;Trozinski_Herrin_Lab6.c: 622:     commandready = 0;
  7867  002A5E  0E00               	movlw	0
  7868  002A60  0100               	movlb	0	; () banked
  7869  002A62  6FE5               	movwf	(_commandready+1)& (0+255),b
  7870  002A64  0E00               	movlw	0
  7871  002A66  6FE4               	movwf	_commandready& (0+255),b
  7872                           
  7873                           ; BSR set to: 0
  7874  002A68  0012               	return		;funcret
  7875  002A6A                     __end_of_decoder:
  7876                           	opt callstack 0
  7877                           
  7878 ;; *************** function _transmit *****************
  7879 ;; Defined at:
  7880 ;;		line 497 in file "Trozinski_Herrin_Lab6.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;		None
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7898 ;;Total ram usage:        0 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    4
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_decoder
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text33
  7909  003A94                     __ptext33:
  7910                           	opt callstack 0
  7911  003A94                     _transmit:
  7912                           	opt callstack 25
  7913                           
  7914                           ;Trozinski_Herrin_Lab6.c: 498:     LATDbits.LATD7 = 0b1;
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;incstack = 0
  7918  003A94  8E8C               	bsf	3980,7,c	;volatile
  7919                           
  7920                           ;Trozinski_Herrin_Lab6.c: 499:     while(tcount <= 18){
  7921  003A96  D026               	goto	l4587
  7922  003A98                     l306:
  7923  003A98  A89E               	btfss	3998,4,c	;volatile
  7924  003A9A  D7FE               	goto	l306
  7925                           
  7926                           ;Trozinski_Herrin_Lab6.c: 501:         if(TBuffer[tcount] != 0x00){
  7927  003A9C  0E54               	movlw	low _TBuffer
  7928  003A9E  243E               	addwf	_tcount,w,c
  7929  003AA0  6ED9               	movwf	fsr2l,c
  7930  003AA2  0E01               	movlw	high _TBuffer
  7931  003AA4  203F               	addwfc	_tcount+1,w,c
  7932  003AA6  6EDA               	movwf	fsr2h,c
  7933  003AA8  50DF               	movf	indf2,w,c
  7934  003AAA  B4D8               	btfsc	status,2,c
  7935  003AAC  D00C               	goto	l309
  7936                           
  7937                           ;Trozinski_Herrin_Lab6.c: 502:             TXREG1 = TBuffer[tcount];
  7938  003AAE  0E54               	movlw	low _TBuffer
  7939  003AB0  243E               	addwf	_tcount,w,c
  7940  003AB2  6ED9               	movwf	fsr2l,c
  7941  003AB4  0E01               	movlw	high _TBuffer
  7942  003AB6  203F               	addwfc	_tcount+1,w,c
  7943  003AB8  6EDA               	movwf	fsr2h,c
  7944  003ABA  50DF               	movf	indf2,w,c
  7945  003ABC  6EAD               	movwf	4013,c	;volatile
  7946                           
  7947                           ;Trozinski_Herrin_Lab6.c: 504:             _delay((unsigned long)((2)*(16000000/4000000.
      +                          0)));
  7948  003ABE  D000               	nop2		;2 cycle nop
  7949  003AC0  D000               	nop2		;2 cycle nop
  7950  003AC2  D000               	nop2		;2 cycle nop
  7951  003AC4  D000               	nop2		;2 cycle nop
  7952  003AC6                     l309:
  7953                           
  7954                           ;Trozinski_Herrin_Lab6.c: 506:         if(TBuffer[tcount] == 0x00){
  7955  003AC6  0E54               	movlw	low _TBuffer
  7956  003AC8  243E               	addwf	_tcount,w,c
  7957  003ACA  6ED9               	movwf	fsr2l,c
  7958  003ACC  0E01               	movlw	high _TBuffer
  7959  003ACE  203F               	addwfc	_tcount+1,w,c
  7960  003AD0  6EDA               	movwf	fsr2h,c
  7961  003AD2  50DF               	movf	indf2,w,c
  7962  003AD4  A4D8               	btfss	status,2,c
  7963  003AD6  D004               	goto	l4585
  7964                           
  7965                           ;Trozinski_Herrin_Lab6.c: 507:             tcount = 18;
  7966  003AD8  0E00               	movlw	0
  7967  003ADA  6E3F               	movwf	_tcount+1,c
  7968  003ADC  0E12               	movlw	18
  7969  003ADE  6E3E               	movwf	_tcount,c
  7970  003AE0                     l4585:
  7971                           
  7972                           ;Trozinski_Herrin_Lab6.c: 509:         tcount++;
  7973  003AE0  4A3E               	infsnz	_tcount,f,c
  7974  003AE2  2A3F               	incf	_tcount+1,f,c
  7975  003AE4                     l4587:
  7976                           
  7977                           ;Trozinski_Herrin_Lab6.c: 499:     while(tcount <= 18){
  7978  003AE4  503F               	movf	_tcount+1,w,c
  7979  003AE6  E105               	bnz	u5330
  7980  003AE8  0E13               	movlw	19
  7981  003AEA  5C3E               	subwf	_tcount,w,c
  7982  003AEC  B0D8               	btfsc	status,0,c
  7983  003AEE  0012               	return	
  7984  003AF0  D7D3               	goto	l306
  7985  003AF2                     u5330:
  7986  003AF2  0012               	return		;funcret
  7987  003AF4                     __end_of_transmit:
  7988                           	opt callstack 0
  7989                           
  7990 ;; *************** function _strncmp *****************
  7991 ;; Defined at:
  7992 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  _l              2   18[COMRAM] PTR const unsigned char 
  7995 ;;		 -> vfpfcnvrt@ct(3), RBuffer(20), 
  7996 ;;  _r              2   20[COMRAM] PTR const unsigned char 
  7997 ;;		 -> STR_17(3), STR_6(9), STR_5(8), STR_4(4), 
  7998 ;;		 -> STR_3(5), 
  7999 ;;  n               2   22[COMRAM] unsigned int 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;  r               2   27[COMRAM] PTR const unsigned char 
  8002 ;;		 -> STR_17(3), STR_6(9), STR_5(8), STR_4(4), 
  8003 ;;		 -> STR_3(5), 
  8004 ;;  l               2   25[COMRAM] PTR const unsigned char 
  8005 ;;		 -> vfpfcnvrt@ct(3), RBuffer(20), 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  2   18[COMRAM] int 
  8008 ;; Registers used:
  8009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8015 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;Total ram usage:       11 bytes
  8020 ;; Hardware stack levels used:    1
  8021 ;; Hardware stack levels required when called:    4
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		_decoder
  8026 ;;		_vfpfcnvrt
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text34
  8031  0032BC                     __ptext34:
  8032                           	opt callstack 0
  8033  0032BC                     _strncmp:
  8034                           	opt callstack 22
  8035                           
  8036                           ;incstack = 0
  8037  0032BC  C013  F01A         	movff	strncmp@_l,strncmp@l
  8038  0032C0  C014  F01B         	movff	strncmp@_l+1,strncmp@l+1
  8039  0032C4  C015  F01C         	movff	strncmp@_r,strncmp@r
  8040  0032C8  C016  F01D         	movff	strncmp@_r+1,strncmp@r+1
  8041  0032CC  0617               	decf	strncmp@n,f,c
  8042  0032CE  A0D8               	btfss	status,0,c
  8043  0032D0  0618               	decf	strncmp@n+1,f,c
  8044  0032D2  2817               	incf	strncmp@n,w,c
  8045  0032D4  E10F               	bnz	l5835
  8046  0032D6  2818               	incf	strncmp@n+1,w,c
  8047  0032D8  A4D8               	btfss	status,2,c
  8048  0032DA  D00C               	goto	l5835
  8049  0032DC  0E00               	movlw	0
  8050  0032DE  6E14               	movwf	?_strncmp+1,c
  8051  0032E0  0E00               	movlw	0
  8052  0032E2  6E13               	movwf	?_strncmp,c
  8053  0032E4  0012               	return	
  8054  0032E6                     l5833:
  8055  0032E6  4A1A               	infsnz	strncmp@l,f,c
  8056  0032E8  2A1B               	incf	strncmp@l+1,f,c
  8057  0032EA  4A1C               	infsnz	strncmp@r,f,c
  8058  0032EC  2A1D               	incf	strncmp@r+1,f,c
  8059  0032EE  0617               	decf	strncmp@n,f,c
  8060  0032F0  A0D8               	btfss	status,0,c
  8061  0032F2  0618               	decf	strncmp@n+1,f,c
  8062  0032F4                     l5835:
  8063  0032F4  C01A  FFD9         	movff	strncmp@l,fsr2l
  8064  0032F8  C01B  FFDA         	movff	strncmp@l+1,fsr2h
  8065  0032FC  50DF               	movf	indf2,w,c
  8066  0032FE  B4D8               	btfsc	status,2,c
  8067  003300  D020               	goto	u7340
  8068  003302  C01C  FFF6         	movff	strncmp@r,tblptrl
  8069  003306  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  8070  00330A                     	if	0	;tblptru may be non-zero
  8071  00330A                     	endif
  8072  00330A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8073  00330A  0E00               	movlw	low (__mediumconst shr (0+16))
  8074  00330C  6EF8               	movwf	tblptru,c
  8075  00330E                     	endif
  8076  00330E  0008               	tblrd		*
  8077  003310  50F5               	movf	tablat,w,c
  8078  003312  0900               	iorlw	0
  8079  003314  B4D8               	btfsc	status,2,c
  8080  003316  D015               	goto	u7340
  8081  003318  5017               	movf	strncmp@n,w,c
  8082  00331A  1018               	iorwf	strncmp@n+1,w,c
  8083  00331C  B4D8               	btfsc	status,2,c
  8084  00331E  D011               	goto	u7340
  8085  003320  C01A  FFD9         	movff	strncmp@l,fsr2l
  8086  003324  C01B  FFDA         	movff	strncmp@l+1,fsr2h
  8087  003328  50DF               	movf	indf2,w,c
  8088  00332A  6E19               	movwf	??_strncmp& (0+255),c
  8089  00332C  C01C  FFF6         	movff	strncmp@r,tblptrl
  8090  003330  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  8091  003334                     	if	0	;tblptru may be non-zero
  8092  003334                     	endif
  8093  003334                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8094  003334  0E00               	movlw	low (__mediumconst shr (0+16))
  8095  003336  6EF8               	movwf	tblptru,c
  8096  003338                     	endif
  8097  003338  0008               	tblrd		*
  8098  00333A  50F5               	movf	tablat,w,c
  8099  00333C  1819               	xorwf	??_strncmp,w,c
  8100  00333E  B4D8               	btfsc	status,2,c
  8101  003340  D7D2               	goto	l5833
  8102  003342                     u7340:
  8103  003342  C01A  FFD9         	movff	strncmp@l,fsr2l
  8104  003346  C01B  FFDA         	movff	strncmp@l+1,fsr2h
  8105  00334A  50DF               	movf	indf2,w,c
  8106  00334C  6E19               	movwf	??_strncmp& (0+255),c
  8107  00334E  C01C  FFF6         	movff	strncmp@r,tblptrl
  8108  003352  C01D  FFF7         	movff	strncmp@r+1,tblptrh
  8109  003356                     	if	0	;tblptru may be non-zero
  8110  003356                     	endif
  8111  003356                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8112  003356  0E00               	movlw	low (__mediumconst shr (0+16))
  8113  003358  6EF8               	movwf	tblptru,c
  8114  00335A                     	endif
  8115  00335A  0008               	tblrd		*
  8116  00335C  50F5               	movf	tablat,w,c
  8117  00335E  5C19               	subwf	??_strncmp,w,c
  8118  003360  6E13               	movwf	?_strncmp,c
  8119  003362  6A14               	clrf	?_strncmp+1,c
  8120  003364  A0D8               	btfss	status,0,c
  8121  003366  0614               	decf	?_strncmp+1,f,c
  8122  003368  0012               	return		;funcret
  8123  00336A                     __end_of_strncmp:
  8124                           	opt callstack 0
  8125                           
  8126 ;; *************** function _memset *****************
  8127 ;; Defined at:
  8128 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  dest            2   18[COMRAM] PTR void 
  8131 ;;		 -> RBuffer(20), TBuffer(20), 
  8132 ;;  c               2   20[COMRAM] int 
  8133 ;;  n               2   22[COMRAM] unsigned int 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  s               2   28[COMRAM] PTR unsigned char 
  8136 ;;		 -> RBuffer(20), TBuffer(20), 
  8137 ;;  k               2   26[COMRAM] unsigned int 
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  2   18[COMRAM] PTR void 
  8140 ;; Registers used:
  8141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8147 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8148 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8150 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;Total ram usage:       12 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:    4
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_decoder
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text35
  8162  002CFE                     __ptext35:
  8163                           	opt callstack 0
  8164  002CFE                     _memset:
  8165                           	opt callstack 25
  8166                           
  8167                           ;incstack = 0
  8168  002CFE  C013  F01D         	movff	memset@dest,memset@s
  8169  002D02  C014  F01E         	movff	memset@dest+1,memset@s+1
  8170  002D06  5017               	movf	memset@n,w,c
  8171  002D08  1018               	iorwf	memset@n+1,w,c
  8172  002D0A  B4D8               	btfsc	status,2,c
  8173  002D0C  0012               	return	
  8174  002D0E  C01D  FFD9         	movff	memset@s,fsr2l
  8175  002D12  C01E  FFDA         	movff	memset@s+1,fsr2h
  8176  002D16  C015  FFDF         	movff	memset@c,indf2
  8177  002D1A  5017               	movf	memset@n,w,c
  8178  002D1C  241D               	addwf	memset@s,w,c
  8179  002D1E  6E19               	movwf	??_memset& (0+255),c
  8180  002D20  5018               	movf	memset@n+1,w,c
  8181  002D22  201E               	addwfc	memset@s+1,w,c
  8182  002D24  6E1A               	movwf	(??_memset+1)& (0+255),c
  8183  002D26  0EFF               	movlw	255
  8184  002D28  2419               	addwf	??_memset,w,c
  8185  002D2A  6ED9               	movwf	fsr2l,c
  8186  002D2C  0EFF               	movlw	255
  8187  002D2E  201A               	addwfc	??_memset+1,w,c
  8188  002D30  6EDA               	movwf	fsr2h,c
  8189  002D32  C015  FFDF         	movff	memset@c,indf2
  8190  002D36  5018               	movf	memset@n+1,w,c
  8191  002D38  E104               	bnz	l4599
  8192  002D3A  0E03               	movlw	3
  8193  002D3C  5C17               	subwf	memset@n,w,c
  8194  002D3E  A0D8               	btfss	status,0,c
  8195  002D40  0012               	return	
  8196  002D42                     l4599:
  8197  002D42  EE20 F001          	lfsr	2,1
  8198  002D46  501D               	movf	memset@s,w,c
  8199  002D48  26D9               	addwf	fsr2l,f,c
  8200  002D4A  501E               	movf	memset@s+1,w,c
  8201  002D4C  22DA               	addwfc	fsr2h,f,c
  8202  002D4E  C015  FFDF         	movff	memset@c,indf2
  8203  002D52  EE20 F002          	lfsr	2,2
  8204  002D56  501D               	movf	memset@s,w,c
  8205  002D58  26D9               	addwf	fsr2l,f,c
  8206  002D5A  501E               	movf	memset@s+1,w,c
  8207  002D5C  22DA               	addwfc	fsr2h,f,c
  8208  002D5E  C015  FFDF         	movff	memset@c,indf2
  8209  002D62  5017               	movf	memset@n,w,c
  8210  002D64  241D               	addwf	memset@s,w,c
  8211  002D66  6E19               	movwf	??_memset& (0+255),c
  8212  002D68  5018               	movf	memset@n+1,w,c
  8213  002D6A  201E               	addwfc	memset@s+1,w,c
  8214  002D6C  6E1A               	movwf	(??_memset+1)& (0+255),c
  8215  002D6E  0EFE               	movlw	254
  8216  002D70  2419               	addwf	??_memset,w,c
  8217  002D72  6ED9               	movwf	fsr2l,c
  8218  002D74  0EFF               	movlw	255
  8219  002D76  201A               	addwfc	??_memset+1,w,c
  8220  002D78  6EDA               	movwf	fsr2h,c
  8221  002D7A  C015  FFDF         	movff	memset@c,indf2
  8222  002D7E  5017               	movf	memset@n,w,c
  8223  002D80  241D               	addwf	memset@s,w,c
  8224  002D82  6E19               	movwf	??_memset& (0+255),c
  8225  002D84  5018               	movf	memset@n+1,w,c
  8226  002D86  201E               	addwfc	memset@s+1,w,c
  8227  002D88  6E1A               	movwf	(??_memset+1)& (0+255),c
  8228  002D8A  0EFD               	movlw	253
  8229  002D8C  2419               	addwf	??_memset,w,c
  8230  002D8E  6ED9               	movwf	fsr2l,c
  8231  002D90  0EFF               	movlw	255
  8232  002D92  201A               	addwfc	??_memset+1,w,c
  8233  002D94  6EDA               	movwf	fsr2h,c
  8234  002D96  C015  FFDF         	movff	memset@c,indf2
  8235  002D9A  5018               	movf	memset@n+1,w,c
  8236  002D9C  E104               	bnz	l4605
  8237  002D9E  0E07               	movlw	7
  8238  002DA0  5C17               	subwf	memset@n,w,c
  8239  002DA2  A0D8               	btfss	status,0,c
  8240  002DA4  0012               	return	
  8241  002DA6                     l4605:
  8242  002DA6  EE20 F003          	lfsr	2,3
  8243  002DAA  501D               	movf	memset@s,w,c
  8244  002DAC  26D9               	addwf	fsr2l,f,c
  8245  002DAE  501E               	movf	memset@s+1,w,c
  8246  002DB0  22DA               	addwfc	fsr2h,f,c
  8247  002DB2  C015  FFDF         	movff	memset@c,indf2
  8248  002DB6  5017               	movf	memset@n,w,c
  8249  002DB8  241D               	addwf	memset@s,w,c
  8250  002DBA  6E19               	movwf	??_memset& (0+255),c
  8251  002DBC  5018               	movf	memset@n+1,w,c
  8252  002DBE  201E               	addwfc	memset@s+1,w,c
  8253  002DC0  6E1A               	movwf	(??_memset+1)& (0+255),c
  8254  002DC2  0EFC               	movlw	252
  8255  002DC4  2419               	addwf	??_memset,w,c
  8256  002DC6  6ED9               	movwf	fsr2l,c
  8257  002DC8  0EFF               	movlw	255
  8258  002DCA  201A               	addwfc	??_memset+1,w,c
  8259  002DCC  6EDA               	movwf	fsr2h,c
  8260  002DCE  C015  FFDF         	movff	memset@c,indf2
  8261  002DD2  5018               	movf	memset@n+1,w,c
  8262  002DD4  E104               	bnz	l4611
  8263  002DD6  0E09               	movlw	9
  8264  002DD8  5C17               	subwf	memset@n,w,c
  8265  002DDA  A0D8               	btfss	status,0,c
  8266  002DDC  0012               	return	
  8267  002DDE                     l4611:
  8268  002DDE  C01D  F019         	movff	memset@s,??_memset
  8269  002DE2  C01E  F01A         	movff	memset@s+1,??_memset+1
  8270  002DE6  1E19               	comf	??_memset,f,c
  8271  002DE8  1E1A               	comf	??_memset+1,f,c
  8272  002DEA  4A19               	infsnz	??_memset,f,c
  8273  002DEC  2A1A               	incf	??_memset+1,f,c
  8274  002DEE  0E03               	movlw	3
  8275  002DF0  1419               	andwf	??_memset,w,c
  8276  002DF2  6E1B               	movwf	memset@k,c
  8277  002DF4  6A1C               	clrf	memset@k+1,c
  8278  002DF6  501B               	movf	memset@k,w,c
  8279  002DF8  261D               	addwf	memset@s,f,c
  8280  002DFA  501C               	movf	memset@k+1,w,c
  8281  002DFC  221E               	addwfc	memset@s+1,f,c
  8282  002DFE  501B               	movf	memset@k,w,c
  8283  002E00  5E17               	subwf	memset@n,f,c
  8284  002E02  501C               	movf	memset@k+1,w,c
  8285  002E04  5A18               	subwfb	memset@n+1,f,c
  8286  002E06  0EFC               	movlw	252
  8287  002E08  1617               	andwf	memset@n,f,c
  8288  002E0A  0EFF               	movlw	255
  8289  002E0C  1618               	andwf	memset@n+1,f,c
  8290  002E0E  D00B               	goto	l4619
  8291  002E10                     l4613:
  8292  002E10  C01D  FFD9         	movff	memset@s,fsr2l
  8293  002E14  C01E  FFDA         	movff	memset@s+1,fsr2h
  8294  002E18  C015  FFDF         	movff	memset@c,indf2
  8295  002E1C  0617               	decf	memset@n,f,c
  8296  002E1E  A0D8               	btfss	status,0,c
  8297  002E20  0618               	decf	memset@n+1,f,c
  8298  002E22  4A1D               	infsnz	memset@s,f,c
  8299  002E24  2A1E               	incf	memset@s+1,f,c
  8300  002E26                     l4619:
  8301  002E26  5017               	movf	memset@n,w,c
  8302  002E28  1018               	iorwf	memset@n+1,w,c
  8303  002E2A  B4D8               	btfsc	status,2,c
  8304  002E2C  0012               	return	
  8305  002E2E  D7F0               	goto	l4613
  8306  002E30                     __end_of_memset:
  8307                           	opt callstack 0
  8308                           
  8309 ;; *************** function _Initial *****************
  8310 ;; Defined at:
  8311 ;;		line 162 in file "Trozinski_Herrin_Lab6.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used:    1
  8331 ;; Hardware stack levels required when called:    6
  8332 ;; This function calls:
  8333 ;;		_DisplayC
  8334 ;;		_InitLCD
  8335 ;; This function is called by:
  8336 ;;		_main
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text36
  8341  002F62                     __ptext36:
  8342                           	opt callstack 0
  8343  002F62                     _Initial:
  8344                           	opt callstack 24
  8345                           
  8346                           ;Trozinski_Herrin_Lab6.c: 164:     BSR = 0x0F;
  8347                           
  8348                           ;incstack = 0
  8349  002F62  0E0F               	movlw	15
  8350  002F64  6EE0               	movwf	bsr,c	;volatile
  8351                           
  8352                           ;Trozinski_Herrin_Lab6.c: 166:     TRISD = 0b00001111;
  8353  002F66  0E0F               	movlw	15
  8354  002F68  6E95               	movwf	3989,c	;volatile
  8355                           
  8356                           ;Trozinski_Herrin_Lab6.c: 167:     LATD = 0;
  8357  002F6A  0E00               	movlw	0
  8358  002F6C  6E8C               	movwf	3980,c	;volatile
  8359                           
  8360                           ;Trozinski_Herrin_Lab6.c: 168:     TRISC = 0b10010011;
  8361  002F6E  0E93               	movlw	147
  8362  002F70  6E94               	movwf	3988,c	;volatile
  8363                           
  8364                           ;Trozinski_Herrin_Lab6.c: 169:     LATC = 0;
  8365  002F72  0E00               	movlw	0
  8366  002F74  6E8B               	movwf	3979,c	;volatile
  8367                           
  8368                           ;Trozinski_Herrin_Lab6.c: 170:     TRISA = 0b00101001;
  8369  002F76  0E29               	movlw	41
  8370  002F78  6E92               	movwf	3986,c	;volatile
  8371                           
  8372                           ;Trozinski_Herrin_Lab6.c: 171:     TRISEbits.TRISE0 = 0;
  8373  002F7A  9096               	bcf	3990,0,c	;volatile
  8374                           
  8375                           ;Trozinski_Herrin_Lab6.c: 175:     TRISBbits.TRISB4 = 0;
  8376  002F7C  9893               	bcf	3987,4,c	;volatile
  8377                           
  8378                           ;Trozinski_Herrin_Lab6.c: 176:     TRISBbits.TRISB5 = 0;
  8379  002F7E  9A93               	bcf	3987,5,c	;volatile
  8380                           
  8381                           ;Trozinski_Herrin_Lab6.c: 177:     TRISB = 0b11000000;
  8382  002F80  0EC0               	movlw	192
  8383  002F82  6E93               	movwf	3987,c	;volatile
  8384                           
  8385                           ;Trozinski_Herrin_Lab6.c: 179:     LATB = 0;
  8386  002F84  0E00               	movlw	0
  8387  002F86  6E8A               	movwf	3978,c	;volatile
  8388                           
  8389                           ;Trozinski_Herrin_Lab6.c: 183:     InitLCD();
  8390  002F88  ECB5  F019         	call	_InitLCD	;wreg free
  8391                           
  8392                           ;Trozinski_Herrin_Lab6.c: 184:     DisplayC(LCDRow1);
  8393  002F8C  0E01               	movlw	low _LCDRow1
  8394  002F8E  6E1D               	movwf	DisplayC@LCDStr,c
  8395  002F90  0E10               	movlw	high _LCDRow1
  8396  002F92  6E1E               	movwf	DisplayC@LCDStr+1,c
  8397  002F94  EC25  F01F         	call	_DisplayC	;wreg free
  8398                           
  8399                           ;Trozinski_Herrin_Lab6.c: 190:     ANCON0 = 0x0F;
  8400  002F98  0E0F               	movlw	15
  8401  002F9A  010F               	movlb	15	; () banked
  8402  002F9C  6F25               	movwf	37,b	;volatile
  8403                           
  8404                           ; BSR set to: 15
  8405                           ;Trozinski_Herrin_Lab6.c: 191:     ANCON0bits.ANSEL4 = 1;
  8406  002F9E  8925               	bsf	37,4,b	;volatile
  8407                           
  8408                           ; BSR set to: 15
  8409                           ;Trozinski_Herrin_Lab6.c: 192:     ANCON1 = 0x00;
  8410  002FA0  0E00               	movlw	0
  8411  002FA2  6F24               	movwf	36,b	;volatile
  8412                           
  8413                           ; BSR set to: 15
  8414                           ;Trozinski_Herrin_Lab6.c: 193:     ANCON2 = 0x00;
  8415  002FA4  0E00               	movlw	0
  8416  002FA6  6F23               	movwf	35,b	;volatile
  8417                           
  8418                           ; BSR set to: 15
  8419                           ;Trozinski_Herrin_Lab6.c: 199:     ADCON1 = 0b00000000;
  8420  002FA8  0E00               	movlw	0
  8421  002FAA  6EC1               	movwf	4033,c	;volatile
  8422                           
  8423                           ; BSR set to: 15
  8424                           ;Trozinski_Herrin_Lab6.c: 204:     ADCON0 = 0b00001101;
  8425  002FAC  0E0D               	movlw	13
  8426  002FAE  6EC2               	movwf	4034,c	;volatile
  8427                           
  8428                           ; BSR set to: 15
  8429                           ;Trozinski_Herrin_Lab6.c: 206:     ADCON2bits.ADFM = 0b1;
  8430  002FB0  8EC0               	bsf	4032,7,c	;volatile
  8431                           
  8432                           ; BSR set to: 15
  8433                           ;Trozinski_Herrin_Lab6.c: 210:     ADCON2bits.ACQT = 0b010;
  8434  002FB2  50C0               	movf	4032,w,c	;volatile
  8435  002FB4  0BC7               	andlw	-57
  8436  002FB6  0910               	iorlw	16
  8437  002FB8  6EC0               	movwf	4032,c	;volatile
  8438                           
  8439                           ; BSR set to: 15
  8440                           ;Trozinski_Herrin_Lab6.c: 212:     ADCON2bits.ADCS = 0b101;
  8441  002FBA  50C0               	movf	4032,w,c	;volatile
  8442  002FBC  0BF8               	andlw	-8
  8443  002FBE  0905               	iorlw	5
  8444  002FC0  6EC0               	movwf	4032,c	;volatile
  8445                           
  8446                           ; BSR set to: 15
  8447                           ;Trozinski_Herrin_Lab6.c: 213:     ADCON2 = 0b10010101;
  8448  002FC2  0E95               	movlw	149
  8449  002FC4  6EC0               	movwf	4032,c	;volatile
  8450                           
  8451                           ; BSR set to: 15
  8452                           ;Trozinski_Herrin_Lab6.c: 215:     PIR1bits.ADIF = 0;
  8453  002FC6  9C9E               	bcf	3998,6,c	;volatile
  8454                           
  8455                           ; BSR set to: 15
  8456                           ;Trozinski_Herrin_Lab6.c: 216:     PIE1bits.ADIE = 0;
  8457  002FC8  9C9D               	bcf	3997,6,c	;volatile
  8458                           
  8459                           ; BSR set to: 15
  8460                           ;Trozinski_Herrin_Lab6.c: 217:     IPR1bits.ADIP = 0;
  8461  002FCA  9C9F               	bcf	3999,6,c	;volatile
  8462                           
  8463                           ; BSR set to: 15
  8464                           ;Trozinski_Herrin_Lab6.c: 221:     LEDcount = 0;
  8465  002FCC  0E00               	movlw	0
  8466  002FCE  6E41               	movwf	_LEDcount+1,c
  8467  002FD0  0E00               	movlw	0
  8468  002FD2  6E40               	movwf	_LEDcount,c
  8469                           
  8470                           ; BSR set to: 15
  8471                           ;Trozinski_Herrin_Lab6.c: 222:     ONcount = 3036;
  8472  002FD4  0E0B               	movlw	11
  8473  002FD6  6E43               	movwf	_ONcount+1,c
  8474  002FD8  0EDC               	movlw	220
  8475  002FDA  6E42               	movwf	_ONcount,c
  8476                           
  8477                           ; BSR set to: 15
  8478                           ;Trozinski_Herrin_Lab6.c: 223:     OFFcount = 3036;
  8479  002FDC  0E0B               	movlw	11
  8480  002FDE  0100               	movlb	0	; () banked
  8481  002FE0  6FEF               	movwf	(_OFFcount+1)& (0+255),b
  8482  002FE2  0EDC               	movlw	220
  8483  002FE4  6FEE               	movwf	_OFFcount& (0+255),b
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;Trozinski_Herrin_Lab6.c: 226:     T0CON = 0b00000100;
  8487  002FE6  0E04               	movlw	4
  8488  002FE8  6ED5               	movwf	4053,c	;volatile
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;Trozinski_Herrin_Lab6.c: 227:     TMR0L = 0;
  8492  002FEA  0E00               	movlw	0
  8493  002FEC  6ED6               	movwf	4054,c	;volatile
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;Trozinski_Herrin_Lab6.c: 228:     TMR0H = 0;
  8497  002FEE  0E00               	movlw	0
  8498  002FF0  6ED7               	movwf	4055,c	;volatile
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;Trozinski_Herrin_Lab6.c: 231:     T1CON = 0b00000010;
  8502  002FF2  0E02               	movlw	2
  8503  002FF4  6ECD               	movwf	4045,c	;volatile
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;Trozinski_Herrin_Lab6.c: 232:     PIR1bits.TMR1IF = 0;
  8507  002FF6  909E               	bcf	3998,0,c	;volatile
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;Trozinski_Herrin_Lab6.c: 233:     IPR1bits.TMR1IP = 0;
  8511  002FF8  909F               	bcf	3999,0,c	;volatile
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;Trozinski_Herrin_Lab6.c: 234:     PIE1bits.TMR1IE = 1;
  8515  002FFA  809D               	bsf	3997,0,c	;volatile
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;Trozinski_Herrin_Lab6.c: 235:     TMR1 = 63692;
  8519  002FFC  0EF8               	movlw	248
  8520  002FFE  6ECF               	movwf	4047,c	;volatile
  8521  003000  0ECC               	movlw	204
  8522  003002  6ECE               	movwf	4046,c	;volatile
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;Trozinski_Herrin_Lab6.c: 238:     RCONbits.IPEN = 1;
  8526  003004  8ED0               	bsf	4048,7,c	;volatile
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;Trozinski_Herrin_Lab6.c: 239:     INTCON2bits.TMR0IP = 0;
  8530  003006  94F1               	bcf	4081,2,c	;volatile
  8531                           
  8532                           ; BSR set to: 0
  8533                           ;Trozinski_Herrin_Lab6.c: 241:     INTCONbits.TMR0IE = 1;
  8534  003008  8AF2               	bsf	4082,5,c	;volatile
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;Trozinski_Herrin_Lab6.c: 242:     INTCONbits.GIEL = 1;
  8538  00300A  8CF2               	bsf	4082,6,c	;volatile
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;Trozinski_Herrin_Lab6.c: 243:     INTCONbits.GIEH = 1;
  8542  00300C  8EF2               	bsf	4082,7,c	;volatile
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;Trozinski_Herrin_Lab6.c: 245:     T0CONbits.TMR0ON = 1;
  8546  00300E  8ED5               	bsf	4053,7,c	;volatile
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;Trozinski_Herrin_Lab6.c: 247:     LATD = 0b00000000;
  8550  003010  0E00               	movlw	0
  8551  003012  6E8C               	movwf	3980,c	;volatile
  8552  003014                     l6415:
  8553  003014  5041               	movf	_LEDcount+1,w,c
  8554  003016  E104               	bnz	u8110
  8555  003018  0E04               	movlw	4
  8556  00301A  5C40               	subwf	_LEDcount,w,c
  8557  00301C  A0D8               	btfss	status,0,c
  8558  00301E  D7FA               	goto	l6415
  8559  003020                     u8110:
  8560                           
  8561                           ;Trozinski_Herrin_Lab6.c: 250:     T0CONbits.T0PS = 0b101;
  8562  003020  50D5               	movf	4053,w,c	;volatile
  8563  003022  0BF8               	andlw	-8
  8564  003024  0905               	iorlw	5
  8565  003026  6ED5               	movwf	4053,c	;volatile
  8566                           
  8567                           ;Trozinski_Herrin_Lab6.c: 251:     ONcount = 59300;
  8568  003028  0EE7               	movlw	231
  8569  00302A  6E43               	movwf	_ONcount+1,c
  8570  00302C  0EA4               	movlw	164
  8571  00302E  6E42               	movwf	_ONcount,c
  8572                           
  8573                           ;Trozinski_Herrin_Lab6.c: 252:     OFFcount = 9272;
  8574  003030  0E24               	movlw	36
  8575  003032  0100               	movlb	0	; () banked
  8576  003034  6FEF               	movwf	(_OFFcount+1)& (0+255),b
  8577  003036  0E38               	movlw	56
  8578  003038  6FEE               	movwf	_OFFcount& (0+255),b
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;Trozinski_Herrin_Lab6.c: 253:     LATDbits.LATD4 = 0b0;
  8582  00303A  988C               	bcf	3980,4,c	;volatile
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;Trozinski_Herrin_Lab6.c: 259:     TXSTA1bits.SYNC = 0b0;
  8586  00303C  98AC               	bcf	4012,4,c	;volatile
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;Trozinski_Herrin_Lab6.c: 260:     TXSTA1bits.BRGH = 0b1;
  8590  00303E  84AC               	bsf	4012,2,c	;volatile
  8591                           
  8592                           ; BSR set to: 0
  8593                           ;Trozinski_Herrin_Lab6.c: 261:     TXSTA1bits.TXEN = 0b1;
  8594  003040  8AAC               	bsf	4012,5,c	;volatile
  8595                           
  8596                           ;Trozinski_Herrin_Lab6.c: 263:     SPBRG = 51;
  8597  003042  0E33               	movlw	51
  8598  003044  6EAF               	movwf	4015,c	;volatile
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;Trozinski_Herrin_Lab6.c: 265:     RCSTA1bits.SPEN = 0b1;
  8602  003046  8EAB               	bsf	4011,7,c	;volatile
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;Trozinski_Herrin_Lab6.c: 266:     RCSTA1bits.CREN = 0b1;
  8606  003048  88AB               	bsf	4011,4,c	;volatile
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;Trozinski_Herrin_Lab6.c: 268:     IPR1bits.RC1IP = 0b0;
  8610  00304A  9A9F               	bcf	3999,5,c	;volatile
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;Trozinski_Herrin_Lab6.c: 269:     IPR1bits.TX1IP = 0b0;
  8614  00304C  989F               	bcf	3999,4,c	;volatile
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;Trozinski_Herrin_Lab6.c: 270:     PIE1bits.RC1IE = 0b1;
  8618  00304E  8A9D               	bsf	3997,5,c	;volatile
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;Trozinski_Herrin_Lab6.c: 271:     PIE1bits.TX1IE = 0b0;
  8622  003050  989D               	bcf	3997,4,c	;volatile
  8623                           
  8624                           ; BSR set to: 0
  8625                           ;Trozinski_Herrin_Lab6.c: 276:     BAUDCON1bits.BRG16 = 0b0;
  8626  003052  9665               	bcf	3941,3,c	;volatile
  8627                           
  8628                           ;Trozinski_Herrin_Lab6.c: 278:     SSP1CON1 = 0b00100000;
  8629  003054  0E20               	movlw	32
  8630  003056  6EC6               	movwf	4038,c	;volatile
  8631                           
  8632                           ;Trozinski_Herrin_Lab6.c: 279:     SSP1STAT = 0x00;
  8633  003058  0E00               	movlw	0
  8634  00305A  6EC7               	movwf	4039,c	;volatile
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;Trozinski_Herrin_Lab6.c: 280:     SSP1STATbits.SMP = 1;
  8638  00305C  8EC7               	bsf	4039,7,c	;volatile
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;Trozinski_Herrin_Lab6.c: 281:     SSP1STATbits.CKE = 1;
  8642  00305E  8CC7               	bsf	4039,6,c	;volatile
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;Trozinski_Herrin_Lab6.c: 283:     T1CONbits.TMR1ON = 1;
  8646  003060  80CD               	bsf	4045,0,c	;volatile
  8647                           
  8648                           ; BSR set to: 0
  8649  003062  0012               	return		;funcret
  8650  003064                     __end_of_Initial:
  8651                           	opt callstack 0
  8652                           
  8653 ;; *************** function _InitLCD *****************
  8654 ;; Defined at:
  8655 ;;		line 51 in file "LCDroutinesEasyPic.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  nibble          1   20[COMRAM] unsigned char 
  8660 ;;  count           1   19[COMRAM] unsigned char 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8674 ;;Total ram usage:        3 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:    4
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_Initial
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text37
  8685  00336A                     __ptext37:
  8686                           	opt callstack 0
  8687  00336A                     _InitLCD:
  8688                           	opt callstack 25
  8689                           
  8690                           ;LCDroutinesEasyPic.c: 52:  unsigned char count = 0;
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;incstack = 0
  8694  00336A  0E00               	movlw	0
  8695  00336C  6E14               	movwf	InitLCD@count,c
  8696                           
  8697                           ;LCDroutinesEasyPic.c: 57:     _delay((unsigned long)((40)*(16000000/4000.0)));
  8698  00336E  0ED0               	movlw	208
  8699  003370  6E13               	movwf	??_InitLCD& (0+255),c
  8700  003372  0ECA               	movlw	202
  8701  003374                     u8217:
  8702  003374  2EE8               	decfsz	wreg,f,c
  8703  003376  D7FE               	bra	u8217
  8704  003378  2E13               	decfsz	??_InitLCD& (0+255),f,c
  8705  00337A  D7FC               	bra	u8217
  8706                           
  8707                           ;LCDroutinesEasyPic.c: 60:  LATBbits.LATB4 = 0;
  8708  00337C  988A               	bcf	3978,4,c	;volatile
  8709                           
  8710                           ;LCDroutinesEasyPic.c: 63:  while( LCDInitStr_[count] != 0x00 ) {
  8711  00337E  D03A               	goto	l4529
  8712  003380                     l4501:
  8713                           
  8714                           ;LCDroutinesEasyPic.c: 64:         LATB = 0;
  8715  003380  0E00               	movlw	0
  8716  003382  6E8A               	movwf	3978,c	;volatile
  8717                           
  8718                           ;LCDroutinesEasyPic.c: 65:   LATBbits.LATB5 = 1;
  8719  003384  8A8A               	bsf	3978,5,c	;volatile
  8720                           
  8721                           ;LCDroutinesEasyPic.c: 66:         nibble = 0xF0 & LCDInitStr_[count];
  8722  003386  0E0B               	movlw	low _LCDInitStr_
  8723  003388  2414               	addwf	InitLCD@count,w,c
  8724  00338A  6EF6               	movwf	tblptrl,c
  8725  00338C  6AF7               	clrf	tblptrh,c
  8726  00338E  0E10               	movlw	high _LCDInitStr_
  8727  003390  22F7               	addwfc	tblptrh,f,c
  8728  003392                     	if	1	;There are 3 active tblptr bytes
  8729  003392  6AF8               	clrf	tblptru,c
  8730  003394  0E00               	movlw	low (__mediumconst shr (0+16))
  8731  003396  22F8               	addwfc	tblptru,f,c
  8732  003398                     	endif
  8733  003398  0008               	tblrd		*
  8734  00339A  50F5               	movf	tablat,w,c
  8735  00339C  0BF0               	andlw	240
  8736  00339E  6E15               	movwf	InitLCD@nibble,c
  8737                           
  8738                           ;LCDroutinesEasyPic.c: 67:         nibble = nibble>>4;
  8739  0033A0  3815               	swapf	InitLCD@nibble,w,c
  8740  0033A2  0B0F               	andlw	15
  8741  0033A4  6E15               	movwf	InitLCD@nibble,c
  8742                           
  8743                           ;LCDroutinesEasyPic.c: 68:         LATB = nibble | PORTB;
  8744  0033A6  5015               	movf	InitLCD@nibble,w,c
  8745  0033A8  1081               	iorwf	3969,w,c	;volatile
  8746  0033AA  6E8A               	movwf	3978,c	;volatile
  8747                           
  8748                           ;LCDroutinesEasyPic.c: 69:         LATBbits.LATB5 = 0;
  8749  0033AC  9A8A               	bcf	3978,5,c	;volatile
  8750                           
  8751                           ;LCDroutinesEasyPic.c: 70:         _delay((unsigned long)((10)*(16000000/4000.0)));
  8752  0033AE  0E34               	movlw	52
  8753  0033B0  6E13               	movwf	??_InitLCD& (0+255),c
  8754  0033B2  0EF2               	movlw	242
  8755  0033B4                     u8227:
  8756  0033B4  2EE8               	decfsz	wreg,f,c
  8757  0033B6  D7FE               	bra	u8227
  8758  0033B8  2E13               	decfsz	??_InitLCD& (0+255),f,c
  8759  0033BA  D7FC               	bra	u8227
  8760                           
  8761                           ;LCDroutinesEasyPic.c: 72:         LATB = 0;
  8762  0033BC  0E00               	movlw	0
  8763  0033BE  6E8A               	movwf	3978,c	;volatile
  8764                           
  8765                           ;LCDroutinesEasyPic.c: 73:   LATBbits.LATB5 = 1;
  8766  0033C0  8A8A               	bsf	3978,5,c	;volatile
  8767                           
  8768                           ;LCDroutinesEasyPic.c: 74:         nibble = 0x0F & LCDInitStr_[count];
  8769  0033C2  0E0B               	movlw	low _LCDInitStr_
  8770  0033C4  2414               	addwf	InitLCD@count,w,c
  8771  0033C6  6EF6               	movwf	tblptrl,c
  8772  0033C8  6AF7               	clrf	tblptrh,c
  8773  0033CA  0E10               	movlw	high _LCDInitStr_
  8774  0033CC  22F7               	addwfc	tblptrh,f,c
  8775  0033CE                     	if	1	;There are 3 active tblptr bytes
  8776  0033CE  6AF8               	clrf	tblptru,c
  8777  0033D0  0E00               	movlw	low (__mediumconst shr (0+16))
  8778  0033D2  22F8               	addwfc	tblptru,f,c
  8779  0033D4                     	endif
  8780  0033D4  0008               	tblrd		*
  8781  0033D6  50F5               	movf	tablat,w,c
  8782  0033D8  0B0F               	andlw	15
  8783  0033DA  6E15               	movwf	InitLCD@nibble,c
  8784                           
  8785                           ;LCDroutinesEasyPic.c: 75:   LATB = nibble | PORTB;
  8786  0033DC  5015               	movf	InitLCD@nibble,w,c
  8787  0033DE  1081               	iorwf	3969,w,c	;volatile
  8788  0033E0  6E8A               	movwf	3978,c	;volatile
  8789                           
  8790                           ;LCDroutinesEasyPic.c: 76:         LATBbits.LATB5 = 0;
  8791  0033E2  9A8A               	bcf	3978,5,c	;volatile
  8792                           
  8793                           ;LCDroutinesEasyPic.c: 77:   _delay((unsigned long)((10)*(16000000/4000.0)));
  8794  0033E4  0E34               	movlw	52
  8795  0033E6  6E13               	movwf	??_InitLCD& (0+255),c
  8796  0033E8  0EF2               	movlw	242
  8797  0033EA                     u8237:
  8798  0033EA  2EE8               	decfsz	wreg,f,c
  8799  0033EC  D7FE               	bra	u8237
  8800  0033EE  2E13               	decfsz	??_InitLCD& (0+255),f,c
  8801  0033F0  D7FC               	bra	u8237
  8802                           
  8803                           ;LCDroutinesEasyPic.c: 79:   count++;
  8804  0033F2  2A14               	incf	InitLCD@count,f,c
  8805  0033F4                     l4529:
  8806                           
  8807                           ;LCDroutinesEasyPic.c: 63:  while( LCDInitStr_[count] != 0x00 ) {
  8808  0033F4  0E0B               	movlw	low _LCDInitStr_
  8809  0033F6  2414               	addwf	InitLCD@count,w,c
  8810  0033F8  6EF6               	movwf	tblptrl,c
  8811  0033FA  6AF7               	clrf	tblptrh,c
  8812  0033FC  0E10               	movlw	high _LCDInitStr_
  8813  0033FE  22F7               	addwfc	tblptrh,f,c
  8814  003400                     	if	1	;There are 3 active tblptr bytes
  8815  003400  6AF8               	clrf	tblptru,c
  8816  003402  0E00               	movlw	low (__mediumconst shr (0+16))
  8817  003404  22F8               	addwfc	tblptru,f,c
  8818  003406                     	endif
  8819  003406  0008               	tblrd		*
  8820  003408  50F5               	movf	tablat,w,c
  8821  00340A  0900               	iorlw	0
  8822  00340C  A4D8               	btfss	status,2,c
  8823  00340E  D7B8               	goto	l4501
  8824                           
  8825                           ;LCDroutinesEasyPic.c: 82:  LATBbits.LATB4 = 1;
  8826  003410  888A               	bsf	3978,4,c	;volatile
  8827  003412  0012               	return		;funcret
  8828  003414                     __end_of_InitLCD:
  8829                           	opt callstack 0
  8830                           
  8831 ;; *************** function _DisplayC *****************
  8832 ;; Defined at:
  8833 ;;		line 94 in file "LCDroutinesEasyPic.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  LCDStr          2   28[COMRAM] PTR const unsigned char 
  8836 ;;		 -> LCDRow1(10), voltage(10), temperature(10), 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;  temp           10   30[COMRAM] unsigned char [10]
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8851 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8852 ;;Total ram usage:       12 bytes
  8853 ;; Hardware stack levels used:    1
  8854 ;; Hardware stack levels required when called:    5
  8855 ;; This function calls:
  8856 ;;		_DisplayV
  8857 ;;		_strcpy
  8858 ;; This function is called by:
  8859 ;;		_main
  8860 ;;		_Initial
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text38
  8865  003E4A                     __ptext38:
  8866                           	opt callstack 0
  8867  003E4A                     _DisplayC:
  8868                           	opt callstack 24
  8869                           
  8870                           ;LCDroutinesEasyPic.c: 95:     char temp[10];;LCDroutinesEasyPic.c: 96:     strcpy(temp,
      +                          LCDStr);
  8871                           
  8872                           ;incstack = 0
  8873  003E4A  0E1F               	movlw	low DisplayC@temp
  8874  003E4C  6E13               	movwf	strcpy@dest,c
  8875  003E4E  0E00               	movlw	high DisplayC@temp
  8876  003E50  6E14               	movwf	strcpy@dest+1,c
  8877  003E52  C01D  F015         	movff	DisplayC@LCDStr,strcpy@src
  8878  003E56  C01E  F016         	movff	DisplayC@LCDStr+1,strcpy@src+1
  8879  003E5A  ECD1  F01D         	call	_strcpy	;wreg free
  8880                           
  8881                           ;LCDroutinesEasyPic.c: 97:     DisplayV(temp);
  8882  003E5E  0E1F               	movlw	low DisplayC@temp
  8883  003E60  6E13               	movwf	DisplayV@LCDStr,c
  8884  003E62  0E00               	movlw	high DisplayC@temp
  8885  003E64  6E14               	movwf	DisplayV@LCDStr+1,c
  8886  003E66  ECA5  F01A         	call	_DisplayV	;wreg free
  8887  003E6A  0012               	return		;funcret
  8888  003E6C                     __end_of_DisplayC:
  8889                           	opt callstack 0
  8890                           
  8891 ;; *************** function _strcpy *****************
  8892 ;; Defined at:
  8893 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  dest            2   18[COMRAM] PTR unsigned char 
  8896 ;;		 -> dbuf(80), DisplayC@temp(10), 
  8897 ;;  src             2   20[COMRAM] PTR const unsigned char 
  8898 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  8899 ;;		 -> dbuf(80), LCDRow1(10), voltage(10), temperature(10), 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;  d               2   26[COMRAM] PTR unsigned char 
  8902 ;;		 -> dbuf(80), DisplayC@temp(10), 
  8903 ;;  s               2   24[COMRAM] PTR const unsigned char 
  8904 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  8905 ;;		 -> dbuf(80), LCDRow1(10), voltage(10), temperature(10), 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  2   18[COMRAM] PTR unsigned char 
  8908 ;; Registers used:
  8909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8915 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8918 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;Total ram usage:       10 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    4
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_DisplayC
  8926 ;;		_efgtoa
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text39
  8931  003BA2                     __ptext39:
  8932                           	opt callstack 0
  8933  003BA2                     _strcpy:
  8934                           	opt callstack 21
  8935                           
  8936                           ;incstack = 0
  8937  003BA2  C015  F019         	movff	strcpy@src,strcpy@s
  8938  003BA6  C016  F01A         	movff	strcpy@src+1,strcpy@s+1
  8939  003BAA  C013  F01B         	movff	strcpy@dest,strcpy@d
  8940  003BAE  C014  F01C         	movff	strcpy@dest+1,strcpy@d+1
  8941  003BB2                     l5277:
  8942  003BB2  5019               	movf	strcpy@s,w,c
  8943  003BB4  6E17               	movwf	??_strcpy& (0+255),c
  8944  003BB6  501A               	movf	strcpy@s+1,w,c
  8945  003BB8  6E18               	movwf	(??_strcpy+1)& (0+255),c
  8946  003BBA  4A19               	infsnz	strcpy@s,f,c
  8947  003BBC  2A1A               	incf	strcpy@s+1,f,c
  8948  003BBE  C017  FFF6         	movff	??_strcpy,tblptrl
  8949  003BC2  C018  FFF7         	movff	??_strcpy+1,tblptrh
  8950  003BC6  0E00               	movlw	low (__smallconst shr (0+16))
  8951  003BC8  6EF8               	movwf	tblptru,c
  8952  003BCA  C01B  FFD9         	movff	strcpy@d,fsr2l
  8953  003BCE  C01C  FFDA         	movff	strcpy@d+1,fsr2h
  8954  003BD2  4A1B               	infsnz	strcpy@d,f,c
  8955  003BD4  2A1C               	incf	strcpy@d+1,f,c
  8956  003BD6  0E0F               	movlw	(high __ramtop+-1)
  8957  003BD8  64F7               	cpfsgt	tblptrh,c
  8958  003BDA  D003               	bra	u6307
  8959  003BDC  0008               	tblrd		*
  8960  003BDE  50F5               	movf	tablat,w,c
  8961  003BE0  D005               	bra	u6300
  8962  003BE2                     u6307:
  8963  003BE2  CFF6 FFE1          	movff	tblptrl,fsr1l
  8964  003BE6  CFF7 FFE2          	movff	tblptrh,fsr1h
  8965  003BEA  50E7               	movf	indf1,w,c
  8966  003BEC                     u6300:
  8967  003BEC  6EDF               	movwf	indf2,c
  8968  003BEE  50DF               	movf	indf2,w,c
  8969  003BF0  B4D8               	btfsc	status,2,c
  8970  003BF2  0012               	return	
  8971  003BF4  D7DE               	goto	l5277
  8972  003BF6                     __end_of_strcpy:
  8973                           	opt callstack 0
  8974                           
  8975 ;; *************** function _DisplayV *****************
  8976 ;; Defined at:
  8977 ;;		line 110 in file "LCDroutinesEasyPic.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  LCDStr          2   18[COMRAM] PTR const unsigned char 
  8980 ;;		 -> DisplayC@temp(10), 
  8981 ;; Auto vars:     Size  Location     Type
  8982 ;;  count           1   21[COMRAM] unsigned char 
  8983 ;;  nibble          1   20[COMRAM] unsigned char 
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8993 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;Total ram usage:        4 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    4
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_DisplayC
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text40
  9008  00354A                     __ptext40:
  9009                           	opt callstack 0
  9010  00354A                     _DisplayV:
  9011                           	opt callstack 24
  9012                           
  9013                           ;LCDroutinesEasyPic.c: 111:     unsigned char count = 0;
  9014                           
  9015                           ;incstack = 0
  9016  00354A  0E00               	movlw	0
  9017  00354C  6E16               	movwf	DisplayV@count,c
  9018                           
  9019                           ;LCDroutinesEasyPic.c: 114:     while(LCDStr[count] != 0x00) {
  9020  00354E  D03B               	goto	l26
  9021  003550                     l27:
  9022                           
  9023                           ;LCDroutinesEasyPic.c: 116:         LATBbits.LATB5 = 0;
  9024  003550  9A8A               	bcf	3978,5,c	;volatile
  9025                           
  9026                           ;LCDroutinesEasyPic.c: 117:         LATB = PORTB & 0b11000000;
  9027  003552  5081               	movf	3969,w,c	;volatile
  9028  003554  0BC0               	andlw	192
  9029  003556  6E8A               	movwf	3978,c	;volatile
  9030                           
  9031                           ;LCDroutinesEasyPic.c: 118:         if(count==0){
  9032  003558  5016               	movf	DisplayV@count,w,c
  9033  00355A  A4D8               	btfss	status,2,c
  9034  00355C  D002               	goto	l28
  9035                           
  9036                           ;LCDroutinesEasyPic.c: 119:             LATBbits.LATB4 = 0;
  9037  00355E  988A               	bcf	3978,4,c	;volatile
  9038                           
  9039                           ;LCDroutinesEasyPic.c: 120:         }
  9040  003560  D001               	goto	l29
  9041  003562                     l28:
  9042                           
  9043                           ;LCDroutinesEasyPic.c: 122:             LATBbits.LATB4 = 1;
  9044  003562  888A               	bsf	3978,4,c	;volatile
  9045  003564                     l29:
  9046                           
  9047                           ;LCDroutinesEasyPic.c: 124:         LATBbits.LATB5 = 1;
  9048  003564  8A8A               	bsf	3978,5,c	;volatile
  9049                           
  9050                           ;LCDroutinesEasyPic.c: 125:         nibble = 0xF0 & LCDStr[count];
  9051  003566  5016               	movf	DisplayV@count,w,c
  9052  003568  2413               	addwf	DisplayV@LCDStr,w,c
  9053  00356A  6ED9               	movwf	fsr2l,c
  9054  00356C  0E00               	movlw	0
  9055  00356E  2014               	addwfc	DisplayV@LCDStr+1,w,c
  9056  003570  6EDA               	movwf	fsr2h,c
  9057  003572  50DF               	movf	indf2,w,c
  9058  003574  0BF0               	andlw	240
  9059  003576  6E15               	movwf	DisplayV@nibble,c
  9060                           
  9061                           ;LCDroutinesEasyPic.c: 126:         nibble = nibble >> 4;
  9062  003578  3815               	swapf	DisplayV@nibble,w,c
  9063  00357A  0B0F               	andlw	15
  9064  00357C  6E15               	movwf	DisplayV@nibble,c
  9065                           
  9066                           ;LCDroutinesEasyPic.c: 127:         LATB = nibble | PORTB;
  9067  00357E  5015               	movf	DisplayV@nibble,w,c
  9068  003580  1081               	iorwf	3969,w,c	;volatile
  9069  003582  6E8A               	movwf	3978,c	;volatile
  9070                           
  9071                           ;LCDroutinesEasyPic.c: 128:         LATBbits.LATB5 = 0;
  9072  003584  9A8A               	bcf	3978,5,c	;volatile
  9073                           
  9074                           ;LCDroutinesEasyPic.c: 129:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  9075  003586  0E42               	movlw	66
  9076  003588                     u8247:
  9077  003588  2EE8               	decfsz	wreg,f,c
  9078  00358A  D7FE               	bra	u8247
  9079  00358C  D000               	nop2	
  9080                           
  9081                           ;LCDroutinesEasyPic.c: 132:         LATB = PORTB & 0b11000000;
  9082  00358E  5081               	movf	3969,w,c	;volatile
  9083  003590  0BC0               	andlw	192
  9084  003592  6E8A               	movwf	3978,c	;volatile
  9085                           
  9086                           ;LCDroutinesEasyPic.c: 133:         if(count==0){
  9087  003594  5016               	movf	DisplayV@count,w,c
  9088  003596  A4D8               	btfss	status,2,c
  9089  003598  D002               	goto	l30
  9090                           
  9091                           ;LCDroutinesEasyPic.c: 134:             LATBbits.LATB4 = 0;
  9092  00359A  988A               	bcf	3978,4,c	;volatile
  9093                           
  9094                           ;LCDroutinesEasyPic.c: 135:         }
  9095  00359C  D001               	goto	l31
  9096  00359E                     l30:
  9097                           
  9098                           ;LCDroutinesEasyPic.c: 137:             LATBbits.LATB4 = 1;
  9099  00359E  888A               	bsf	3978,4,c	;volatile
  9100  0035A0                     l31:
  9101                           
  9102                           ;LCDroutinesEasyPic.c: 139:         LATBbits.LATB5 = 1;
  9103  0035A0  8A8A               	bsf	3978,5,c	;volatile
  9104                           
  9105                           ;LCDroutinesEasyPic.c: 140:         nibble = 0x0F & LCDStr[count];
  9106  0035A2  5016               	movf	DisplayV@count,w,c
  9107  0035A4  2413               	addwf	DisplayV@LCDStr,w,c
  9108  0035A6  6ED9               	movwf	fsr2l,c
  9109  0035A8  0E00               	movlw	0
  9110  0035AA  2014               	addwfc	DisplayV@LCDStr+1,w,c
  9111  0035AC  6EDA               	movwf	fsr2h,c
  9112  0035AE  50DF               	movf	indf2,w,c
  9113  0035B0  0B0F               	andlw	15
  9114  0035B2  6E15               	movwf	DisplayV@nibble,c
  9115                           
  9116                           ;LCDroutinesEasyPic.c: 141:         LATB = nibble | PORTB;
  9117  0035B4  5015               	movf	DisplayV@nibble,w,c
  9118  0035B6  1081               	iorwf	3969,w,c	;volatile
  9119  0035B8  6E8A               	movwf	3978,c	;volatile
  9120                           
  9121                           ;LCDroutinesEasyPic.c: 142:         LATBbits.LATB5 = 0;
  9122  0035BA  9A8A               	bcf	3978,5,c	;volatile
  9123                           
  9124                           ;LCDroutinesEasyPic.c: 143:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  9125  0035BC  0E42               	movlw	66
  9126  0035BE                     u8257:
  9127  0035BE  2EE8               	decfsz	wreg,f,c
  9128  0035C0  D7FE               	bra	u8257
  9129  0035C2  D000               	nop2	
  9130                           
  9131                           ;LCDroutinesEasyPic.c: 146:         count++;
  9132  0035C4  2A16               	incf	DisplayV@count,f,c
  9133  0035C6                     l26:
  9134                           
  9135                           ;LCDroutinesEasyPic.c: 114:     while(LCDStr[count] != 0x00) {
  9136  0035C6  5016               	movf	DisplayV@count,w,c
  9137  0035C8  2413               	addwf	DisplayV@LCDStr,w,c
  9138  0035CA  6ED9               	movwf	fsr2l,c
  9139  0035CC  0E00               	movlw	0
  9140  0035CE  2014               	addwfc	DisplayV@LCDStr+1,w,c
  9141  0035D0  6EDA               	movwf	fsr2h,c
  9142  0035D2  50DF               	movf	indf2,w,c
  9143  0035D4  B4D8               	btfsc	status,2,c
  9144  0035D6  0012               	return	
  9145  0035D8  D7BB               	goto	l27
  9146  0035DA                     __end_of_DisplayV:
  9147                           	opt callstack 0
  9148                           
  9149 ;; *************** function _LoPriISR *****************
  9150 ;; Defined at:
  9151 ;;		line 306 in file "Trozinski_Herrin_Lab6.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;		None
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;		None
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      void 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;Total ram usage:        5 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    3
  9172 ;; This function calls:
  9173 ;;		_SPItransmission
  9174 ;;		_TMR0handler
  9175 ;;		_receive
  9176 ;; This function is called by:
  9177 ;;		Interrupt level 1
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	intcodelo
  9182  000018                     __pintcodelo:
  9183                           	opt callstack 0
  9184  000018                     _LoPriISR:
  9185                           	opt callstack 18
  9186                           
  9187                           ;incstack = 0
  9188  000018  804C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  9189  00001A  CFD8 F00E          	movff	status,??_LoPriISR
  9190  00001E  CFE8 F00F          	movff	wreg,??_LoPriISR+1
  9191  000022  CFE0 F010          	movff	bsr,??_LoPriISR+2
  9192  000026  CFD9 F011          	movff	fsr2l,??_LoPriISR+3
  9193  00002A  CFDA F012          	movff	fsr2h,??_LoPriISR+4
  9194                           
  9195                           ;Trozinski_Herrin_Lab6.c: 309:     wregtemp = WREG;
  9196  00002E  CFE8 F0EA          	movff	wreg,_wregtemp	;volatile
  9197  000032  0100               	movlb	0	; () banked
  9198  000034  6BEB               	clrf	(_wregtemp+1)& (0+255),b
  9199  000036                     i1l249:
  9200                           
  9201                           ;Trozinski_Herrin_Lab6.c: 311:         if( INTCONbits.TMR0IF ) {
  9202  000036  A4F2               	btfss	4082,2,c	;volatile
  9203  000038  D003               	goto	i1l250
  9204                           
  9205                           ;Trozinski_Herrin_Lab6.c: 312:             TMR0handler();
  9206  00003A  EC9D  F01E         	call	_TMR0handler	;wreg free
  9207                           
  9208                           ;Trozinski_Herrin_Lab6.c: 313:             continue;
  9209  00003E  D7FB               	goto	i1l249
  9210  000040                     i1l250:
  9211                           
  9212                           ;Trozinski_Herrin_Lab6.c: 315:         if(PIR1bits.RC1IF ) {
  9213  000040  AA9E               	btfss	3998,5,c	;volatile
  9214  000042  D004               	goto	i1l252
  9215                           
  9216                           ;Trozinski_Herrin_Lab6.c: 317:             receive();
  9217  000044  ECF5  F01B         	call	_receive	;wreg free
  9218                           
  9219                           ;Trozinski_Herrin_Lab6.c: 318:             PIR1bits.RC1IF = 0b0;
  9220  000048  9A9E               	bcf	3998,5,c	;volatile
  9221                           
  9222                           ;Trozinski_Herrin_Lab6.c: 319:             continue;
  9223  00004A  D7F5               	goto	i1l249
  9224  00004C                     i1l252:
  9225                           
  9226                           ;Trozinski_Herrin_Lab6.c: 321:         if(PIR1bits.TMR1IF){
  9227  00004C  A09E               	btfss	3998,0,c	;volatile
  9228  00004E  D008               	goto	i1l4975
  9229                           
  9230                           ;Trozinski_Herrin_Lab6.c: 323:             SPItransmission();
  9231  000050  ECB6  F01B         	call	_SPItransmission	;wreg free
  9232                           
  9233                           ;Trozinski_Herrin_Lab6.c: 324:             PIR1bits.TMR1IF = 0;
  9234  000054  909E               	bcf	3998,0,c	;volatile
  9235                           
  9236                           ;Trozinski_Herrin_Lab6.c: 325:             TMR1 = 63692;
  9237  000056  0EF8               	movlw	248
  9238  000058  6ECF               	movwf	4047,c	;volatile
  9239  00005A  0ECC               	movlw	204
  9240  00005C  6ECE               	movwf	4046,c	;volatile
  9241                           
  9242                           ;Trozinski_Herrin_Lab6.c: 326:             continue;
  9243  00005E  D7EB               	goto	i1l249
  9244  000060                     i1l4975:
  9245                           
  9246                           ;Trozinski_Herrin_Lab6.c: 331:             WREG = wregtemp;
  9247  000060  0100               	movlb	0	; () banked
  9248  000062  51EA               	movf	_wregtemp& (0+255),w,b
  9249                           
  9250                           ; BSR set to: 0
  9251                           
  9252                           ;Trozinski_Herrin_Lab6.c: 332:         break;
  9253  000064  C012  FFDA         	movff	??_LoPriISR+4,fsr2h
  9254  000068  C011  FFD9         	movff	??_LoPriISR+3,fsr2l
  9255  00006C  C010  FFE0         	movff	??_LoPriISR+2,bsr
  9256  000070  C00F  FFE8         	movff	??_LoPriISR+1,wreg
  9257  000074  C00E  FFD8         	movff	??_LoPriISR,status
  9258  000078  904C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  9259  00007A  0010               	retfie	
  9260  00007C                     __end_of_LoPriISR:
  9261                           	opt callstack 0
  9262                           
  9263 ;; *************** function _receive *****************
  9264 ;; Defined at:
  9265 ;;		line 522 in file "Trozinski_Herrin_Lab6.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;Total ram usage:        1 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    2
  9286 ;; This function calls:
  9287 ;;		i1_memset
  9288 ;; This function is called by:
  9289 ;;		_LoPriISR
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text42
  9294  0037EA                     __ptext42:
  9295                           	opt callstack 0
  9296  0037EA                     _receive:
  9297                           	opt callstack 18
  9298                           
  9299                           ;Trozinski_Herrin_Lab6.c: 525:     if( commandready > 0){
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;incstack = 0
  9303  0037EA  0100               	movlb	0	; () banked
  9304  0037EC  51E4               	movf	_commandready& (0+255),w,b
  9305  0037EE  11E5               	iorwf	(_commandready+1)& (0+255),w,b
  9306  0037F0  B4D8               	btfsc	status,2,c
  9307  0037F2  D012               	goto	i1l4903
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;Trozinski_Herrin_Lab6.c: 526:         commandready = 0;
  9311  0037F4  0E00               	movlw	0
  9312  0037F6  6FE5               	movwf	(_commandready+1)& (0+255),b
  9313  0037F8  0E00               	movlw	0
  9314  0037FA  6FE4               	movwf	_commandready& (0+255),b
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;Trozinski_Herrin_Lab6.c: 528:         memset(RBuffer, 0, sizeof(RBuffer));
  9318  0037FC  0E68               	movlw	low _RBuffer
  9319  0037FE  6E01               	movwf	i1memset@dest,c
  9320  003800  0E01               	movlw	high _RBuffer
  9321  003802  6E02               	movwf	i1memset@dest+1,c
  9322  003804  0E00               	movlw	0
  9323  003806  6E04               	movwf	i1memset@c+1,c
  9324  003808  0E00               	movlw	0
  9325  00380A  6E03               	movwf	i1memset@c,c
  9326  00380C  0E00               	movlw	0
  9327  00380E  6E06               	movwf	i1memset@n+1,c
  9328  003810  0E14               	movlw	20
  9329  003812  6E05               	movwf	i1memset@n,c
  9330  003814  EC18  F017         	call	i1_memset	;wreg free
  9331  003818                     i1l4903:
  9332                           
  9333                           ;Trozinski_Herrin_Lab6.c: 530:     if( RCSTA1bits.FERR == 1){
  9334  003818  A4AB               	btfss	4011,2,c	;volatile
  9335  00381A  D003               	goto	i1l316
  9336                           
  9337                           ;Trozinski_Herrin_Lab6.c: 531:         throwout = RCREG1;
  9338  00381C  CFAE F048          	movff	4014,_throwout	;volatile
  9339                           
  9340                           ;Trozinski_Herrin_Lab6.c: 532:         return;
  9341  003820  0012               	return	
  9342  003822                     i1l316:
  9343                           
  9344                           ;Trozinski_Herrin_Lab6.c: 534:     if( RCSTA1bits.OERR == 1){
  9345  003822  A2AB               	btfss	4011,1,c	;volatile
  9346  003824  D003               	goto	i1l4909
  9347                           
  9348                           ;Trozinski_Herrin_Lab6.c: 535:         RCSTA1bits.CREN = 0;
  9349  003826  98AB               	bcf	4011,4,c	;volatile
  9350                           
  9351                           ;Trozinski_Herrin_Lab6.c: 536:         RCSTA1bits.CREN = 1;
  9352  003828  88AB               	bsf	4011,4,c	;volatile
  9353                           
  9354                           ;Trozinski_Herrin_Lab6.c: 537:         return;
  9355  00382A  0012               	return	
  9356  00382C                     i1l4909:
  9357                           
  9358                           ;Trozinski_Herrin_Lab6.c: 540:     RBuffer[bcount] = RCREG1;
  9359  00382C  0E68               	movlw	low _RBuffer
  9360  00382E  0100               	movlb	0	; () banked
  9361  003830  25E6               	addwf	_bcount& (0+255),w,b
  9362  003832  6ED9               	movwf	fsr2l,c
  9363  003834  0E01               	movlw	high _RBuffer
  9364  003836  21E7               	addwfc	(_bcount+1)& (0+255),w,b
  9365  003838  6EDA               	movwf	fsr2h,c
  9366  00383A  CFAE FFDF          	movff	4014,indf2	;volatile
  9367                           
  9368                           ;Trozinski_Herrin_Lab6.c: 541:     if(RBuffer[bcount] == 0x0A){
  9369  00383E  0E68               	movlw	low _RBuffer
  9370  003840  25E6               	addwf	_bcount& (0+255),w,b
  9371  003842  6ED9               	movwf	fsr2l,c
  9372  003844  0E01               	movlw	high _RBuffer
  9373  003846  21E7               	addwfc	(_bcount+1)& (0+255),w,b
  9374  003848  6EDA               	movwf	fsr2h,c
  9375  00384A  0E0A               	movlw	10
  9376  00384C  18DE               	xorwf	postinc2,w,c
  9377  00384E  A4D8               	btfss	status,2,c
  9378  003850  D007               	goto	i1l4915
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;Trozinski_Herrin_Lab6.c: 543:         bcount = 0;
  9382  003852  0E00               	movlw	0
  9383  003854  6FE7               	movwf	(_bcount+1)& (0+255),b
  9384  003856  0E00               	movlw	0
  9385  003858  6FE6               	movwf	_bcount& (0+255),b
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;Trozinski_Herrin_Lab6.c: 544:         commandready++;
  9389  00385A  4BE4               	infsnz	_commandready& (0+255),f,b
  9390  00385C  2BE5               	incf	(_commandready+1)& (0+255),f,b
  9391                           
  9392                           ;Trozinski_Herrin_Lab6.c: 545:     }
  9393  00385E  0012               	return	
  9394  003860                     i1l4915:
  9395                           
  9396                           ; BSR set to: 0
  9397                           ;Trozinski_Herrin_Lab6.c: 547:         bcount ++;
  9398  003860  4BE6               	infsnz	_bcount& (0+255),f,b
  9399  003862  2BE7               	incf	(_bcount+1)& (0+255),f,b
  9400  003864  0012               	return		;funcret
  9401  003866                     __end_of_receive:
  9402                           	opt callstack 0
  9403                           
  9404 ;; *************** function i1_memset *****************
  9405 ;; Defined at:
  9406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;  dest            2    0[COMRAM] PTR void 
  9409 ;;		 -> RBuffer(20), TBuffer(20), 
  9410 ;;  c               2    2[COMRAM] int 
  9411 ;;  n               2    4[COMRAM] unsigned int 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  memset          2   10[COMRAM] PTR unsigned char 
  9414 ;;		 -> RBuffer(20), TBuffer(20), 
  9415 ;;  memset          2    8[COMRAM] unsigned int 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  2    0[COMRAM] PTR void 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9425 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9426 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;Total ram usage:       12 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    1
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_receive
  9436 ;; This function uses a non-reentrant model
  9437 ;;
  9438                           
  9439                           	psect	text43
  9440  002E30                     __ptext43:
  9441                           	opt callstack 0
  9442  002E30                     i1_memset:
  9443                           	opt callstack 18
  9444                           
  9445                           ;incstack = 0
  9446  002E30  C001  F00B         	movff	i1memset@dest,i1memset@s
  9447  002E34  C002  F00C         	movff	i1memset@dest+1,i1memset@s+1
  9448  002E38  5005               	movf	i1memset@n,w,c
  9449  002E3A  1006               	iorwf	i1memset@n+1,w,c
  9450  002E3C  B4D8               	btfsc	status,2,c
  9451  002E3E  0012               	return	
  9452  002E40  C00B  FFD9         	movff	i1memset@s,fsr2l
  9453  002E44  C00C  FFDA         	movff	i1memset@s+1,fsr2h
  9454  002E48  C003  FFDF         	movff	i1memset@c,indf2
  9455  002E4C  5005               	movf	i1memset@n,w,c
  9456  002E4E  240B               	addwf	i1memset@s,w,c
  9457  002E50  6E07               	movwf	??i1_memset& (0+255),c
  9458  002E52  5006               	movf	i1memset@n+1,w,c
  9459  002E54  200C               	addwfc	i1memset@s+1,w,c
  9460  002E56  6E08               	movwf	(??i1_memset+1)& (0+255),c
  9461  002E58  0EFF               	movlw	255
  9462  002E5A  2407               	addwf	??i1_memset,w,c
  9463  002E5C  6ED9               	movwf	fsr2l,c
  9464  002E5E  0EFF               	movlw	255
  9465  002E60  2008               	addwfc	??i1_memset+1,w,c
  9466  002E62  6EDA               	movwf	fsr2h,c
  9467  002E64  C003  FFDF         	movff	i1memset@c,indf2
  9468  002E68  5006               	movf	i1memset@n+1,w,c
  9469  002E6A  E104               	bnz	i1l4677
  9470  002E6C  0E03               	movlw	3
  9471  002E6E  5C05               	subwf	i1memset@n,w,c
  9472  002E70  A0D8               	btfss	status,0,c
  9473  002E72  0012               	return	
  9474  002E74                     i1l4677:
  9475  002E74  EE20 F001          	lfsr	2,1
  9476  002E78  500B               	movf	i1memset@s,w,c
  9477  002E7A  26D9               	addwf	fsr2l,f,c
  9478  002E7C  500C               	movf	i1memset@s+1,w,c
  9479  002E7E  22DA               	addwfc	fsr2h,f,c
  9480  002E80  C003  FFDF         	movff	i1memset@c,indf2
  9481  002E84  EE20 F002          	lfsr	2,2
  9482  002E88  500B               	movf	i1memset@s,w,c
  9483  002E8A  26D9               	addwf	fsr2l,f,c
  9484  002E8C  500C               	movf	i1memset@s+1,w,c
  9485  002E8E  22DA               	addwfc	fsr2h,f,c
  9486  002E90  C003  FFDF         	movff	i1memset@c,indf2
  9487  002E94  5005               	movf	i1memset@n,w,c
  9488  002E96  240B               	addwf	i1memset@s,w,c
  9489  002E98  6E07               	movwf	??i1_memset& (0+255),c
  9490  002E9A  5006               	movf	i1memset@n+1,w,c
  9491  002E9C  200C               	addwfc	i1memset@s+1,w,c
  9492  002E9E  6E08               	movwf	(??i1_memset+1)& (0+255),c
  9493  002EA0  0EFE               	movlw	254
  9494  002EA2  2407               	addwf	??i1_memset,w,c
  9495  002EA4  6ED9               	movwf	fsr2l,c
  9496  002EA6  0EFF               	movlw	255
  9497  002EA8  2008               	addwfc	??i1_memset+1,w,c
  9498  002EAA  6EDA               	movwf	fsr2h,c
  9499  002EAC  C003  FFDF         	movff	i1memset@c,indf2
  9500  002EB0  5005               	movf	i1memset@n,w,c
  9501  002EB2  240B               	addwf	i1memset@s,w,c
  9502  002EB4  6E07               	movwf	??i1_memset& (0+255),c
  9503  002EB6  5006               	movf	i1memset@n+1,w,c
  9504  002EB8  200C               	addwfc	i1memset@s+1,w,c
  9505  002EBA  6E08               	movwf	(??i1_memset+1)& (0+255),c
  9506  002EBC  0EFD               	movlw	253
  9507  002EBE  2407               	addwf	??i1_memset,w,c
  9508  002EC0  6ED9               	movwf	fsr2l,c
  9509  002EC2  0EFF               	movlw	255
  9510  002EC4  2008               	addwfc	??i1_memset+1,w,c
  9511  002EC6  6EDA               	movwf	fsr2h,c
  9512  002EC8  C003  FFDF         	movff	i1memset@c,indf2
  9513  002ECC  5006               	movf	i1memset@n+1,w,c
  9514  002ECE  E104               	bnz	i1l4683
  9515  002ED0  0E07               	movlw	7
  9516  002ED2  5C05               	subwf	i1memset@n,w,c
  9517  002ED4  A0D8               	btfss	status,0,c
  9518  002ED6  0012               	return	
  9519  002ED8                     i1l4683:
  9520  002ED8  EE20 F003          	lfsr	2,3
  9521  002EDC  500B               	movf	i1memset@s,w,c
  9522  002EDE  26D9               	addwf	fsr2l,f,c
  9523  002EE0  500C               	movf	i1memset@s+1,w,c
  9524  002EE2  22DA               	addwfc	fsr2h,f,c
  9525  002EE4  C003  FFDF         	movff	i1memset@c,indf2
  9526  002EE8  5005               	movf	i1memset@n,w,c
  9527  002EEA  240B               	addwf	i1memset@s,w,c
  9528  002EEC  6E07               	movwf	??i1_memset& (0+255),c
  9529  002EEE  5006               	movf	i1memset@n+1,w,c
  9530  002EF0  200C               	addwfc	i1memset@s+1,w,c
  9531  002EF2  6E08               	movwf	(??i1_memset+1)& (0+255),c
  9532  002EF4  0EFC               	movlw	252
  9533  002EF6  2407               	addwf	??i1_memset,w,c
  9534  002EF8  6ED9               	movwf	fsr2l,c
  9535  002EFA  0EFF               	movlw	255
  9536  002EFC  2008               	addwfc	??i1_memset+1,w,c
  9537  002EFE  6EDA               	movwf	fsr2h,c
  9538  002F00  C003  FFDF         	movff	i1memset@c,indf2
  9539  002F04  5006               	movf	i1memset@n+1,w,c
  9540  002F06  E104               	bnz	i1l4689
  9541  002F08  0E09               	movlw	9
  9542  002F0A  5C05               	subwf	i1memset@n,w,c
  9543  002F0C  A0D8               	btfss	status,0,c
  9544  002F0E  0012               	return	
  9545  002F10                     i1l4689:
  9546  002F10  C00B  F007         	movff	i1memset@s,??i1_memset
  9547  002F14  C00C  F008         	movff	i1memset@s+1,??i1_memset+1
  9548  002F18  1E07               	comf	??i1_memset,f,c
  9549  002F1A  1E08               	comf	??i1_memset+1,f,c
  9550  002F1C  4A07               	infsnz	??i1_memset,f,c
  9551  002F1E  2A08               	incf	??i1_memset+1,f,c
  9552  002F20  0E03               	movlw	3
  9553  002F22  1407               	andwf	??i1_memset,w,c
  9554  002F24  6E09               	movwf	i1memset@k,c
  9555  002F26  6A0A               	clrf	i1memset@k+1,c
  9556  002F28  5009               	movf	i1memset@k,w,c
  9557  002F2A  260B               	addwf	i1memset@s,f,c
  9558  002F2C  500A               	movf	i1memset@k+1,w,c
  9559  002F2E  220C               	addwfc	i1memset@s+1,f,c
  9560  002F30  5009               	movf	i1memset@k,w,c
  9561  002F32  5E05               	subwf	i1memset@n,f,c
  9562  002F34  500A               	movf	i1memset@k+1,w,c
  9563  002F36  5A06               	subwfb	i1memset@n+1,f,c
  9564  002F38  0EFC               	movlw	252
  9565  002F3A  1605               	andwf	i1memset@n,f,c
  9566  002F3C  0EFF               	movlw	255
  9567  002F3E  1606               	andwf	i1memset@n+1,f,c
  9568  002F40  D00B               	goto	i1l4697
  9569  002F42                     i1l4691:
  9570  002F42  C00B  FFD9         	movff	i1memset@s,fsr2l
  9571  002F46  C00C  FFDA         	movff	i1memset@s+1,fsr2h
  9572  002F4A  C003  FFDF         	movff	i1memset@c,indf2
  9573  002F4E  0605               	decf	i1memset@n,f,c
  9574  002F50  A0D8               	btfss	status,0,c
  9575  002F52  0606               	decf	i1memset@n+1,f,c
  9576  002F54  4A0B               	infsnz	i1memset@s,f,c
  9577  002F56  2A0C               	incf	i1memset@s+1,f,c
  9578  002F58                     i1l4697:
  9579  002F58  5005               	movf	i1memset@n,w,c
  9580  002F5A  1006               	iorwf	i1memset@n+1,w,c
  9581  002F5C  B4D8               	btfsc	status,2,c
  9582  002F5E  0012               	return	
  9583  002F60  D7F0               	goto	i1l4691
  9584  002F62                     __end_ofi1_memset:
  9585                           	opt callstack 0
  9586                           
  9587 ;; *************** function _TMR0handler *****************
  9588 ;; Defined at:
  9589 ;;		line 342 in file "Trozinski_Herrin_Lab6.c"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;		None
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;		None
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0, cstack
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;Total ram usage:        0 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:    2
  9610 ;; This function calls:
  9611 ;;		_LEDhandler
  9612 ;; This function is called by:
  9613 ;;		_LoPriISR
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text44
  9618  003D3A                     __ptext44:
  9619                           	opt callstack 0
  9620  003D3A                     _TMR0handler:
  9621                           	opt callstack 18
  9622                           
  9623                           ;Trozinski_Herrin_Lab6.c: 343:     LEDhandler();
  9624                           
  9625                           ;incstack = 0
  9626  003D3A  ECA7  F01C         	call	_LEDhandler	;wreg free
  9627                           
  9628                           ;Trozinski_Herrin_Lab6.c: 344:     if( !LATDbits.LATD4){
  9629  003D3E  B88C               	btfsc	3980,4,c	;volatile
  9630  003D40  D00E               	goto	i1l258
  9631                           
  9632                           ;Trozinski_Herrin_Lab6.c: 345:         TMR0L = ONcount&0xFF;
  9633  003D42  C042  FFD6         	movff	_ONcount,4054	;volatile
  9634                           
  9635                           ;Trozinski_Herrin_Lab6.c: 346:         TMR0H = (ONcount>>8)&0xFF;
  9636  003D46  5043               	movf	_ONcount+1,w,c
  9637  003D48  6ED7               	movwf	4055,c	;volatile
  9638                           
  9639                           ;Trozinski_Herrin_Lab6.c: 347:         if(continuousMode == 1){
  9640  003D4A  0100               	movlb	0	; () banked
  9641  003D4C  05E2               	decf	_continuousMode& (0+255),w,b
  9642  003D4E  11E3               	iorwf	(_continuousMode+1)& (0+255),w,b
  9643  003D50  A4D8               	btfss	status,2,c
  9644  003D52  D00A               	goto	i1l4895
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;Trozinski_Herrin_Lab6.c: 348:             transmittime = 1;
  9648  003D54  0E00               	movlw	0
  9649  003D56  6FE1               	movwf	(_transmittime+1)& (0+255),b
  9650  003D58  0E01               	movlw	1
  9651  003D5A  6FE0               	movwf	_transmittime& (0+255),b
  9652  003D5C  D005               	goto	i1l4895
  9653  003D5E                     i1l258:
  9654                           
  9655                           ;Trozinski_Herrin_Lab6.c: 352:         TMR0L = OFFcount&0xFF;
  9656  003D5E  C0EE  FFD6         	movff	_OFFcount,4054	;volatile
  9657                           
  9658                           ;Trozinski_Herrin_Lab6.c: 353:         TMR0H = (OFFcount>>8)&0xFF;
  9659  003D62  0100               	movlb	0	; () banked
  9660  003D64  51EF               	movf	(_OFFcount+1)& (0+255),w,b
  9661  003D66  6ED7               	movwf	4055,c	;volatile
  9662  003D68                     i1l4895:
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;Trozinski_Herrin_Lab6.c: 355:     INTCONbits.TMR0IF = 0;
  9666  003D68  94F2               	bcf	4082,2,c	;volatile
  9667                           
  9668                           ; BSR set to: 0
  9669  003D6A  0012               	return		;funcret
  9670  003D6C                     __end_of_TMR0handler:
  9671                           	opt callstack 0
  9672                           
  9673 ;; *************** function _LEDhandler *****************
  9674 ;; Defined at:
  9675 ;;		line 404 in file "Trozinski_Herrin_Lab6.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;		None
  9678 ;; Auto vars:     Size  Location     Type
  9679 ;;		None
  9680 ;; Return value:  Size  Location     Type
  9681 ;;                  1    wreg      void 
  9682 ;; Registers used:
  9683 ;;		wreg, status,2, status,0
  9684 ;; Tracked objects:
  9685 ;;		On entry : 0/0
  9686 ;;		On exit  : 0/0
  9687 ;;		Unchanged: 0/0
  9688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9693 ;;Total ram usage:        1 bytes
  9694 ;; Hardware stack levels used:    1
  9695 ;; Hardware stack levels required when called:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_TMR0handler
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           	psect	text45
  9704  00394E                     __ptext45:
  9705                           	opt callstack 0
  9706  00394E                     _LEDhandler:
  9707                           	opt callstack 18
  9708                           
  9709                           ;Trozinski_Herrin_Lab6.c: 405:     if ( LEDcount > 3){
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;incstack = 0
  9713  00394E  5041               	movf	_LEDcount+1,w,c
  9714  003950  E104               	bnz	i1u524_20
  9715  003952  0E04               	movlw	4
  9716  003954  5C40               	subwf	_LEDcount,w,c
  9717  003956  A0D8               	btfss	status,0,c
  9718  003958  D00E               	goto	i1l4539
  9719  00395A                     i1u524_20:
  9720                           
  9721                           ;Trozinski_Herrin_Lab6.c: 406:         LATDbits.LATD4 = ~LATDbits.LATD4;
  9722  00395A  A88C               	btfss	3980,4,c	;volatile
  9723  00395C  D002               	goto	i1u525_20
  9724  00395E  0E01               	movlw	1
  9725  003960  D001               	goto	i1u525_26
  9726  003962                     i1u525_20:
  9727  003962  0E00               	movlw	0
  9728  003964                     i1u525_26:
  9729  003964  0AFF               	xorlw	255
  9730  003966  6E01               	movwf	??_LEDhandler& (0+255),c
  9731  003968  3A01               	swapf	??_LEDhandler,f,c
  9732  00396A  508C               	movf	3980,w,c	;volatile
  9733  00396C  1801               	xorwf	??_LEDhandler,w,c
  9734  00396E  0BEF               	andlw	-17
  9735  003970  1801               	xorwf	??_LEDhandler,w,c
  9736  003972  6E8C               	movwf	3980,c	;volatile
  9737                           
  9738                           ;Trozinski_Herrin_Lab6.c: 407:     }
  9739  003974  0012               	return	
  9740  003976                     i1l4539:
  9741  003976  0E03               	movlw	3
  9742  003978  1840               	xorwf	_LEDcount,w,c
  9743  00397A  1041               	iorwf	_LEDcount+1,w,c
  9744  00397C  A4D8               	btfss	status,2,c
  9745  00397E  D007               	goto	i1l4543
  9746                           
  9747                           ;Trozinski_Herrin_Lab6.c: 409:         LATD = 0b00010000;
  9748  003980  0E10               	movlw	16
  9749  003982  6E8C               	movwf	3980,c	;volatile
  9750                           
  9751                           ;Trozinski_Herrin_Lab6.c: 410:         LEDcount = 7;
  9752  003984  0E00               	movlw	0
  9753  003986  6E41               	movwf	_LEDcount+1,c
  9754  003988  0E07               	movlw	7
  9755  00398A  6E40               	movwf	_LEDcount,c
  9756                           
  9757                           ;Trozinski_Herrin_Lab6.c: 411:     }
  9758  00398C  0012               	return	
  9759  00398E                     i1l4543:
  9760  00398E  0E02               	movlw	2
  9761  003990  1840               	xorwf	_LEDcount,w,c
  9762  003992  1041               	iorwf	_LEDcount+1,w,c
  9763  003994  A4D8               	btfss	status,2,c
  9764  003996  D005               	goto	i1l4549
  9765                           
  9766                           ;Trozinski_Herrin_Lab6.c: 413:         LATD = 0b10000000;
  9767  003998  0E80               	movlw	128
  9768  00399A                     L13:
  9769  00399A  6E8C               	movwf	3980,c	;volatile
  9770                           
  9771                           ;Trozinski_Herrin_Lab6.c: 414:         LEDcount++;
  9772  00399C  4A40               	infsnz	_LEDcount,f,c
  9773  00399E  2A41               	incf	_LEDcount+1,f,c
  9774                           
  9775                           ;Trozinski_Herrin_Lab6.c: 415:     }
  9776  0039A0  0012               	return	
  9777  0039A2                     i1l4549:
  9778  0039A2  0440               	decf	_LEDcount,w,c
  9779  0039A4  1041               	iorwf	_LEDcount+1,w,c
  9780  0039A6  A4D8               	btfss	status,2,c
  9781  0039A8  D002               	goto	i1l4555
  9782                           
  9783                           ;Trozinski_Herrin_Lab6.c: 417:         LATD = 0b01000000;
  9784  0039AA  0E40               	movlw	64
  9785  0039AC  D7F6               	goto	L13
  9786  0039AE                     i1l4555:
  9787  0039AE  5040               	movf	_LEDcount,w,c
  9788  0039B0  1041               	iorwf	_LEDcount+1,w,c
  9789  0039B2  A4D8               	btfss	status,2,c
  9790  0039B4  D002               	goto	i1l4561
  9791                           
  9792                           ;Trozinski_Herrin_Lab6.c: 421:         LATD = 0b00100000;
  9793  0039B6  0E20               	movlw	32
  9794  0039B8  D7F0               	goto	L13
  9795  0039BA                     i1l4561:
  9796                           
  9797                           ;Trozinski_Herrin_Lab6.c: 425:         LATD = 0b11110000;
  9798  0039BA  0EF0               	movlw	240
  9799  0039BC  6E8C               	movwf	3980,c	;volatile
  9800  0039BE  0012               	return		;funcret
  9801  0039C0                     __end_of_LEDhandler:
  9802                           	opt callstack 0
  9803                           
  9804 ;; *************** function _SPItransmission *****************
  9805 ;; Defined at:
  9806 ;;		line 363 in file "Trozinski_Herrin_Lab6.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;		None
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;		None
  9811 ;; Return value:  Size  Location     Type
  9812 ;;                  1    wreg      void 
  9813 ;; Registers used:
  9814 ;;		wreg, status,2, status,0
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9824 ;;Total ram usage:        0 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; Hardware stack levels required when called:    1
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_LoPriISR
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text46
  9835  00376C                     __ptext46:
  9836                           	opt callstack 0
  9837  00376C                     _SPItransmission:
  9838                           	opt callstack 19
  9839                           
  9840                           ;Trozinski_Herrin_Lab6.c: 367:     LATEbits.LATE0 = 0;
  9841                           
  9842                           ;incstack = 0
  9843  00376C  908D               	bcf	3981,0,c	;volatile
  9844                           
  9845                           ;Trozinski_Herrin_Lab6.c: 369:     SSP1BUF = (binnum>>8)|0b00110000;
  9846  00376E  504A               	movf	_binnum+1,w,c
  9847  003770  0930               	iorlw	48
  9848  003772  6EC9               	movwf	4041,c	;volatile
  9849  003774                     i1l264:
  9850  003774  A0C7               	btfss	4039,0,c	;volatile
  9851  003776  D7FE               	goto	i1l264
  9852                           
  9853                           ;Trozinski_Herrin_Lab6.c: 373:     garbage = SSP1BUF;
  9854  003778  CFC9 F047          	movff	4041,_garbage	;volatile
  9855                           
  9856                           ;Trozinski_Herrin_Lab6.c: 375:     SSP1BUF = binnum;
  9857  00377C  C049  FFC9         	movff	_binnum,4041	;volatile
  9858  003780                     i1l267:
  9859  003780  A0C7               	btfss	4039,0,c	;volatile
  9860  003782  D7FE               	goto	i1l267
  9861                           
  9862                           ;Trozinski_Herrin_Lab6.c: 378:     garbage = SSP1BUF;
  9863  003784  CFC9 F047          	movff	4041,_garbage	;volatile
  9864                           
  9865                           ;Trozinski_Herrin_Lab6.c: 379:     LATEbits.LATE0 = 1;
  9866  003788  808D               	bsf	3981,0,c	;volatile
  9867                           
  9868                           ;Trozinski_Herrin_Lab6.c: 381:     if(inc & (binnum >= 0x3FFE)){
  9869  00378A  0EFE               	movlw	254
  9870  00378C  5C49               	subwf	_binnum,w,c
  9871  00378E  0E3F               	movlw	63
  9872  003790  584A               	subwfb	_binnum+1,w,c
  9873  003792  A0D8               	btfss	status,0,c
  9874  003794  D002               	goto	i1u570_20
  9875  003796  0E01               	movlw	1
  9876  003798  D001               	goto	i1u571_20
  9877  00379A                     i1u570_20:
  9878  00379A  0E00               	movlw	0
  9879  00379C                     i1u571_20:
  9880  00379C  144B               	andwf	_inc,w,c
  9881  00379E  0900               	iorlw	0
  9882  0037A0  B4D8               	btfsc	status,2,c
  9883  0037A2  D004               	goto	i1l4925
  9884                           
  9885                           ;Trozinski_Herrin_Lab6.c: 382:         inc = 0;
  9886  0037A4  0E00               	movlw	0
  9887  0037A6  6E4B               	movwf	_inc,c
  9888                           
  9889                           ;Trozinski_Herrin_Lab6.c: 383:         dec = 1;
  9890  0037A8  0E01               	movlw	1
  9891  0037AA  6E46               	movwf	_dec,c
  9892  0037AC                     i1l4925:
  9893                           
  9894                           ;Trozinski_Herrin_Lab6.c: 385:     if(dec & (binnum <= 0x3000)){
  9895  0037AC  0449               	decf	_binnum,w,c
  9896  0037AE  0E30               	movlw	48
  9897  0037B0  584A               	subwfb	_binnum+1,w,c
  9898  0037B2  B0D8               	btfsc	status,0,c
  9899  0037B4  D002               	goto	i1u573_20
  9900  0037B6  0E01               	movlw	1
  9901  0037B8  D001               	goto	i1u574_20
  9902  0037BA                     i1u573_20:
  9903  0037BA  0E00               	movlw	0
  9904  0037BC                     i1u574_20:
  9905  0037BC  1446               	andwf	_dec,w,c
  9906  0037BE  0900               	iorlw	0
  9907  0037C0  B4D8               	btfsc	status,2,c
  9908  0037C2  D004               	goto	i1l271
  9909                           
  9910                           ;Trozinski_Herrin_Lab6.c: 386:         inc = 1;
  9911  0037C4  0E01               	movlw	1
  9912  0037C6  6E4B               	movwf	_inc,c
  9913                           
  9914                           ;Trozinski_Herrin_Lab6.c: 387:         dec = 0;
  9915  0037C8  0E00               	movlw	0
  9916  0037CA  6E46               	movwf	_dec,c
  9917  0037CC                     i1l271:
  9918                           
  9919                           ;Trozinski_Herrin_Lab6.c: 389:     if(inc){
  9920  0037CC  504B               	movf	_inc,w,c
  9921  0037CE  B4D8               	btfsc	status,2,c
  9922  0037D0  D004               	goto	i1l4931
  9923                           
  9924                           ;Trozinski_Herrin_Lab6.c: 390:         binnum += 2;
  9925  0037D2  0E02               	movlw	2
  9926  0037D4  2649               	addwf	_binnum,f,c
  9927  0037D6  0E00               	movlw	0
  9928  0037D8  224A               	addwfc	_binnum+1,f,c
  9929  0037DA                     i1l4931:
  9930                           
  9931                           ;Trozinski_Herrin_Lab6.c: 392:     if(dec){
  9932  0037DA  5046               	movf	_dec,w,c
  9933  0037DC  B4D8               	btfsc	status,2,c
  9934  0037DE  0012               	return	
  9935                           
  9936                           ;Trozinski_Herrin_Lab6.c: 393:         binnum -= 2;
  9937  0037E0  0E02               	movlw	2
  9938  0037E2  5E49               	subwf	_binnum,f,c
  9939  0037E4  0E00               	movlw	0
  9940  0037E6  5A4A               	subwfb	_binnum+1,f,c
  9941  0037E8  0012               	return		;funcret
  9942  0037EA                     __end_of_SPItransmission:
  9943                           	opt callstack 0
  9944                           
  9945 ;; *************** function _HiPriISR *****************
  9946 ;; Defined at:
  9947 ;;		line 294 in file "Trozinski_Herrin_Lab6.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		None
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		Interrupt level 2
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           	psect	intcode
  9975  000008                     __pintcode:
  9976                           	opt callstack 0
  9977  000008                     _HiPriISR:
  9978                           	opt callstack 18
  9979                           
  9980                           ;incstack = 0
  9981  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  9982  00000A  EF3C  F01F         	goto	int_func
  9983                           
  9984                           	psect	intcode_body
  9985  003E78                     __pintcode_body:
  9986                           	opt callstack 18
  9987  003E78                     int_func:
  9988                           	opt callstack 18
  9989  003E78  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  9990  003E7A  0011               	retfie		f
  9991  003E7C                     __end_of_HiPriISR:
  9992                           	opt callstack 0
  9993                           
  9994                           	psect	rparam
  9995  0000                     
  9996                           	psect	temp
  9997  00004C                     btemp:
  9998                           	opt callstack 0
  9999  00004C                     	ds	1
 10000  0000                     int$flags	set	btemp
 10001  0000                     wtemp8	set	btemp+1
 10002  0000                     ttemp5	set	btemp+1
 10003  0000                     ttemp6	set	btemp+4
 10004  0000                     ttemp7	set	btemp+8
 10005                           tosu	equ	0xFFF
 10006                           tosh	equ	0xFFE
 10007                           tosl	equ	0xFFD
 10008                           stkptr	equ	0xFFC
 10009                           pclatu	equ	0xFFB
 10010                           pclath	equ	0xFFA
 10011                           pcl	equ	0xFF9
 10012                           tblptru	equ	0xFF8
 10013                           tblptrh	equ	0xFF7
 10014                           tblptrl	equ	0xFF6
 10015                           tablat	equ	0xFF5
 10016                           prodh	equ	0xFF4
 10017                           prodl	equ	0xFF3
 10018                           indf0	equ	0xFEF
 10019                           postinc0	equ	0xFEE
 10020                           postdec0	equ	0xFED
 10021                           preinc0	equ	0xFEC
 10022                           plusw0	equ	0xFEB
 10023                           fsr0h	equ	0xFEA
 10024                           fsr0l	equ	0xFE9
 10025                           wreg	equ	0xFE8
 10026                           indf1	equ	0xFE7
 10027                           postinc1	equ	0xFE6
 10028                           postdec1	equ	0xFE5
 10029                           preinc1	equ	0xFE4
 10030                           plusw1	equ	0xFE3
 10031                           fsr1h	equ	0xFE2
 10032                           fsr1l	equ	0xFE1
 10033                           bsr	equ	0xFE0
 10034                           indf2	equ	0xFDF
 10035                           postinc2	equ	0xFDE
 10036                           postdec2	equ	0xFDD
 10037                           preinc2	equ	0xFDC
 10038                           plusw2	equ	0xFDB
 10039                           fsr2h	equ	0xFDA
 10040                           fsr2l	equ	0xFD9
 10041                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    17
    Data        17
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      75
    BANK0           160    112     158
    BANK1           256     18     174
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[3]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[3]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[4]), 
		 -> STR_3(CODE[5]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), RBuffer(BANK1[20]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(BANK0[3]), RBuffer(BANK1[20]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), DisplayC@temp(COMRAM[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), DisplayC@temp(COMRAM[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), LCDRow1(CODE[10]), voltage(BANK1[10]), temperature(BANK1[10]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), LCDRow1(CODE[10]), voltage(BANK1[10]), temperature(BANK1[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> voltage(BANK1[10]), temperature(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> voltage(BANK1[10]), temperature(BANK1[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S2027_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> voltage(BANK1[10]), temperature(BANK1[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> voltage(BANK1[10]), temperature(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    memset@dest	PTR void  size(2) Largest target is 20
		 -> RBuffer(BANK1[20]), TBuffer(BANK1[20]), 

    memset@s	PTR unsigned char  size(2) Largest target is 20
		 -> RBuffer(BANK1[20]), TBuffer(BANK1[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 20
		 -> RBuffer(BANK1[20]), TBuffer(BANK1[20]), 

    DisplayV@LCDStr	PTR const unsigned char  size(2) Largest target is 10
		 -> DisplayC@temp(COMRAM[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), DisplayC@temp(COMRAM[10]), 

    DisplayC@LCDStr	PTR const unsigned char  size(2) Largest target is 10
		 -> LCDRow1(CODE[10]), voltage(BANK1[10]), temperature(BANK1[10]), 


Critical Paths under _main in COMRAM

    _volts->___flmul
    _tempC->___flmul
    _efgtoa->___flmul
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _decoder->_memset
    _Initial->_DisplayC
    _DisplayC->_strcpy

Critical Paths under _LoPriISR in COMRAM

    _LoPriISR->_receive
    _receive->i1_memset
    _TMR0handler->_LEDhandler

Critical Paths under _HiPriISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge

Critical Paths under _LoPriISR in BANK0

    None.

Critical Paths under _HiPriISR in BANK0

    None.

Critical Paths under _main in BANK1

    _volts->_sprintf
    _tempC->_sprintf

Critical Paths under _LoPriISR in BANK1

    None.

Critical Paths under _HiPriISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LoPriISR in BANK2

    None.

Critical Paths under _HiPriISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LoPriISR in BANK3

    None.

Critical Paths under _HiPriISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LoPriISR in BANK4

    None.

Critical Paths under _HiPriISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LoPriISR in BANK5

    None.

Critical Paths under _HiPriISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LoPriISR in BANK6

    None.

Critical Paths under _HiPriISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LoPriISR in BANK7

    None.

Critical Paths under _HiPriISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LoPriISR in BANK8

    None.

Critical Paths under _HiPriISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LoPriISR in BANK9

    None.

Critical Paths under _HiPriISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LoPriISR in BANK10

    None.

Critical Paths under _HiPriISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LoPriISR in BANK11

    None.

Critical Paths under _HiPriISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LoPriISR in BANK12

    None.

Critical Paths under _HiPriISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LoPriISR in BANK13

    None.

Critical Paths under _HiPriISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LoPriISR in BANK14

    None.

Critical Paths under _HiPriISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LoPriISR in BANK15

    None.

Critical Paths under _HiPriISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   92408
                           _DisplayC
                            _Initial
                            _decoder
                             _sample
                              _tempC
                              _volts
 ---------------------------------------------------------------------------------
 (1) _volts                                                0     0      0   42830
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _tempC                                                0     0      0   42830
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   38763
                                              0 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   38079
                                            104 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   37519
                                             80 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   29407
                                             12 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             24 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3957
                                             34 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             27 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             18 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             43 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             18 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                             18 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                             18 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3593
                                             32 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                              0 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             18 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                             18 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1515
                                             25 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                             18 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _sample                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decoder                                              0     0      0    2772
                             _memset
                            _strncmp
                           _transmit
 ---------------------------------------------------------------------------------
 (2) _transmit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    1675
                                             18 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1097
                                             18 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0    2057
                           _DisplayC
                            _InitLCD
 ---------------------------------------------------------------------------------
 (2) _InitLCD                                              3     3      0     138
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DisplayC                                            12    10      2    1919
                                             28 COMRAM    12    10      2
                           _DisplayV
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1217
                                             18 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) _DisplayV                                             4     2      2     324
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LoPriISR                                            5     5      0     797
                                             13 COMRAM     5     5      0
                    _SPItransmission
                        _TMR0handler
                            _receive
 ---------------------------------------------------------------------------------
 (11) _receive                                             1     1      0     797
                                             12 COMRAM     1     1      0
                           i1_memset
 ---------------------------------------------------------------------------------
 (12) i1_memset                                           12     6      6     797
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (11) _TMR0handler                                         0     0      0       0
                         _LEDhandler
 ---------------------------------------------------------------------------------
 (12) _LEDhandler                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _SPItransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HiPriISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayC
     _DisplayV
     _strcpy
   _Initial
     _DisplayC
       _DisplayV
       _strcpy
     _InitLCD
   _decoder
     _memset
     _strncmp
     _transmit
   _sample
   _tempC
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _volts
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 _LoPriISR (ROOT)
   _SPItransmission
   _TMR0handler
     _LEDhandler
   _receive
     i1_memset

 _HiPriISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      AE       7       68.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     70      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      4B       1       79.8%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     197      12        0.0%
DATA                 0      0     197       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Dec 01 16:45:02 2020

            ___fldiv@aexp 002B              ___fldiv@bexp 002A              ___fldiv@sign 0023  
                      l30 359E                        l31 35A0                        l26 35C6  
                      l27 3550                        l28 3562                        l29 3564  
            ___awdiv@sign 0018                        bsr 000FE0       ___wmul@multiplicand 0015  
             __CFG_BORV$2 000000                       l306 3A98                       l410 1396  
                     l324 2994                       l309 3AC6                       l292 3CDA  
                     l436 1674                       l369 34E2                       l776 30FA  
                     _BSR 000FE0                       _dec 0046                       _inc 004B  
                     _pad 34B4              ___awmod@sign 0018                       wreg 000FE8  
              _TXSTA1bits 000FAC              ___flmul@aexp 002E              ___flmul@bexp 0033  
            ___flmul@sign 002D              ___flmul@temp 0038              ___flmul@prod 0034  
             ?_LEDhandler 0001           __end_of_LCDRow1 100B              ___fltol@exp1 001C  
                    l1040 22D0                      l1041 22AE                      l1106 267A  
                    l1107 2676                      l1221 2BB4                      l1125 1EBC  
                    l1142 215A                      l1134 20D4                      l1135 20D0  
                    l1056 23A2                      l1065 2408                      l1233 283C  
                    l1066 2404                      l1323 3C38                      l1173 2C7A  
                    l1166 2BFC                      l1095 260C                      l5121 2226  
                    l5113 2206                      l5043 342C                      l4501 3380  
                    l5109 2202                      l5053 3D0C                      l5061 3E04  
                    l5215 23C6                      l5231 23E6                      l5207 2392  
                    l5151 2262                      l5063 3E08                      l6031 1710  
                    l5225 23DC                      l5313 31B8                      l5057 3D22  
                    l6017 166C                      l6009 1614                      l6201 1A30  
                    l4611 2DDE                      l5403 2506                      l5251 244E  
                    l5163 22BC                      l6107 190A                      l6043 1740  
                    l6051 1760                      l6019 168E                      l4613 2E10  
                    l4605 2DA6                      l5501 271A                      l5421 2554  
                    l5165 22C0                      l5085 21BA                      l5309 31AE  
                    l6133 1996                      l6117 1936                      l6221 1A4A  
                    l6213 1A3C                      l6205 1A34                      l6301 1E04  
                    ?_pad 0023                      l5415 253E                      l5407 250A  
                    l5263 247C                      l5319 31F8                      l6223 1A90  
                    l4529 33F4                      l4633 2C2A                      l5521 1E68  
                    l5265 247E                      l5089 21BE                      l5353 289C  
                    l6241 1B52                      l6217 1A40                      l6209 1A38  
                    l6321 3B08                      l4619 2E26                      l4811 3CD0  
                    l4635 2C30                      l4627 2C0C                      l6163 2ADE  
                    l6147 2A7C                      l5523 1E6C                      l5259 2474  
                    l5187 2316                      l5179 22F4                      l5339 279C  
                    l5283 34CC                      l6059 1784                      l6067 181C  
                    l6323 3B2E                      l5277 3BB2                      l4645 2CA0  
                    l4637 2C3C                      l6173 2B50                      l6165 2AE6  
                    l6157 2ACE                      l6149 2A80                      l5701 39E0  
                    l5453 260A                      l5429 256C                      l5621 2136  
                    l5541 1EAC                      l5525 1E7C                      l5189 231A  
                    l5197 232C                      l5357 28CA                      l5349 285E  
                    l5293 3504                      l6237 1B26                      l6415 3014  
                    l6503 2A5A                      l4663 2CEC                      l4647 2CAC  
                    l4639 2C62                      l6167 2AEC                      l5447 25E4  
                    l5439 25BC                      l5383 24C6                      l5287 34DA  
                    l6095 18AA                      l6079 185E                      l6239 1B44  
                    l4585 3AE0                      l6169 2B18                      l5721 3A26  
                    l5713 3A0E                      l5705 39EE                      l5465 2640  
                    l5633 2178                      l5617 2118                      l5297 3530  
                    l5289 34EC                      l6097 18B4                      l6265 1C9C  
                    l6257 1C3C                      l4587 3AE4                      l5707 39F6  
                    l5459 2622                      l5387 24CA                      l5539 1EA8  
                    l5811 32AA                      l5803 3282                      l6291 1DDE  
                    l5653 36FC                      l5717 3A18                      l5493 270C  
                    l5485 26BE                      l5733 3642                      l5549 1EDA  
                    l5805 328E                      l6285 1D9E                      l6269 1CC6  
                    l6197 1A1E                      l6509 3A34                      l4599 2D42  
                    l5823 3CC0                      l5591 207C                      l6295 1DEA  
                    l6199 1A20                      l5833 32E6                      l6481 29F8  
                    l5665 3722                      l5681 3754                      l5489 26E2  
                    l5737 3660                      l5729 360E                      l5753 30E4  
                    l5745 309A                      l5905 1204                      l5913 121E  
                    l5835 32F4                      l6467 2946                      l5667 372A  
                    l5659 370C                      l5499 2718                      l5923 129C  
                    l6477 29CA                      l5685 3762                      l5677 374A  
                    l5749 30CE                      l5597 209A                      l5941 137E  
                    l5925 12EC                      l5759 3132                      l5767 3DE8  
                    l5951 13A6                      l5919 1262                      l5697 39D4  
                    l5793 326A                      l5777 3220                      l5961 13F2  
                    l5945 13A0                      l5929 1328                      l5857 10A0  
                    l5971 1410                      l5891 1172                      l5797 327A  
                    l5981 1444                      l5869 10CE                      l5877 10E4  
                    l5959 13EE                      l5887 1150                      l5895 1198  
                    l5977 1434                      l5889 1168                      l5987 146E  
                    l5995 1564                      STR_1 1012                      STR_2 101D  
                    STR_3 1039                      STR_4 104E                      STR_5 1031  
                    STR_6 1028                      STR_7 103E                      STR_8 1046  
                    _LATB 000F8A                      _LATC 000F8B                      _LATD 000F8C  
                    u6000 2284                      u6010 2294                      u6020 2296  
                    u6200 23FE                      u5330 3AF2                      u6050 22D8  
                    u6300 3BEC                      u7030 372E                      u8000 1B92  
                    u5450 2CB6                      u7210 320E                      u6410 31F0  
                    u8010 1B9E                      u6307 3BE2                      u7140 365C  
                    u6260 245A                      u6180 23EA                      u7220 323E  
                    u6420 31F2                      u6405 31D2                      u8110 3020  
                    u6510 281C                      u6430 3C1E                      u5560 3D00  
                    u6360 3174                      u6440 3C20                      u7400 1128  
                    u7225 3234                      u7090 39FA                      u6530 287C  
                    u7410 112A                      u6515 2812                      u7340 3342  
                    u7260 3294                      u6460 2768                      u5900 3D96  
                    u8060 1D52                      u6365 316A                      u6470 278A  
                    u8070 1D54                      u8207 3CE0                      u6535 2872  
                    u6560 3DC4                      u5840 3424                      u7520 138C  
                    u7440 11DC                      u8217 3374                      u6465 275E  
                    u6570 3DC6                      u7290 3CBC                      u7450 11DE  
                    u7370 10BE                      u8227 33B4                      u6740 2670  
                    u5860 346C                      u8237 33EA                      u7550 13BE  
                    u8247 3588                      u6495 27B4                      u6496 27BA  
                    u8257 35BE                      u6497 27C8                      u6930 20CA  
                    u5890 3D94                      u7490 1352                      u7900 2B84  
                    u6780 26CC                      u7820 1920                      u7660 1604  
                    u8197 3CD2                      u7910 2B86                      u6790 26F0  
                    u7590 140C                      u6880 1EC8                      u7840 1980  
                    u7760 1840                      u6970 2126                      u6890 203E  
                    u7850 1982                      u6980 2144                      u6895 2034  
                    u7880 2ACA                      u7990 1B90                      _TMR1 000FCE  
                    _WREG 000FE8              _transmittime 00E0                      _Temp 00D8  
            InitLCD@count 0014                      _dbuf 0104                      _done 00E8  
                    _atoi 2A6A                      _main 3A30                      _prec 003A  
                    _nout 00DC                      pad@i 002A                      pad@p 0027  
                    fsr1h 000FE2                      fsr2h 000FDA                      indf1 000FE7  
                    indf2 000FDF                      fsr1l 000FE1                      pad@w 002C  
                    fsr2l 000FD9                      btemp 004C             __CFG_BOREN$ON 000000  
           ___fpclassifyf 3136                      prodh 000FF4                      prodl 000FF3  
                    start 007C             __CFG_FOSC$HS1 000000           ___fldiv@new_exp 0024  
            _tolower$2099 001F              _vscalefactor 01A2              ___param_bank 000000  
         __end_of_InitLCD 3414           __end_of_Initial 3064                     ??_pad 0029  
            _BAUDCON1bits 000F65             ___fltol@sign1 001B                     ?_atoi 001A  
         __end_of___fladd 249A                     ?_main 0001           __end_of___fldiv 2722  
         __end_of___awdiv 376C           __end_of___flneg 3DFA                     _ADRES 000FC3  
                   STR_11 1042                     STR_12 104A                     STR_15 1052  
                   STR_17 1052           __end_of___awmod 3A30           __end_of___flmul 218E  
         __end_of___flsub 3C8A           __end_of___fltol 32BC                     _T0CON 000FD5  
         ___awdiv@divisor 0015                     _T1CON 000FCD         ??_SPItransmission 0001  
                   i1l250 0040                     i1l316 3822                     i1l252 004C  
                   i1l271 37CC                     i1l264 3774                     i1l249 0036  
                   i1l258 3D5E                     i1l267 3780           ___awdiv@counter 0017  
            vfpfcnvrt@fmt 00B2                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _SPBRG 000FAF                     _TMR1X 00F8                     _PORTB 000F81  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95           __end_of_decoder 2A6A             InitLCD@nibble 0015  
                   _flags 003C                     _fputc 3414                     _fputs 3D02  
         __end_of_isdigit 3DCC                     _tempC 38DA           __end_of_receive 3866  
                   atoi@n 0027                     pad@fp 0023                     atoi@s 001A  
                   _width 00DE                     _putch 3E82                     _volts 3866  
         __end_of_isspace 3CC8           __end_of_isupper 3D9C                     tablat 000FF5  
                   ttemp5 004D                     ttemp6 0050                     ttemp7 0054  
                   status 000FD8                     wtemp8 004D           __end_of_sprintf 3BA2  
          ?___fpclassifyf 0013           __end_of_tolower 3C42          __end_ofi1_memset 2F62  
         __end_of_strncmp 336A          __end_of_HiPriISR 3E7C           __initialization 3664  
        __end_of_DisplayC 3E6C          __end_of_DisplayV 35DA          __end_of_LoPriISR 007C  
             _Alive_count 00FA              __end_of_atoi 2BBE              __end_of_main 3A94  
     __size_of_LEDhandler 0072                    ??_atoi 001C                    ??_main 003A  
           __activetblptr 000003                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ADCON2 000FC0                    ?_fputc 0013                    ?_fputs 001C  
                  _CCPR1X 00F6                    ?_tempC 0001                    _ANCON0 000F25  
                  _ANCON1 000F24                    _ANCON2 000F23          ___awdiv@dividend 0013  
          _continuousMode 00E2                    ?_putch 0001                    ?_volts 0001  
                  i1l4543 398E                    i1l4561 39BA                    i1l4555 39AE  
                  i1l4539 3976                    i1l4549 39A2                    i1l4903 3818  
                  i1l4931 37DA                    i1l4691 2F42                    i1l4683 2ED8  
                  i1l4915 3860                    i1l4925 37AC                    i1l4677 2E74  
                  i1l4909 382C            __CFG_WDTEN$OFF 000000                    i1l4697 2F58  
                  i1l4689 2F10                    i1l4895 3D68                    i1l4975 0060  
                  _RCREG1 000FAE             vfpfcnvrt@done 00BA                    _TXREG1 000FAD  
        __end_of___xxtofl 2CFE                 ??_InitLCD 0013                 ??_Initial 0029  
          __CFG_PWRTEN$ON 000000            __CFG_XINST$OFF 000000              vfprintf@cfmt 00CE  
                  ___flge 3064                    ___fleq 35DA                 ??___fladd 001B  
                  ___wmul 3E24                 ??___fldiv 001B                 ??___awdiv 0017  
               ??___flneg 0017                 ??___awmod 0017                 ??___flmul 0029  
               ??___flsub 003A                 ??___fltol 0017                    _bcount 00E6  
                  _efgtoa 1056                    _binnum 0049                    _floorf 2722  
                  _memset 2CFE                 ??_decoder 001F                    clear_0 36C0  
                  clear_1 36CC                    clear_2 36D8          ___awdiv@quotient 0019  
                  _sample 3CC8           ___awmod@divisor 0015                    _tcount 003E  
         ___awmod@counter 0017                    pad@buf 0025                    _strcpy 3BA2  
                  _strlen 3DFA              ?_TMR0handler 0001                    fputc@c 0013  
                  fputs@c 0020                    fputs@i 0021              __pdataCOMRAM 0049  
                  fputs@s 001C                 ??_isdigit 0015                 ??_receive 000D  
         ___fpclassifyf@e 001B           ___fpclassifyf@u 001D           ___fpclassifyf@x 0013  
            __mediumconst 0000                 ??_isspace 0015                    tblptrh 000FF7  
               ??_isupper 0015                    tblptrl 000FF6                    tblptru 000FF8  
                  putch@c 0001          __end_of_vfprintf 3B4E          __end_of_transmit 3AF4  
               ??_sprintf 003A                 ??_tolower 001B                 ??_strncmp 0019  
              ___flge@ff1 0060           ??___fpclassifyf 0017                ___flge@ff2 0064  
            ___xxtofl@arg 001D              ___xxtofl@exp 001C              ___xxtofl@val 0013  
              ___fleq@ff1 0013                ___fleq@ff2 0017                __accesstop 0060  
 __end_of__initialization 36DE                ___flneg@f1 0013             ___rparam_used 000001  
              ___fltol@f1 0013            __pcstackCOMRAM 0001              __pidataBANK0 3E7F  
            __pidataBANK1 3E6C             __end_of_fputc 34B4             __end_of_fputs 3D3A  
           __end_of_tempC 394E             __end_of_putch 3E84             __end_of_volts 38DA  
               ?i1_memset 0001                 ?_HiPriISR 0001              ??_LEDhandler 0001  
                 ??_fputc 0017                   ??_fputs 0020                   ??_tempC 003A  
               ?_DisplayC 001D                 ?_DisplayV 0013                   ??_putch 0013  
               ?_LoPriISR 0001                   ??_volts 003A                __pbssBANK0 00D0  
              __pbssBANK1 0100           __CFG_PLLCFG$OFF 000000           _SPItransmission 376C  
                 ?___flge 0060                   ?___fleq 0013              _Cscalefactor 01A6  
                 ?___wmul 0013                   ?_efgtoa 006C                   ?_floorf 002C  
      __end_of_LEDhandler 39C0                   ?_memset 0013                   ?_sample 0001  
                 ?_strcpy 0013                   ?_strlen 0013                   _LCDRow1 1001  
               ?___xxtofl 0013                ??i1_memset 0007                ??_HiPriISR 0001  
      __size_of_vfpfcnvrt 0468                   _SSP1BUF 000FC9                ??_DisplayC 001F  
              ??_DisplayV 0015                ??_LoPriISR 000E                   _RBuffer 0168  
                 _ONcount 0042                   _TBuffer 0154              i1memset@dest 0001  
                 _InitLCD 336A                   _Initial 2F62                   __Hparam 0000  
                 __Lparam 0000           __size_of___flge 00D2           __size_of___fleq 008A  
                 ___fladd 218E                   ___fldiv 249A                   ___awdiv 36E8  
                 ___flneg 3DCC                   ___awmod 39C0                   ___flmul 1E3C  
                 ___flsub 3C42                   ___fltol 3202           __size_of___wmul 0026  
               ?_vfprintf 00C8                 ?_transmit 0001              __psmallconst 1000  
         __size_of_efgtoa 097E           __size_of_floorf 01BA                   _decoder 28DC  
                 __pcinit 3664           __size_of_memset 0132                   __ramtop 1000  
                 _garbage 0047           __size_of_sample 003A                   __ptext0 3A30  
                 __ptext1 3866                   __ptext2 38DA                   __ptext3 3B4E  
                 __ptext4 3AF4                   __ptext5 19D4                   __ptext6 1056  
                 __ptext7 3BF6                   __ptext8 3D6C                   __ptext9 34B4  
               _T0CONbits 000FD5           __size_of_strcpy 0054           __size_of_strlen 002A  
               _T1CONbits 000FCD              __size_of_pad 0096                   _isdigit 3D9C  
              ??___xxtofl 0017                   _receive 37EA          ___awmod@dividend 0013  
                 _isspace 3C8A      __size_of_TMR0handler 0032                   _isupper 3D6C  
                 efgtoa@c 0072                   efgtoa@d 0090                   efgtoa@e 00A8  
                 efgtoa@f 006E                   efgtoa@g 00A4                   efgtoa@h 009A  
                 efgtoa@i 00A2                   efgtoa@l 009E                   efgtoa@m 008C  
                 efgtoa@n 00AA                   efgtoa@p 0094                   efgtoa@t 0088  
                 efgtoa@u 00AC                   efgtoa@w 0097                   atoi@neg 0020  
                 _sprintf 3B4E                   _tolower 3BF6                   _voltage 017C  
                 _strncmp 32BC            __pintcode_body 3E78      end_of_initialization 36DE  
                 floorf@e 0064                   floorf@m 0060                   floorf@u 0066  
                 floorf@x 002C   __end_of_SPItransmission 37EA                   fputc@fp 0015  
                 memset@c 0015                   memset@k 001B                   memset@n 0017  
                 memset@s 001D                   int_func 3E78                   fputs@fp 001E  
               _P2channel 00F4         __end_of_vfpfcnvrt 1E3C                efgtoa@mode 0099  
              efgtoa@sign 0092                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
              ??_vfprintf 003A                ??_transmit 0013              _commandready 00E4  
                 strcpy@d 001B                   strlen@a 0015                   strcpy@s 0019  
                 strlen@s 0013               ___fladd@grs 0022             ___xxtofl@sign 001B  
               _TRISBbits 000F93                 _TRISEbits 000F96               ___fldiv@grs 0026  
             ___fldiv@rem 001F               ___flmul@grs 002F            __end_of___flge 3136  
          __end_of___fleq 3664               vfpfcnvrt@ap 00B4               vfpfcnvrt@ct 00C4  
             vfpfcnvrt@fp 00B0            __end_of___wmul 3E4A                 i1memset@c 0003  
               i1memset@k 0009                 i1memset@n 0005                 i1memset@s 000B  
           __pidataCOMRAM 3E7C            __end_of_efgtoa 19D4            __end_of_floorf 28DC  
              floorf@F524 0100            __end_of_memset 2E30            __end_of_sample 3D02  
          __end_of_strcpy 3BF6            __end_of_strlen 3E24       start_initialization 3664  
             __end_of_pad 354A         __size_ofi1_memset 0132         __size_of_HiPriISR 3E74  
       __size_of_DisplayC 0022         __size_of_DisplayV 0090          ?_SPItransmission 0001  
       __size_of_LoPriISR 0064     __end_of___fpclassifyf 3202               vfprintf@fmt 00CA  
                ??___flge 0068                  ??___fleq 001B                  ??___wmul 0017  
                ??_efgtoa 0073               __pdataBANK0 00FC               __pdataBANK1 01A2  
               _Potential 00D4                  ??_floorf 0030                  ??_memset 0019  
                ??_sample 0013                memset@dest 0013                  ??_strcpy 0017  
                ??_strlen 0015       __end_of_LCDInitStr_ 1012                 ___fladd@a 0017  
               ___fladd@b 0013                 ___fldiv@a 0017                 ___fldiv@b 0013  
               ___flmul@a 0025                 ___flmul@b 0021               __pbssCOMRAM 003A  
               ___flsub@a 0064                 ___flsub@b 0060             __pcstackBANK0 0060  
           __pcstackBANK1 0190                 _ccp1count 01AA         __size_of___xxtofl 0140  
                ?_InitLCD 0001                 _atoi$1976 0022                 _atoi$1977 0026  
               _atoi$1978 0024                  ?_Initial 0001               _efgtoa$1481 0080  
             _efgtoa$1475 007C               _efgtoa$1476 007E               _efgtoa$1485 0082  
             _efgtoa$1486 0084               _efgtoa$1487 0086            DisplayC@LCDStr 001D  
       __CFG_CCP2MX$PORTC 000000                 __pintcode 0008                  ?___fladd 0013  
                ?___fldiv 0013                  ?___awdiv 0013                  ?___flneg 0013  
                ?___awmod 0013                  ?___flmul 0021                  ?___flsub 0060  
                ?___fltol 0013               __pintcodelo 0018                  ?_decoder 0001  
       __size_of_vfprintf 005A         __size_of_transmit 0060               __smallconst 1000  
                ?_isdigit 0013                  ?_receive 0001               _LM35channel 00FC  
                ?_isspace 0013                  ?_isupper 0013            DisplayV@LCDStr 0013  
                ?_sprintf 0190                  ?_tolower 0019            __size_of_fputc 00A0  
          __size_of_fputs 0038                  ?_strncmp 0013            __size_of_tempC 0074  
          __size_of_putch 0002            __size_of_volts 0074            ___wmul@product 0017  
                _LATBbits 000F8A                  _LATDbits 000F8C                  _LATEbits 000F8D  
                _IPR1bits 000F9F                  _PIE1bits 000F9D                  _LEDcount 0040  
                _ADresult 00F2                  i1u524_20 395A                  i1u525_20 3962  
                i1u525_26 3964                  i1u570_20 379A                  i1u571_20 379C  
                i1u573_20 37BA                  i1u574_20 37BC                  _PIR1bits 000F9E  
                _OFFcount 00EE                  _RCONbits 000FD0            DisplayV@nibble 0015  
                _SSP1CON1 000FC6               _LCDInitStr_ 100B                  _P2result 00EC  
                _SSP1STAT 000FC7                 _vfpfcnvrt 19D4                _ADCON0bits 000FC2  
              _ADCON2bits 000FC0             ??_TMR0handler 0002         ___wmul@multiplier 0013  
                i1_memset 2E30                  _HiPriISR 0008              _isspace$2007 0019  
              vfpfcnvrt@c 00C7                vfpfcnvrt@f 00C0               _INTCON2bits 000FF1  
                _DisplayC 3E4A                  _DisplayV 354A                 copy_data0 3678  
                _LoPriISR 0018          __size_of_InitLCD 00AA                _ANCON0bits 000F25  
                __Hrparam 0000          __size_of_Initial 0102                vfprintf@ap 00CC  
                __Lrparam 0000                vfprintf@fp 00C8          __size_of___fladd 030C  
        __size_of___fldiv 0288          __size_of___awdiv 0084          __size_of___flneg 002E  
        __size_of___awmod 0070          __size_of___flmul 0352          __size_of___flsub 0048  
        __size_of___fltol 00BA                ?_vfpfcnvrt 00B0          __size_of_decoder 018E  
      ___fpclassifyf@F463 00D0                sprintf@fmt 0192                  ___xxtofl 2BBE  
        __size_of_isdigit 0030          __size_of_receive 007C          __size_of_isspace 003E  
                __ptext10 3DFA                  __ptext11 3D02                  __ptext20 1E3C  
                __ptext12 3414                  __ptext21 3064                  __ptext13 3E82  
                __ptext30 2BBE                  __ptext22 35DA                  __ptext14 2722  
                __ptext31 3CC8                  __ptext23 249A                  __ptext15 3136  
                __ptext40 354A                  __ptext32 28DC                  __ptext24 39C0  
                __ptext16 3202                  __ptext33 3A94                  __ptext25 36E8  
                __ptext17 3C42                  __ptext42 37EA                  __ptext34 32BC  
                __ptext26 2A6A                  __ptext18 218E                  __ptext43 2E30  
                __ptext35 2CFE                  __ptext27 3C8A                  __ptext19 3DCC  
                __ptext44 3D3A                  __ptext36 2F62                  __ptext28 3D9C  
                __ptext45 394E                  __ptext37 336A                  __ptext29 3E24  
                __ptext46 376C                  __ptext38 3E4A                  __ptext39 3BA2  
        __size_of_isupper 0030       __end_of_TMR0handler 3D6C          __size_of_sprintf 0054  
        __size_of_tolower 004C                strcpy@dest 0013          __size_of_strncmp 00AE  
           __size_of_atoi 0154             __size_of_main 0064                _LM35result 00F0  
                efgtoa@fp 006C                  efgtoa@ne 008E                  efgtoa@pp 008A  
                efgtoa@ou 0078             DisplayV@count 0016                  int$flags 004C  
                _vfprintf 3AF4                  _throwout 0048                  _transmit 3A94  
            _SSP1STATbits 000FC7                  _wregtemp 00EA            _vfpfcnvrt$1501 00BC  
          _vfpfcnvrt$1505 00BE                _INTCONbits 000FF2                  isdigit@c 0013  
              _LEDhandler 394E               _samplecount 0044                  intlevel1 0000  
                intlevel2 0000                 sprintf@ap 019A                  isspace@c 0013  
               strcpy@src 0015                _RCSTA1bits 000FAB              DisplayC@temp 001F  
                isupper@c 0013                 strncmp@_l 0013                 strncmp@_r 0015  
             efgtoa@nmode 0096  __size_of_SPItransmission 007E               ??_vfpfcnvrt 00B6  
             _temperature 0186               _TMR0handler 3D3A                  sprintf@f 019C  
                tolower@c 0019                  sprintf@s 0190    __size_of___fpclassifyf 00CC  
                strncmp@l 001A                  strncmp@n 0017                  strncmp@r 001C  
           ___fladd@signs 001F              ___fladd@aexp 0020              ___fladd@bexp 0021  
