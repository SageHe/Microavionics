

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Nov 19 14:14:08 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           ; Version 2.05
    68                           ; Generated 20/12/2018 GMT
    69                           ; 
    70                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F87K22 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataBANK1
   103  0040B8                     __pidataBANK1:
   104                           	opt callstack 0
   105                           
   106                           ;initializer for HiPriISR@F7424
   107  0040B8  80                 	db	128
   108  0040B9  00                 	db	0
   109  0040BA  00                 	db	0
   110  0040BB  00                 	db	0
   111  0040BC  00                 	db	0
   112  0040BD  00                 	db	0
   113  0040BE  00                 	db	0
   114  0040BF  00                 	db	0
   115  0040C0  00                 	db	0
   116  0040C1  00                 	db	0
   117  0040C2  00                 	db	0
   118  0040C3  00                 	db	0
   119  0040C4  00                 	db	0
   120  0040C5  00                 	db	0
   121  0040C6  00                 	db	0
   122  0040C7  00                 	db	0
   123  0040C8  00                 	db	0
   124  0040C9  00                 	db	0
   125                           
   126                           ;initializer for _command
   127  0040CA  80                 	db	128
   128  0040CB  00                 	db	0
   129  0040CC  00                 	db	0
   130  0040CD  00                 	db	0
   131  0040CE  00                 	db	0
   132  0040CF  00                 	db	0
   133  0040D0  00                 	db	0
   134  0040D1  00                 	db	0
   135  0040D2  00                 	db	0
   136  0040D3  00                 	db	0
   137  0040D4  00                 	db	0
   138  0040D5  00                 	db	0
   139  0040D6  00                 	db	0
   140  0040D7  00                 	db	0
   141  0040D8  00                 	db	0
   142  0040D9  00                 	db	0
   143                           
   144                           	psect	smallconst
   145  001000                     __psmallconst:
   146                           	opt callstack 0
   147  001000  00                 	db	0
   148  001001                     _LCDRow1:
   149                           	opt callstack 0
   150  001001  80                 	db	128
   151  001002  54                 	db	84
   152  001003  45                 	db	69
   153  001004  53                 	db	83
   154  001005  54                 	db	84
   155  001006  49                 	db	73
   156  001007  4E                 	db	78
   157  001008  47                 	db	71
   158  001009  21                 	db	33
   159  00100A  00                 	db	0
   160  00100B                     __end_of_LCDRow1:
   161                           	opt callstack 0
   162  00100B                     _testString:
   163                           	opt callstack 0
   164  00100B  54                 	db	84
   165  00100C  65                 	db	101
   166  00100D  73                 	db	115
   167  00100E  74                 	db	116
   168  00100F  69                 	db	105
   169  001010  6E                 	db	110
   170  001011  67                 	db	103
   171  001012  21                 	db	33
   172  001013  00                 	db	0
   173  001014                     __end_of_testString:
   174                           	opt callstack 0
   175  001014                     _LCDInitStr_:
   176                           	opt callstack 0
   177  001014  33                 	db	51
   178  001015  32                 	db	50
   179  001016  28                 	db	40
   180  001017  0C                 	db	12
   181  001018  01                 	db	1
   182  001019  06                 	db	6
   183  00101A  00                 	db	0
   184  00101B                     __end_of_LCDInitStr_:
   185                           	opt callstack 0
   186  0000                     _ANCON0	set	3877
   187  0000                     _TMR1	set	4046
   188  0000                     _ADRES	set	4035
   189  0000                     _TXREG1	set	4013
   190  0000                     _SSP1BUF	set	4041
   191  0000                     _LATEbits	set	3981
   192  0000                     _RCREG1	set	4014
   193  0000                     _SSP1CON1bits	set	4038
   194  0000                     _SSP1STATbits	set	4039
   195  0000                     _SSP1STAT	set	4039
   196  0000                     _SSPCON1	set	4038
   197  0000                     _ADCON2	set	4032
   198  0000                     _ADCON1	set	4033
   199  0000                     _TRISA	set	3986
   200  0000                     _TXSTA1bits	set	4012
   201  0000                     _TXSTA1	set	4012
   202  0000                     _BAUDCON1	set	3941
   203  0000                     _SPBRGH1	set	4052
   204  0000                     _SPBRG1	set	4015
   205  0000                     _RCSTA1bits	set	4011
   206  0000                     _T1CONbits	set	4045
   207  0000                     _T0CONbits	set	4053
   208  0000                     _PIE1bits	set	3997
   209  0000                     _INTCONbits	set	4082
   210  0000                     _IPR1bits	set	3999
   211  0000                     _INTCON2bits	set	4081
   212  0000                     _RCONbits	set	4048
   213  0000                     _T1CON	set	4045
   214  0000                     _TMR0H	set	4055
   215  0000                     _TMR0L	set	4054
   216  0000                     _T0CON	set	4053
   217  0000                     _TRISB	set	3987
   218  0000                     _TRISBbits	set	3987
   219  0000                     _TRISEbits	set	3990
   220  0000                     _TRISAbits	set	3986
   221  0000                     _TRISF	set	3991
   222  0000                     _LATC	set	3979
   223  0000                     _TRISC	set	3988
   224  0000                     _LATD	set	3980
   225  0000                     _TRISD	set	3989
   226  0000                     _PIR1bits	set	3998
   227  0000                     _LATDbits	set	3980
   228  0000                     _ADCON0bits	set	4034
   229  0000                     _ADCON0	set	4034
   230  0000                     _PORTB	set	3969
   231  0000                     _LATB	set	3978
   232  0000                     _LATBbits	set	3978
   233  00101B                     STR_7:
   234                           
   235                           ; BSR set to: 1
   236  00101B  4E                 	db	78	;'N'
   237  00101C  4F                 	db	79	;'O'
   238  00101D  54                 	db	84	;'T'
   239  00101E  20                 	db	32
   240  00101F  41                 	db	65	;'A'
   241  001020  20                 	db	32
   242  001021  56                 	db	86	;'V'
   243  001022  41                 	db	65	;'A'
   244  001023  4C                 	db	76	;'L'
   245  001024  49                 	db	73	;'I'
   246  001025  44                 	db	68	;'D'
   247  001026  20                 	db	32
   248  001027  43                 	db	67	;'C'
   249  001028  4F                 	db	79	;'O'
   250  001029  4D                 	db	77	;'M'
   251  00102A  4D                 	db	77	;'M'
   252  00102B  41                 	db	65	;'A'
   253  00102C  4E                 	db	78	;'N'
   254  00102D  44                 	db	68	;'D'
   255  00102E  21                 	db	33
   256  00102F  00                 	db	0
   257  001030                     STR_3:
   258                           
   259                           ; BSR set to: 1
   260  001030  54                 	db	84	;'T'
   261  001031  45                 	db	69	;'E'
   262  001032  4D                 	db	77	;'M'
   263  001033  50                 	db	80	;'P'
   264  001034  00                 	db	0
   265  001035                     STR_2:
   266                           
   267                           ; BSR set to: 1
   268  001035  25                 	db	37
   269  001036  2E                 	db	46
   270  001037  31                 	db	49	;'1'
   271  001038  66                 	db	102	;'f'
   272  001039  00                 	db	0
   273  00103A                     STR_1:
   274                           
   275                           ; BSR set to: 1
   276  00103A  25                 	db	37
   277  00103B  2E                 	db	46
   278  00103C  32                 	db	50	;'2'
   279  00103D  66                 	db	102	;'f'
   280  00103E  00                 	db	0
   281  00103F                     STR_8:
   282                           
   283                           ; BSR set to: 1
   284  00103F  49                 	db	73	;'I'
   285  001040  4E                 	db	78	;'N'
   286  001041  46                 	db	70	;'F'
   287  001042  00                 	db	0
   288  001043                     STR_12:
   289                           
   290                           ; BSR set to: 1
   291  001043  4E                 	db	78	;'N'
   292  001044  41                 	db	65	;'A'
   293  001045  4E                 	db	78	;'N'
   294  001046  00                 	db	0
   295  001047                     STR_9:
   296                           
   297                           ; BSR set to: 1
   298  001047  69                 	db	105	;'i'
   299  001048  6E                 	db	110	;'n'
   300  001049  66                 	db	102	;'f'
   301  00104A  00                 	db	0
   302  00104B                     STR_13:
   303                           
   304                           ; BSR set to: 1
   305  00104B  6E                 	db	110	;'n'
   306  00104C  61                 	db	97	;'a'
   307  00104D  6E                 	db	110	;'n'
   308  00104E  00                 	db	0
   309  00104F                     STR_5:
   310                           
   311                           ; BSR set to: 1
   312  00104F  50                 	db	80	;'P'
   313  001050  4F                 	db	79	;'O'
   314  001051  54                 	db	84	;'T'
   315  001052  00                 	db	0
   316  001053                     STR_16:
   317                           
   318                           ; BSR set to: 1
   319  001053  6C                 	db	108	;'l'
   320  001054  66                 	db	102	;'f'
   321  001055  00                 	db	0
   322  0000                     
   323                           ; #config settings
   324  001056  00                 	db	0	; dummy byte at the end
   325  0000                     
   326                           	psect	cinit
   327  003DC2                     __pcinit:
   328                           	opt callstack 0
   329  003DC2                     start_initialization:
   330                           	opt callstack 0
   331  003DC2                     __initialization:
   332                           	opt callstack 0
   333                           
   334                           ; Initialize objects allocated to BANK1 (34 bytes)
   335                           ; load TBLPTR registers with __pidataBANK1
   336  003DC2  0EB8               	movlw	low __pidataBANK1
   337  003DC4  6EF6               	movwf	tblptrl,c
   338  003DC6  0E40               	movlw	high __pidataBANK1
   339  003DC8  6EF7               	movwf	tblptrh,c
   340  003DCA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   341  003DCC  6EF8               	movwf	tblptru,c
   342  003DCE  EE01  F0C6         	lfsr	0,__pdataBANK1
   343  003DD2  EE10 F022          	lfsr	1,34
   344  003DD6                     copy_data0:
   345  003DD6  0009               	tblrd		*+
   346  003DD8  CFF5 FFEE          	movff	tablat,postinc0
   347  003DDC  50E5               	movf	postdec1,w,c
   348  003DDE  50E1               	movf	fsr1l,w,c
   349  003DE0  E1FA               	bnz	copy_data0
   350                           
   351                           ; Clear objects allocated to BANK1 (134 bytes)
   352  003DE2  EE01  F000         	lfsr	0,__pbssBANK1
   353  003DE6  0E86               	movlw	134
   354  003DE8                     clear_0:
   355  003DE8  6AEE               	clrf	postinc0,c
   356  003DEA  06E8               	decf	wreg,f,c
   357  003DEC  E1FD               	bnz	clear_0
   358                           
   359                           ; Clear objects allocated to BANK0 (2 bytes)
   360  003DEE  0100               	movlb	0
   361  003DF0  6BE4               	clrf	(__pbssBANK0+1)& (0+255),b
   362  003DF2  6BE3               	clrf	__pbssBANK0& (0+255),b
   363                           
   364                           ; Clear objects allocated to COMRAM (16 bytes)
   365  003DF4  EE00  F037         	lfsr	0,__pbssCOMRAM
   366  003DF8  0E10               	movlw	16
   367  003DFA                     clear_1:
   368  003DFA  6AEE               	clrf	postinc0,c
   369  003DFC  06E8               	decf	wreg,f,c
   370  003DFE  E1FD               	bnz	clear_1
   371  003E00                     end_of_initialization:
   372                           	opt callstack 0
   373  003E00                     __end_of__initialization:
   374                           	opt callstack 0
   375  003E00  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   376  003E02  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   377  003E04  0100               	movlb	0
   378  003E06  EF24  F00D         	goto	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMRAM
   381  000037                     __pbssCOMRAM:
   382                           	opt callstack 0
   383  000037                     floorf@F524:
   384                           	opt callstack 0
   385  000037                     	ds	4
   386  00003B                     ___fpclassifyf@F463:
   387                           	opt callstack 0
   388  00003B                     	ds	4
   389  00003F                     _nout:
   390                           	opt callstack 0
   391  00003F                     	ds	2
   392  000041                     _width:
   393                           	opt callstack 0
   394  000041                     	ds	2
   395  000043                     _prec:
   396                           	opt callstack 0
   397  000043                     	ds	2
   398  000045                     _Alive_count:
   399                           	opt callstack 0
   400  000045                     	ds	2
   401                           
   402                           	psect	bssBANK0
   403  0000E3                     __pbssBANK0:
   404                           	opt callstack 0
   405  0000E3                     _flags:
   406                           	opt callstack 0
   407  0000E3                     	ds	2
   408                           
   409                           	psect	bssBANK1
   410  000100                     __pbssBANK1:
   411                           	opt callstack 0
   412  000100                     _USART_BUFFER:
   413                           	opt callstack 0
   414  000100                     	ds	10
   415  00010A                     _voltage:
   416                           	opt callstack 0
   417  00010A                     	ds	4
   418  00010E                     _temperature:
   419                           	opt callstack 0
   420  00010E                     	ds	4
   421  000112                     _OLD_INDEX:
   422                           	opt callstack 0
   423  000112                     	ds	2
   424  000114                     _INDEX:
   425                           	opt callstack 0
   426  000114                     	ds	2
   427  000116                     _dbuf:
   428                           	opt callstack 0
   429  000116                     	ds	80
   430  000166                     _temperatureString:
   431                           	opt callstack 0
   432  000166                     	ds	10
   433  000170                     _potString:
   434                           	opt callstack 0
   435  000170                     	ds	10
   436  00017A                     _commandString:
   437                           	opt callstack 0
   438  00017A                     	ds	10
   439  000184                     _analogResult:
   440                           	opt callstack 0
   441  000184                     	ds	2
   442                           
   443                           	psect	dataBANK1
   444  0001C6                     __pdataBANK1:
   445                           	opt callstack 0
   446  0001C6                     HiPriISR@F7424:
   447                           	opt callstack 0
   448  0001C6                     	ds	18
   449  0001D8                     _command:
   450                           	opt callstack 0
   451  0001D8                     	ds	16
   452                           
   453                           	psect	cstackBANK2
   454  000200                     __pcstackBANK2:
   455                           	opt callstack 0
   456  000200                     main@tempString:
   457                           	opt callstack 0
   458                           
   459                           ; 10 bytes @ 0x0
   460  000200                     	ds	12
   461  00020C                     _main$2197:
   462                           	opt callstack 0
   463                           
   464                           ; 4 bytes @ 0xC
   465  00020C                     	ds	4
   466  000210                     main@c:
   467                           	opt callstack 0
   468                           
   469                           ; 2 bytes @ 0x10
   470  000210                     	ds	2
   471  000212                     main@convCount:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475  000212                     	ds	2
   476  000214                     main@convCount_1122:
   477                           	opt callstack 0
   478                           
   479                           ; 2 bytes @ 0x14
   480  000214                     	ds	2
   481  000216                     main@i_1125:
   482                           	opt callstack 0
   483                           
   484                           ; 2 bytes @ 0x16
   485  000216                     	ds	2
   486  000218                     main@firstResult:
   487                           	opt callstack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  000218                     	ds	2
   491  00021A                     main@i:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x1A
   495  00021A                     	ds	2
   496  00021C                     main@i_1126:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x1C
   500  00021C                     	ds	2
   501  00021E                     main@i_1120:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x1E
   505  00021E                     	ds	2
   506  000220                     main@i_1124:
   507                           	opt callstack 0
   508                           
   509                           ; 2 bytes @ 0x20
   510  000220                     	ds	2
   511                           
   512                           	psect	cstackBANK1
   513  000186                     __pcstackBANK1:
   514                           	opt callstack 0
   515  000186                     efgtoa@ou:
   516                           	opt callstack 0
   517                           
   518                           ; 4 bytes @ 0x0
   519  000186                     	ds	4
   520  00018A                     _efgtoa$1372:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x4
   524  00018A                     	ds	2
   525  00018C                     _efgtoa$1373:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x6
   529  00018C                     	ds	2
   530  00018E                     _efgtoa$1378:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x8
   534  00018E                     	ds	2
   535  000190                     _efgtoa$1382:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0xA
   539  000190                     	ds	2
   540  000192                     _efgtoa$1383:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0xC
   544  000192                     	ds	2
   545  000194                     _efgtoa$1384:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0xE
   549  000194                     	ds	2
   550  000196                     efgtoa@t:
   551                           	opt callstack 0
   552                           
   553                           ; 2 bytes @ 0x10
   554  000196                     	ds	2
   555  000198                     efgtoa@pp:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x12
   559  000198                     	ds	2
   560  00019A                     efgtoa@m:
   561                           	opt callstack 0
   562                           
   563                           ; 2 bytes @ 0x14
   564  00019A                     	ds	2
   565  00019C                     efgtoa@ne:
   566                           	opt callstack 0
   567                           
   568                           ; 2 bytes @ 0x16
   569  00019C                     	ds	2
   570  00019E                     efgtoa@d:
   571                           	opt callstack 0
   572                           
   573                           ; 2 bytes @ 0x18
   574  00019E                     	ds	2
   575  0001A0                     efgtoa@sign:
   576                           	opt callstack 0
   577                           
   578                           ; 2 bytes @ 0x1A
   579  0001A0                     	ds	2
   580  0001A2                     efgtoa@p:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x1C
   584  0001A2                     	ds	2
   585  0001A4                     efgtoa@nmode:
   586                           	opt callstack 0
   587                           
   588                           ; 1 bytes @ 0x1E
   589  0001A4                     	ds	1
   590  0001A5                     efgtoa@w:
   591                           	opt callstack 0
   592                           
   593                           ; 2 bytes @ 0x1F
   594  0001A5                     	ds	2
   595  0001A7                     efgtoa@mode:
   596                           	opt callstack 0
   597                           
   598                           ; 1 bytes @ 0x21
   599  0001A7                     	ds	1
   600  0001A8                     efgtoa@h:
   601                           	opt callstack 0
   602                           
   603                           ; 4 bytes @ 0x22
   604  0001A8                     	ds	4
   605  0001AC                     efgtoa@l:
   606                           	opt callstack 0
   607                           
   608                           ; 4 bytes @ 0x26
   609  0001AC                     	ds	4
   610  0001B0                     efgtoa@i:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x2A
   614  0001B0                     	ds	2
   615  0001B2                     efgtoa@g:
   616                           	opt callstack 0
   617                           
   618                           ; 4 bytes @ 0x2C
   619  0001B2                     	ds	4
   620  0001B6                     efgtoa@e:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x30
   624  0001B6                     	ds	2
   625  0001B8                     efgtoa@n:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x32
   629  0001B8                     	ds	2
   630  0001BA                     efgtoa@u:
   631                           	opt callstack 0
   632                           
   633                           ; 4 bytes @ 0x34
   634  0001BA                     	ds	4
   635  0001BE                     ?_sprintf:
   636                           	opt callstack 0
   637  0001BE                     sprintf@s:
   638                           	opt callstack 0
   639                           
   640                           ; 2 bytes @ 0x38
   641  0001BE                     	ds	2
   642  0001C0                     sprintf@fmt:
   643                           	opt callstack 0
   644                           
   645                           ; 2 bytes @ 0x3A
   646  0001C0                     	ds	6
   647                           
   648                           	psect	cstackBANK0
   649  000060                     __pcstackBANK0:
   650                           	opt callstack 0
   651  000060                     ??i1___fltol:
   652                           
   653                           ; 1 bytes @ 0x0
   654  000060                     	ds	5
   655  000065                     TMR1handler@VperBin:
   656                           	opt callstack 0
   657                           
   658                           ; 4 bytes @ 0x5
   659  000065                     	ds	4
   660  000069                     TMR1handler@bins_upper:
   661                           	opt callstack 0
   662                           
   663                           ; 1 bytes @ 0x9
   664  000069                     	ds	1
   665  00006A                     TMR1handler@bins_lower:
   666                           	opt callstack 0
   667                           
   668                           ; 1 bytes @ 0xA
   669  00006A                     	ds	1
   670  00006B                     TMR1handler@bins:
   671                           	opt callstack 0
   672                           
   673                           ; 2 bytes @ 0xB
   674  00006B                     	ds	2
   675  00006D                     ??_LoPriISR:
   676                           
   677                           ; 1 bytes @ 0xD
   678  00006D                     	ds	3
   679  000070                     ??_InitLCD:
   680  000070                     ?_strlen:
   681                           	opt callstack 0
   682  000070                     ?_strcmp:
   683                           	opt callstack 0
   684  000070                     ?___fpclassifyf:
   685                           	opt callstack 0
   686  000070                     ?_isupper:
   687                           	opt callstack 0
   688  000070                     ?_isdigit:
   689                           	opt callstack 0
   690  000070                     ?_strncmp:
   691                           	opt callstack 0
   692  000070                     ?_isspace:
   693                           	opt callstack 0
   694  000070                     ?___wmul:
   695                           	opt callstack 0
   696  000070                     ?___awdiv:
   697                           	opt callstack 0
   698  000070                     ?___awmod:
   699                           	opt callstack 0
   700  000070                     ?___fladd:
   701                           	opt callstack 0
   702  000070                     ?___flneg:
   703                           	opt callstack 0
   704  000070                     ?___fltol:
   705                           	opt callstack 0
   706  000070                     ?___xxtofl:
   707                           	opt callstack 0
   708  000070                     DisplayV@LCDStr:
   709                           	opt callstack 0
   710  000070                     ___wmul@multiplier:
   711                           	opt callstack 0
   712  000070                     ___awdiv@dividend:
   713                           	opt callstack 0
   714  000070                     ___awmod@dividend:
   715                           	opt callstack 0
   716  000070                     isdigit@c:
   717                           	opt callstack 0
   718  000070                     isspace@c:
   719                           	opt callstack 0
   720  000070                     isupper@c:
   721                           	opt callstack 0
   722  000070                     fputc@c:
   723                           	opt callstack 0
   724  000070                     strcmp@l:
   725                           	opt callstack 0
   726  000070                     strcpy@dest:
   727                           	opt callstack 0
   728  000070                     strlen@s:
   729                           	opt callstack 0
   730  000070                     strncmp@_l:
   731                           	opt callstack 0
   732  000070                     ___fleq@ff1:
   733                           	opt callstack 0
   734  000070                     ___flneg@f1:
   735                           	opt callstack 0
   736  000070                     ___fltol@f1:
   737                           	opt callstack 0
   738  000070                     ___fladd@b:
   739                           	opt callstack 0
   740  000070                     ___xxtofl@val:
   741                           	opt callstack 0
   742  000070                     ___fpclassifyf@x:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0x10
   746  000070                     	ds	1
   747  000071                     InitLCD@count:
   748                           	opt callstack 0
   749                           
   750                           ; 1 bytes @ 0x11
   751  000071                     	ds	1
   752  000072                     ??_isupper:
   753  000072                     ??_isdigit:
   754  000072                     ??_isspace:
   755  000072                     InitLCD@nibble:
   756                           	opt callstack 0
   757  000072                     DisplayV@nibble:
   758                           	opt callstack 0
   759  000072                     ___wmul@multiplicand:
   760                           	opt callstack 0
   761  000072                     ___awdiv@divisor:
   762                           	opt callstack 0
   763  000072                     ___awmod@divisor:
   764                           	opt callstack 0
   765  000072                     fputc@fp:
   766                           	opt callstack 0
   767  000072                     strcmp@r:
   768                           	opt callstack 0
   769  000072                     strcpy@src:
   770                           	opt callstack 0
   771  000072                     strlen@a:
   772                           	opt callstack 0
   773  000072                     strncmp@_r:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x12
   777  000072                     	ds	1
   778  000073                     DisplayV@count:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x13
   782  000073                     	ds	1
   783  000074                     ??_strcpy:
   784  000074                     ??_strcmp:
   785  000074                     ??_fputc:
   786  000074                     ??___fpclassifyf:
   787  000074                     ??___fltol:
   788  000074                     ??___xxtofl:
   789  000074                     ___awdiv@counter:
   790                           	opt callstack 0
   791  000074                     ___awmod@counter:
   792                           	opt callstack 0
   793  000074                     sendChars@letters:
   794                           	opt callstack 0
   795  000074                     ___wmul@product:
   796                           	opt callstack 0
   797  000074                     strncmp@n:
   798                           	opt callstack 0
   799  000074                     ___fleq@ff2:
   800                           	opt callstack 0
   801  000074                     ___fladd@a:
   802                           	opt callstack 0
   803                           
   804                           ; 4 bytes @ 0x14
   805  000074                     	ds	1
   806  000075                     ___awdiv@sign:
   807                           	opt callstack 0
   808  000075                     ___awmod@sign:
   809                           	opt callstack 0
   810                           
   811                           ; 1 bytes @ 0x15
   812  000075                     	ds	1
   813  000076                     ??_strncmp:
   814  000076                     ??_sendChars:
   815  000076                     ?_tolower:
   816                           	opt callstack 0
   817  000076                     _isspace$1904:
   818                           	opt callstack 0
   819  000076                     ___awdiv@quotient:
   820                           	opt callstack 0
   821  000076                     strcpy@s:
   822                           	opt callstack 0
   823  000076                     tolower@c:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x16
   827  000076                     	ds	1
   828  000077                     ?_atoi:
   829                           	opt callstack 0
   830  000077                     atoi@s:
   831                           	opt callstack 0
   832  000077                     strncmp@l:
   833                           	opt callstack 0
   834                           
   835                           ; 2 bytes @ 0x17
   836  000077                     	ds	1
   837  000078                     ??_tolower:
   838  000078                     ??___fladd:
   839  000078                     ??___fleq:
   840  000078                     ___fltol@sign1:
   841                           	opt callstack 0
   842  000078                     ___xxtofl@sign:
   843                           	opt callstack 0
   844  000078                     sendChars@count:
   845                           	opt callstack 0
   846  000078                     ___fpclassifyf@e:
   847                           	opt callstack 0
   848  000078                     strcpy@d:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x18
   852  000078                     	ds	1
   853  000079                     ??_atoi:
   854  000079                     ___fltol@exp1:
   855                           	opt callstack 0
   856  000079                     ___xxtofl@exp:
   857                           	opt callstack 0
   858  000079                     fputs@s:
   859                           	opt callstack 0
   860  000079                     strncmp@r:
   861                           	opt callstack 0
   862                           
   863                           ; 2 bytes @ 0x19
   864  000079                     	ds	1
   865  00007A                     DisplayC@LCDStr:
   866                           	opt callstack 0
   867  00007A                     ___xxtofl@arg:
   868                           	opt callstack 0
   869  00007A                     ___fpclassifyf@u:
   870                           	opt callstack 0
   871  00007A                     dispTemp@temp:
   872                           	opt callstack 0
   873  00007A                     dispPot@temp:
   874                           	opt callstack 0
   875                           
   876                           ; 10 bytes @ 0x1A
   877  00007A                     	ds	1
   878  00007B                     fputs@fp:
   879                           	opt callstack 0
   880                           
   881                           ; 2 bytes @ 0x1B
   882  00007B                     	ds	1
   883  00007C                     ___fladd@signs:
   884                           	opt callstack 0
   885  00007C                     _tolower$1992:
   886                           	opt callstack 0
   887  00007C                     DisplayC@temp:
   888                           	opt callstack 0
   889                           
   890                           ; 10 bytes @ 0x1C
   891  00007C                     	ds	1
   892  00007D                     ___fladd@aexp:
   893                           	opt callstack 0
   894  00007D                     fputs@c:
   895                           	opt callstack 0
   896  00007D                     atoi@neg:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x1D
   900  00007D                     	ds	1
   901  00007E                     ?___fldiv:
   902                           	opt callstack 0
   903  00007E                     ?___flmul:
   904                           	opt callstack 0
   905  00007E                     ___fladd@bexp:
   906                           	opt callstack 0
   907  00007E                     fputs@i:
   908                           	opt callstack 0
   909  00007E                     ___fldiv@b:
   910                           	opt callstack 0
   911  00007E                     ___flmul@b:
   912                           	opt callstack 0
   913                           
   914                           ; 4 bytes @ 0x1E
   915  00007E                     	ds	1
   916  00007F                     ___fladd@grs:
   917                           	opt callstack 0
   918  00007F                     _atoi$1873:
   919                           	opt callstack 0
   920                           
   921                           ; 2 bytes @ 0x1F
   922  00007F                     	ds	1
   923  000080                     ?_pad:
   924                           	opt callstack 0
   925  000080                     pad@fp:
   926                           	opt callstack 0
   927                           
   928                           ; 2 bytes @ 0x20
   929  000080                     	ds	1
   930  000081                     _atoi$1875:
   931                           	opt callstack 0
   932                           
   933                           ; 2 bytes @ 0x21
   934  000081                     	ds	1
   935  000082                     pad@buf:
   936                           	opt callstack 0
   937  000082                     ___fldiv@a:
   938                           	opt callstack 0
   939  000082                     ___flmul@a:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x22
   943  000082                     	ds	1
   944  000083                     _atoi$1874:
   945                           	opt callstack 0
   946                           
   947                           ; 1 bytes @ 0x23
   948  000083                     	ds	1
   949  000084                     dispTemp@i:
   950                           	opt callstack 0
   951  000084                     dispPot@i:
   952                           	opt callstack 0
   953  000084                     pad@p:
   954                           	opt callstack 0
   955  000084                     atoi@n:
   956                           	opt callstack 0
   957                           
   958                           ; 2 bytes @ 0x24
   959  000084                     	ds	2
   960  000086                     ??___fldiv:
   961  000086                     ??___flmul:
   962  000086                     ??_pad:
   963  000086                     checkCommand@cmd:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x26
   967  000086                     	ds	1
   968  000087                     pad@i:
   969                           	opt callstack 0
   970                           
   971                           ; 2 bytes @ 0x27
   972  000087                     	ds	1
   973  000088                     
   974                           ; 1 bytes @ 0x28
   975  000088                     	ds	1
   976  000089                     pad@w:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x29
   980  000089                     	ds	1
   981  00008A                     ___flmul@sign:
   982                           	opt callstack 0
   983  00008A                     ___fldiv@rem:
   984                           	opt callstack 0
   985                           
   986                           ; 4 bytes @ 0x2A
   987  00008A                     	ds	1
   988  00008B                     ___flmul@aexp:
   989                           	opt callstack 0
   990                           
   991                           ; 1 bytes @ 0x2B
   992  00008B                     	ds	1
   993  00008C                     ___flmul@grs:
   994                           	opt callstack 0
   995                           
   996                           ; 4 bytes @ 0x2C
   997  00008C                     	ds	2
   998  00008E                     ___fldiv@sign:
   999                           	opt callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x2E
  1002  00008E                     	ds	1
  1003  00008F                     ___fldiv@new_exp:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x2F
  1007  00008F                     	ds	1
  1008  000090                     ___flmul@bexp:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x30
  1012  000090                     	ds	1
  1013  000091                     ___fldiv@grs:
  1014                           	opt callstack 0
  1015  000091                     ___flmul@prod:
  1016                           	opt callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x31
  1019  000091                     	ds	4
  1020  000095                     ___fldiv@bexp:
  1021                           	opt callstack 0
  1022  000095                     ___flmul@temp:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x35
  1026  000095                     	ds	1
  1027  000096                     ___fldiv@aexp:
  1028                           	opt callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x36
  1031  000096                     	ds	1
  1032  000097                     ?_floorf:
  1033                           	opt callstack 0
  1034  000097                     ?___flsub:
  1035                           	opt callstack 0
  1036  000097                     ___flge@ff1:
  1037                           	opt callstack 0
  1038  000097                     ___flsub@b:
  1039                           	opt callstack 0
  1040  000097                     floorf@x:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x37
  1044  000097                     	ds	4
  1045  00009B                     ??_floorf:
  1046  00009B                     ___flge@ff2:
  1047                           	opt callstack 0
  1048  00009B                     ___flsub@a:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x3B
  1052  00009B                     	ds	4
  1053  00009F                     ??___flge:
  1054                           
  1055                           ; 1 bytes @ 0x3F
  1056  00009F                     	ds	2
  1057  0000A1                     floorf@m:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x41
  1061  0000A1                     	ds	4
  1062  0000A5                     floorf@e:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x45
  1066  0000A5                     	ds	2
  1067  0000A7                     floorf@u:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x47
  1071  0000A7                     	ds	4
  1072  0000AB                     ?_efgtoa:
  1073                           	opt callstack 0
  1074  0000AB                     efgtoa@fp:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x4B
  1078  0000AB                     	ds	2
  1079  0000AD                     efgtoa@f:
  1080                           	opt callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x4D
  1083  0000AD                     	ds	4
  1084  0000B1                     efgtoa@c:
  1085                           	opt callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x51
  1088  0000B1                     	ds	1
  1089  0000B2                     ??_efgtoa:
  1090                           
  1091                           ; 1 bytes @ 0x52
  1092  0000B2                     	ds	5
  1093  0000B7                     ?_vfpfcnvrt:
  1094                           	opt callstack 0
  1095  0000B7                     vfpfcnvrt@fp:
  1096                           	opt callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x57
  1099  0000B7                     	ds	2
  1100  0000B9                     vfpfcnvrt@fmt:
  1101                           	opt callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x59
  1104  0000B9                     	ds	2
  1105  0000BB                     vfpfcnvrt@ap:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x5B
  1109  0000BB                     	ds	2
  1110  0000BD                     ??_vfpfcnvrt:
  1111                           
  1112                           ; 1 bytes @ 0x5D
  1113  0000BD                     	ds	4
  1114  0000C1                     _vfpfcnvrt$1398:
  1115                           	opt callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x61
  1118  0000C1                     	ds	2
  1119  0000C3                     _vfpfcnvrt$1402:
  1120                           	opt callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x63
  1123  0000C3                     	ds	2
  1124  0000C5                     vfpfcnvrt@f:
  1125                           	opt callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x65
  1128  0000C5                     	ds	4
  1129  0000C9                     vfpfcnvrt@ct:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 3 bytes @ 0x69
  1133  0000C9                     	ds	3
  1134  0000CC                     vfpfcnvrt@c:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x6C
  1138  0000CC                     	ds	1
  1139  0000CD                     ?_vfprintf:
  1140                           	opt callstack 0
  1141  0000CD                     vfprintf@fp:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x6D
  1145  0000CD                     	ds	2
  1146  0000CF                     vfprintf@fmt:
  1147                           	opt callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x6F
  1150  0000CF                     	ds	2
  1151  0000D1                     vfprintf@ap:
  1152                           	opt callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x71
  1155  0000D1                     	ds	2
  1156  0000D3                     vfprintf@cfmt:
  1157                           	opt callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x73
  1160  0000D3                     	ds	2
  1161  0000D5                     
  1162                           ; 1 bytes @ 0x75
  1163  0000D5                     	ds	2
  1164  0000D7                     sprintf@ap:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x77
  1168  0000D7                     	ds	2
  1169  0000D9                     sprintf@f:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 6 bytes @ 0x79
  1173  0000D9                     	ds	6
  1174  0000DF                     ??_main:
  1175                           
  1176                           ; 1 bytes @ 0x7F
  1177  0000DF                     	ds	4
  1178                           
  1179                           	psect	cstackCOMRAM
  1180  000001                     __pcstackCOMRAM:
  1181                           	opt callstack 0
  1182  000001                     ??_HiPriISR:
  1183  000001                     
  1184                           ; 1 bytes @ 0x0
  1185  000001                     	ds	4
  1186  000005                     HiPriISR@LCDOUT:
  1187                           	opt callstack 0
  1188                           
  1189                           ; 18 bytes @ 0x4
  1190  000005                     	ds	18
  1191  000017                     HiPriISR@letter:
  1192                           	opt callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x16
  1195  000017                     	ds	1
  1196  000018                     ??_TMR0handler:
  1197  000018                     ?i1___fldiv:
  1198                           	opt callstack 0
  1199  000018                     i1___fldiv@b:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x17
  1203  000018                     	ds	4
  1204  00001C                     i1___fldiv@a:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x1B
  1208  00001C                     	ds	4
  1209  000020                     ??i1___fldiv:
  1210                           
  1211                           ; 1 bytes @ 0x1F
  1212  000020                     	ds	4
  1213  000024                     i1___fldiv@rem:
  1214                           	opt callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x23
  1217  000024                     	ds	4
  1218  000028                     i1___fldiv@sign:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x27
  1222  000028                     	ds	1
  1223  000029                     i1___fldiv@new_exp:
  1224                           	opt callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x28
  1227  000029                     	ds	2
  1228  00002B                     i1___fldiv@grs:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x2A
  1232  00002B                     	ds	4
  1233  00002F                     i1___fldiv@bexp:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x2E
  1237  00002F                     	ds	1
  1238  000030                     i1___fldiv@aexp:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x2F
  1242  000030                     	ds	1
  1243  000031                     ?i1___fltol:
  1244                           	opt callstack 0
  1245  000031                     i1___fltol@f1:
  1246                           	opt callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x30
  1249  000031                     	ds	4
  1250  000035                     i1___fltol@sign1:
  1251                           	opt callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x34
  1254  000035                     	ds	1
  1255  000036                     i1___fltol@exp1:
  1256                           	opt callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x35
  1259  000036                     	ds	1
  1260  000037                     
  1261                           ; 1 bytes @ 0x36
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 97 in file "George_Wyatt_Lab6.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  i               2   32[BANK2 ] int 
  1272 ;;  i               2   30[BANK2 ] int 
  1273 ;;  i               2   28[BANK2 ] int 
  1274 ;;  i               2   22[BANK2 ] int 
  1275 ;;  convCount       2   20[BANK2 ] int 
  1276 ;;  convCount       2   18[BANK2 ] int 
  1277 ;;  i               2   26[BANK2 ] int 
  1278 ;;  tempString     10    0[BANK2 ] unsigned char [10]
  1279 ;;  firstResult     2   24[BANK2 ] int 
  1280 ;;  c               2   16[BANK2 ] int 
  1281 ;;  temp            2    0        int 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Totals:         0       4       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;Total ram usage:       38 bytes
  1296 ;; Hardware stack levels required when called:   12
  1297 ;; This function calls:
  1298 ;;		_DisplayC
  1299 ;;		_Initial
  1300 ;;		___fldiv
  1301 ;;		___flmul
  1302 ;;		___xxtofl
  1303 ;;		_checkCommand
  1304 ;;		_sprintf
  1305 ;;		_strcpy
  1306 ;; This function is called by:
  1307 ;;		Startup code after reset
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text0
  1312  001A48                     __ptext0:
  1313                           	opt callstack 0
  1314  001A48                     _main:
  1315                           	opt callstack 19
  1316                           
  1317                           ;George_Wyatt_Lab6.c: 100: ;George_Wyatt_Lab6.c: 101: ;George_Wyatt_Lab6.c: 103:        
      +                               c = 0;
  1318                           
  1319                           ;incstack = 0
  1320  001A48  EC83  F01B         	call	_Initial	;wreg free
  1321  001A4C                     l6807:
  1322                           
  1323                           ;George_Wyatt_Lab6.c: 107:             }
  1324  001A4C  C114  F112         	movff	_INDEX,_OLD_INDEX
  1325  001A50  C115  F113         	movff	_INDEX+1,_OLD_INDEX+1
  1326                           
  1327                           ;George_Wyatt_Lab6.c: 108:             INDEX = 0;
  1328  001A54  0E00               	movlw	0
  1329  001A56  0102               	movlb	2	; () banked
  1330  001A58  6F1B               	movwf	(main@i+1)& (0+255),b
  1331  001A5A  0E00               	movlw	0
  1332  001A5C  6F1A               	movwf	main@i& (0+255),b
  1333  001A5E                     l6815:
  1334                           
  1335                           ; BSR set to: 2
  1336  001A5E  0E7A               	movlw	low _commandString
  1337  001A60  251A               	addwf	main@i& (0+255),w,b
  1338  001A62  6ED9               	movwf	fsr2l,c
  1339  001A64  0E01               	movlw	high _commandString
  1340  001A66  211B               	addwfc	(main@i+1)& (0+255),w,b
  1341  001A68  6EDA               	movwf	fsr2h,c
  1342  001A6A  0E00               	movlw	0
  1343  001A6C  6EDF               	movwf	indf2,c
  1344                           
  1345                           ; BSR set to: 2
  1346  001A6E  4B1A               	infsnz	main@i& (0+255),f,b
  1347  001A70  2B1B               	incf	(main@i+1)& (0+255),f,b
  1348                           
  1349                           ; BSR set to: 2
  1350  001A72  511B               	movf	(main@i+1)& (0+255),w,b
  1351  001A74  E104               	bnz	u8850
  1352  001A76  0E0A               	movlw	10
  1353  001A78  5D1A               	subwf	main@i& (0+255),w,b
  1354  001A7A  A0D8               	btfss	status,0,c
  1355  001A7C  D7F0               	goto	l6815
  1356  001A7E                     u8850:
  1357                           
  1358                           ; BSR set to: 2
  1359                           ;George_Wyatt_Lab6.c: 111:           }
  1360  001A7E  0E01               	movlw	1
  1361  001A80  6EC2               	movwf	4034,c	;volatile
  1362                           
  1363                           ;George_Wyatt_Lab6.c: 112:      }
  1364  001A82  0E00               	movlw	0
  1365  001A84  6F19               	movwf	(main@firstResult+1)& (0+255),b
  1366  001A86  0E00               	movlw	0
  1367  001A88  6F18               	movwf	main@firstResult& (0+255),b
  1368                           
  1369                           ;George_Wyatt_Lab6.c: 113: }
  1370  001A8A  0E00               	movlw	0
  1371  001A8C  6F13               	movwf	(main@convCount+1)& (0+255),b
  1372  001A8E  0E00               	movlw	0
  1373  001A90  6F12               	movwf	main@convCount& (0+255),b
  1374  001A92                     l183:
  1375                           
  1376                           ; BSR set to: 2
  1377  001A92  82C2               	bsf	4034,1,c	;volatile
  1378  001A94                     l185:
  1379  001A94  B2C2               	btfsc	4034,1,c	;volatile
  1380  001A96  D7FE               	goto	l185
  1381  001A98  AA8C               	btfss	3980,5,c	;volatile
  1382  001A9A  D002               	goto	u8870
  1383  001A9C  0E01               	movlw	1
  1384  001A9E  D001               	goto	u8876
  1385  001AA0                     u8870:
  1386  001AA0  0E00               	movlw	0
  1387  001AA2                     u8876:
  1388  001AA2  0AFF               	xorlw	255
  1389  001AA4  0100               	movlb	0	; () banked
  1390  001AA6  6FDF               	movwf	??_main& (0+255),b
  1391  001AA8  3BDF               	swapf	??_main& (0+255),f,b
  1392  001AAA  47DF               	rlncf	??_main& (0+255),f,b
  1393  001AAC  508C               	movf	3980,w,c	;volatile
  1394  001AAE  19DF               	xorwf	??_main& (0+255),w,b
  1395  001AB0  0BDF               	andlw	-33
  1396  001AB2  19DF               	xorwf	??_main& (0+255),w,b
  1397  001AB4  6E8C               	movwf	3980,c	;volatile
  1398                           
  1399                           ; BSR set to: 0
  1400  001AB6  9C9E               	bcf	3998,6,c	;volatile
  1401  001AB8  0102               	movlb	2	; () banked
  1402  001ABA  0518               	decf	main@firstResult& (0+255),w,b
  1403  001ABC  1119               	iorwf	(main@firstResult+1)& (0+255),w,b
  1404  001ABE  A4D8               	btfss	status,2,c
  1405  001AC0  D005               	goto	l188
  1406                           
  1407                           ; BSR set to: 2
  1408                           
  1409                           ; BSR set to: 2
  1410  001AC2  0E00               	movlw	0
  1411  001AC4  6F19               	movwf	(main@firstResult+1)& (0+255),b
  1412  001AC6  0E00               	movlw	0
  1413  001AC8  6F18               	movwf	main@firstResult& (0+255),b
  1414  001ACA  D0A1               	goto	l6857
  1415  001ACC                     l188:
  1416                           
  1417                           ; BSR set to: 2
  1418  001ACC  CFC3 F184          	movff	4035,_analogResult	;volatile
  1419  001AD0  CFC4 F185          	movff	4036,_analogResult+1	;volatile
  1420                           
  1421                           ; BSR set to: 2
  1422  001AD4  0E6F               	movlw	111
  1423  001AD6  0100               	movlb	0	; () banked
  1424  001AD8  6F82               	movwf	___flmul@a& (0+255),b
  1425  001ADA  0E12               	movlw	18
  1426  001ADC  6F83               	movwf	(___flmul@a+1)& (0+255),b
  1427  001ADE  0E83               	movlw	131
  1428  001AE0  6F84               	movwf	(___flmul@a+2)& (0+255),b
  1429  001AE2  0E3A               	movlw	58
  1430  001AE4  6F85               	movwf	(___flmul@a+3)& (0+255),b
  1431  001AE6  C184  F070         	movff	_analogResult,___xxtofl@val
  1432  001AEA  C185  F071         	movff	_analogResult+1,___xxtofl@val+1
  1433  001AEE  0E00               	movlw	0
  1434  001AF0  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1435  001AF2  0EFF               	movlw	-1
  1436  001AF4  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1437  001AF6  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1438  001AF8  0E01               	movlw	1
  1439  001AFA  EC4D  F018         	call	___xxtofl
  1440  001AFE  C070  F07E         	movff	?___xxtofl,___flmul@b
  1441  001B02  C071  F07F         	movff	?___xxtofl+1,___flmul@b+1
  1442  001B06  C072  F080         	movff	?___xxtofl+2,___flmul@b+2
  1443  001B0A  C073  F081         	movff	?___xxtofl+3,___flmul@b+3
  1444  001B0E  EC0A  F011         	call	___flmul	;wreg free
  1445  001B12  C07E  F20C         	movff	?___flmul,_main$2197
  1446  001B16  C07F  F20D         	movff	?___flmul+1,_main$2197+1
  1447  001B1A  C080  F20E         	movff	?___flmul+2,_main$2197+2
  1448  001B1E  C081  F20F         	movff	?___flmul+3,_main$2197+3
  1449  001B22  C20C  F07E         	movff	_main$2197,___flmul@b
  1450  001B26  C20D  F07F         	movff	_main$2197+1,___flmul@b+1
  1451  001B2A  C20E  F080         	movff	_main$2197+2,___flmul@b+2
  1452  001B2E  C20F  F081         	movff	_main$2197+3,___flmul@b+3
  1453  001B32  0ECE               	movlw	206
  1454  001B34  0100               	movlb	0	; () banked
  1455  001B36  6F82               	movwf	___flmul@a& (0+255),b
  1456  001B38  0E19               	movlw	25
  1457  001B3A  6F83               	movwf	(___flmul@a+1)& (0+255),b
  1458  001B3C  0E51               	movlw	81
  1459  001B3E  6F84               	movwf	(___flmul@a+2)& (0+255),b
  1460  001B40  0E3F               	movlw	63
  1461  001B42  6F85               	movwf	(___flmul@a+3)& (0+255),b
  1462  001B44  EC0A  F011         	call	___flmul	;wreg free
  1463  001B48  C07E  F10A         	movff	?___flmul,_voltage
  1464  001B4C  C07F  F10B         	movff	?___flmul+1,_voltage+1
  1465  001B50  C080  F10C         	movff	?___flmul+2,_voltage+2
  1466  001B54  C081  F10D         	movff	?___flmul+3,_voltage+3
  1467  001B58  0E70               	movlw	low _potString
  1468  001B5A  0101               	movlb	1	; () banked
  1469  001B5C  6FBE               	movwf	sprintf@s& (0+255),b
  1470  001B5E  0E01               	movlw	high _potString
  1471  001B60  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1472  001B62  0E3A               	movlw	low STR_1
  1473  001B64  6FC0               	movwf	sprintf@fmt& (0+255),b
  1474  001B66  0E10               	movlw	high STR_1
  1475  001B68  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1476  001B6A  C10A  F1C2         	movff	_voltage,?_sprintf+4
  1477  001B6E  C10B  F1C3         	movff	_voltage+1,?_sprintf+5
  1478  001B72  C10C  F1C4         	movff	_voltage+2,?_sprintf+6
  1479  001B76  C10D  F1C5         	movff	_voltage+3,?_sprintf+7
  1480  001B7A  EC37  F01E         	call	_sprintf	;wreg free
  1481  001B7E  0E00               	movlw	low main@tempString
  1482  001B80  0100               	movlb	0	; () banked
  1483  001B82  6F70               	movwf	strcpy@dest& (0+255),b
  1484  001B84  0E02               	movlw	high main@tempString
  1485  001B86  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  1486  001B88  0E70               	movlw	low _potString
  1487  001B8A  6F72               	movwf	strcpy@src& (0+255),b
  1488  001B8C  0E01               	movlw	high _potString
  1489  001B8E  6F73               	movwf	(strcpy@src+1)& (0+255),b
  1490  001B90  EC8F  F01E         	call	_strcpy	;wreg free
  1491  001B94  0E00               	movlw	0
  1492  001B96  0102               	movlb	2	; () banked
  1493  001B98  6F1F               	movwf	(main@i_1120+1)& (0+255),b
  1494  001B9A  0E04               	movlw	4
  1495  001B9C  6F1E               	movwf	main@i_1120& (0+255),b
  1496  001B9E                     l6847:
  1497                           
  1498                           ; BSR set to: 2
  1499  001B9E  0EFC               	movlw	252
  1500  001BA0  0100               	movlb	0	; () banked
  1501  001BA2  6FDF               	movwf	??_main& (0+255),b
  1502  001BA4  0EFF               	movlw	255
  1503  001BA6  6FE0               	movwf	(??_main+1)& (0+255),b
  1504  001BA8  C21E  F0E1         	movff	main@i_1120,??_main+2
  1505  001BAC  C21F  F0E2         	movff	main@i_1120+1,??_main+3
  1506  001BB0  51DF               	movf	??_main& (0+255),w,b
  1507  001BB2  27E1               	addwf	(??_main+2)& (0+255),f,b
  1508  001BB4  51E0               	movf	(??_main+1)& (0+255),w,b
  1509  001BB6  23E2               	addwfc	(??_main+3)& (0+255),f,b
  1510  001BB8  0E00               	movlw	low main@tempString
  1511  001BBA  25E1               	addwf	(??_main+2)& (0+255),w,b
  1512  001BBC  6ED9               	movwf	fsr2l,c
  1513  001BBE  0E02               	movlw	high main@tempString
  1514  001BC0  21E2               	addwfc	(??_main+3)& (0+255),w,b
  1515  001BC2  6EDA               	movwf	fsr2h,c
  1516  001BC4  0E70               	movlw	low _potString
  1517  001BC6  0102               	movlb	2	; () banked
  1518  001BC8  251E               	addwf	main@i_1120& (0+255),w,b
  1519  001BCA  6EE1               	movwf	fsr1l,c
  1520  001BCC  0E01               	movlw	high _potString
  1521  001BCE  211F               	addwfc	(main@i_1120+1)& (0+255),w,b
  1522  001BD0  6EE2               	movwf	fsr1h,c
  1523  001BD2  CFDF FFE7          	movff	indf2,indf1
  1524                           
  1525                           ; BSR set to: 2
  1526  001BD6  4B1E               	infsnz	main@i_1120& (0+255),f,b
  1527  001BD8  2B1F               	incf	(main@i_1120+1)& (0+255),f,b
  1528                           
  1529                           ; BSR set to: 2
  1530  001BDA  511F               	movf	(main@i_1120+1)& (0+255),w,b
  1531  001BDC  E104               	bnz	u8890
  1532  001BDE  0E0B               	movlw	11
  1533  001BE0  5D1E               	subwf	main@i_1120& (0+255),w,b
  1534  001BE2  A0D8               	btfss	status,0,c
  1535  001BE4  D7DC               	goto	l6847
  1536  001BE6                     u8890:
  1537                           
  1538                           ; BSR set to: 2
  1539  001BE6  0EC0               	movlw	192
  1540  001BE8  0101               	movlb	1	; () banked
  1541  001BEA  6F70               	movwf	_potString& (0+255),b
  1542  001BEC  0E50               	movlw	80
  1543  001BEE  6F71               	movwf	(_potString+1)& (0+255),b
  1544  001BF0  0E54               	movlw	84
  1545  001BF2  6F72               	movwf	(_potString+2)& (0+255),b
  1546  001BF4  0E3D               	movlw	61
  1547  001BF6  6F73               	movwf	(_potString+3)& (0+255),b
  1548  001BF8  0E56               	movlw	86
  1549  001BFA  6F78               	movwf	(_potString+8)& (0+255),b
  1550  001BFC  0E00               	movlw	0
  1551  001BFE  6F79               	movwf	(_potString+9)& (0+255),b
  1552                           
  1553                           ; BSR set to: 1
  1554  001C00  0E70               	movlw	low _potString
  1555  001C02  0100               	movlb	0	; () banked
  1556  001C04  6F7A               	movwf	DisplayC@LCDStr& (0+255),b
  1557  001C06  0E01               	movlw	high _potString
  1558  001C08  6F7B               	movwf	(DisplayC@LCDStr+1)& (0+255),b
  1559  001C0A  EC49  F020         	call	_DisplayC	;wreg free
  1560  001C0E                     l6857:
  1561  001C0E  0102               	movlb	2	; () banked
  1562  001C10  4B12               	infsnz	main@convCount& (0+255),f,b
  1563  001C12  2B13               	incf	(main@convCount+1)& (0+255),f,b
  1564                           
  1565                           ; BSR set to: 2
  1566  001C14  BF13               	btfsc	(main@convCount+1)& (0+255),7,b
  1567  001C16  D73D               	goto	l183
  1568  001C18  5113               	movf	(main@convCount+1)& (0+255),w,b
  1569  001C1A  E104               	bnz	u8900
  1570  001C1C  0E05               	movlw	5
  1571  001C1E  5D12               	subwf	main@convCount& (0+255),w,b
  1572  001C20  A0D8               	btfss	status,0,c
  1573  001C22  D737               	goto	l183
  1574  001C24                     u8900:
  1575                           
  1576                           ; BSR set to: 2
  1577  001C24  0E0D               	movlw	13
  1578  001C26  6EC2               	movwf	4034,c	;volatile
  1579  001C28  0E00               	movlw	0
  1580  001C2A  6F19               	movwf	(main@firstResult+1)& (0+255),b
  1581  001C2C  0E00               	movlw	0
  1582  001C2E  6F18               	movwf	main@firstResult& (0+255),b
  1583  001C30  0E00               	movlw	0
  1584  001C32  6F15               	movwf	(main@convCount_1122+1)& (0+255),b
  1585  001C34  0E00               	movlw	0
  1586  001C36  6F14               	movwf	main@convCount_1122& (0+255),b
  1587  001C38                     l192:
  1588                           
  1589                           ; BSR set to: 2
  1590  001C38  82C2               	bsf	4034,1,c	;volatile
  1591  001C3A                     l194:
  1592  001C3A  B2C2               	btfsc	4034,1,c	;volatile
  1593  001C3C  D7FE               	goto	l194
  1594  001C3E  AA8C               	btfss	3980,5,c	;volatile
  1595  001C40  D002               	goto	u8920
  1596  001C42  0E01               	movlw	1
  1597  001C44  D001               	goto	u8926
  1598  001C46                     u8920:
  1599  001C46  0E00               	movlw	0
  1600  001C48                     u8926:
  1601  001C48  0AFF               	xorlw	255
  1602  001C4A  0100               	movlb	0	; () banked
  1603  001C4C  6FDF               	movwf	??_main& (0+255),b
  1604  001C4E  3BDF               	swapf	??_main& (0+255),f,b
  1605  001C50  47DF               	rlncf	??_main& (0+255),f,b
  1606  001C52  508C               	movf	3980,w,c	;volatile
  1607  001C54  19DF               	xorwf	??_main& (0+255),w,b
  1608  001C56  0BDF               	andlw	-33
  1609  001C58  19DF               	xorwf	??_main& (0+255),w,b
  1610  001C5A  6E8C               	movwf	3980,c	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613  001C5C  9C9E               	bcf	3998,6,c	;volatile
  1614  001C5E  0102               	movlb	2	; () banked
  1615  001C60  0518               	decf	main@firstResult& (0+255),w,b
  1616  001C62  1119               	iorwf	(main@firstResult+1)& (0+255),w,b
  1617  001C64  A4D8               	btfss	status,2,c
  1618  001C66  D005               	goto	l197
  1619                           
  1620                           ; BSR set to: 2
  1621                           
  1622                           ; BSR set to: 2
  1623  001C68  0E00               	movlw	0
  1624  001C6A  6F19               	movwf	(main@firstResult+1)& (0+255),b
  1625  001C6C  0E00               	movlw	0
  1626  001C6E  6F18               	movwf	main@firstResult& (0+255),b
  1627  001C70  D085               	goto	l6897
  1628  001C72                     l197:
  1629                           
  1630                           ; BSR set to: 2
  1631  001C72  CFC3 F184          	movff	4035,_analogResult	;volatile
  1632  001C76  CFC4 F185          	movff	4036,_analogResult+1	;volatile
  1633                           
  1634                           ; BSR set to: 2
  1635  001C7A  C184  F070         	movff	_analogResult,___xxtofl@val
  1636  001C7E  C185  F071         	movff	_analogResult+1,___xxtofl@val+1
  1637  001C82  0100               	movlb	0	; () banked
  1638  001C84  0E00               	movlw	0
  1639  001C86  BF71               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1640  001C88  0EFF               	movlw	-1
  1641  001C8A  6F72               	movwf	(___xxtofl@val+2)& (0+255),b
  1642  001C8C  6F73               	movwf	(___xxtofl@val+3)& (0+255),b
  1643  001C8E  0E01               	movlw	1
  1644  001C90  EC4D  F018         	call	___xxtofl
  1645  001C94  C070  F07E         	movff	?___xxtofl,___fldiv@b
  1646  001C98  C071  F07F         	movff	?___xxtofl+1,___fldiv@b+1
  1647  001C9C  C072  F080         	movff	?___xxtofl+2,___fldiv@b+2
  1648  001CA0  C073  F081         	movff	?___xxtofl+3,___fldiv@b+3
  1649  001CA4  0E00               	movlw	0
  1650  001CA6  0100               	movlb	0	; () banked
  1651  001CA8  6F82               	movwf	___fldiv@a& (0+255),b
  1652  001CAA  0E00               	movlw	0
  1653  001CAC  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  1654  001CAE  0E50               	movlw	80
  1655  001CB0  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  1656  001CB2  0E41               	movlw	65
  1657  001CB4  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  1658  001CB6  EC3B  F014         	call	___fldiv	;wreg free
  1659  001CBA  C07E  F10E         	movff	?___fldiv,_temperature
  1660  001CBE  C07F  F10F         	movff	?___fldiv+1,_temperature+1
  1661  001CC2  C080  F110         	movff	?___fldiv+2,_temperature+2
  1662  001CC6  C081  F111         	movff	?___fldiv+3,_temperature+3
  1663  001CCA  0E66               	movlw	low _temperatureString
  1664  001CCC  0101               	movlb	1	; () banked
  1665  001CCE  6FBE               	movwf	sprintf@s& (0+255),b
  1666  001CD0  0E01               	movlw	high _temperatureString
  1667  001CD2  6FBF               	movwf	(sprintf@s+1)& (0+255),b
  1668  001CD4  0E35               	movlw	low STR_2
  1669  001CD6  6FC0               	movwf	sprintf@fmt& (0+255),b
  1670  001CD8  0E10               	movlw	high STR_2
  1671  001CDA  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
  1672  001CDC  C10E  F1C2         	movff	_temperature,?_sprintf+4
  1673  001CE0  C10F  F1C3         	movff	_temperature+1,?_sprintf+5
  1674  001CE4  C110  F1C4         	movff	_temperature+2,?_sprintf+6
  1675  001CE8  C111  F1C5         	movff	_temperature+3,?_sprintf+7
  1676  001CEC  EC37  F01E         	call	_sprintf	;wreg free
  1677  001CF0  0E00               	movlw	low main@tempString
  1678  001CF2  0100               	movlb	0	; () banked
  1679  001CF4  6F70               	movwf	strcpy@dest& (0+255),b
  1680  001CF6  0E02               	movlw	high main@tempString
  1681  001CF8  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  1682  001CFA  0E66               	movlw	low _temperatureString
  1683  001CFC  6F72               	movwf	strcpy@src& (0+255),b
  1684  001CFE  0E01               	movlw	high _temperatureString
  1685  001D00  6F73               	movwf	(strcpy@src+1)& (0+255),b
  1686  001D02  EC8F  F01E         	call	_strcpy	;wreg free
  1687  001D06  0E00               	movlw	0
  1688  001D08  0102               	movlb	2	; () banked
  1689  001D0A  6F21               	movwf	(main@i_1124+1)& (0+255),b
  1690  001D0C  0E03               	movlw	3
  1691  001D0E  6F20               	movwf	main@i_1124& (0+255),b
  1692  001D10                     l6887:
  1693                           
  1694                           ; BSR set to: 2
  1695  001D10  0EFD               	movlw	253
  1696  001D12  0100               	movlb	0	; () banked
  1697  001D14  6FDF               	movwf	??_main& (0+255),b
  1698  001D16  0EFF               	movlw	255
  1699  001D18  6FE0               	movwf	(??_main+1)& (0+255),b
  1700  001D1A  C220  F0E1         	movff	main@i_1124,??_main+2
  1701  001D1E  C221  F0E2         	movff	main@i_1124+1,??_main+3
  1702  001D22  51DF               	movf	??_main& (0+255),w,b
  1703  001D24  27E1               	addwf	(??_main+2)& (0+255),f,b
  1704  001D26  51E0               	movf	(??_main+1)& (0+255),w,b
  1705  001D28  23E2               	addwfc	(??_main+3)& (0+255),f,b
  1706  001D2A  0E00               	movlw	low main@tempString
  1707  001D2C  25E1               	addwf	(??_main+2)& (0+255),w,b
  1708  001D2E  6ED9               	movwf	fsr2l,c
  1709  001D30  0E02               	movlw	high main@tempString
  1710  001D32  21E2               	addwfc	(??_main+3)& (0+255),w,b
  1711  001D34  6EDA               	movwf	fsr2h,c
  1712  001D36  0E66               	movlw	low _temperatureString
  1713  001D38  0102               	movlb	2	; () banked
  1714  001D3A  2520               	addwf	main@i_1124& (0+255),w,b
  1715  001D3C  6EE1               	movwf	fsr1l,c
  1716  001D3E  0E01               	movlw	high _temperatureString
  1717  001D40  2121               	addwfc	(main@i_1124+1)& (0+255),w,b
  1718  001D42  6EE2               	movwf	fsr1h,c
  1719  001D44  CFDF FFE7          	movff	indf2,indf1
  1720                           
  1721                           ; BSR set to: 2
  1722  001D48  4B20               	infsnz	main@i_1124& (0+255),f,b
  1723  001D4A  2B21               	incf	(main@i_1124+1)& (0+255),f,b
  1724                           
  1725                           ; BSR set to: 2
  1726  001D4C  5121               	movf	(main@i_1124+1)& (0+255),w,b
  1727  001D4E  E104               	bnz	u8940
  1728  001D50  0E0B               	movlw	11
  1729  001D52  5D20               	subwf	main@i_1124& (0+255),w,b
  1730  001D54  A0D8               	btfss	status,0,c
  1731  001D56  D7DC               	goto	l6887
  1732  001D58                     u8940:
  1733                           
  1734                           ; BSR set to: 2
  1735  001D58  0E80               	movlw	128
  1736  001D5A  0101               	movlb	1	; () banked
  1737  001D5C  6F66               	movwf	_temperatureString& (0+255),b
  1738  001D5E  0E54               	movlw	84
  1739  001D60  6F67               	movwf	(_temperatureString+1)& (0+255),b
  1740  001D62  0E3D               	movlw	61
  1741  001D64  6F68               	movwf	(_temperatureString+2)& (0+255),b
  1742  001D66  0E43               	movlw	67
  1743  001D68  6F6D               	movwf	(_temperatureString+7)& (0+255),b
  1744  001D6A  0E00               	movlw	0
  1745  001D6C  6F6E               	movwf	(_temperatureString+8)& (0+255),b
  1746                           
  1747                           ; BSR set to: 1
  1748  001D6E  0E66               	movlw	low _temperatureString
  1749  001D70  0100               	movlb	0	; () banked
  1750  001D72  6F7A               	movwf	DisplayC@LCDStr& (0+255),b
  1751  001D74  0E01               	movlw	high _temperatureString
  1752  001D76  6F7B               	movwf	(DisplayC@LCDStr+1)& (0+255),b
  1753  001D78  EC49  F020         	call	_DisplayC	;wreg free
  1754  001D7C                     l6897:
  1755  001D7C  0102               	movlb	2	; () banked
  1756  001D7E  4B14               	infsnz	main@convCount_1122& (0+255),f,b
  1757  001D80  2B15               	incf	(main@convCount_1122+1)& (0+255),f,b
  1758                           
  1759                           ; BSR set to: 2
  1760  001D82  BF15               	btfsc	(main@convCount_1122+1)& (0+255),7,b
  1761  001D84  D759               	goto	l192
  1762  001D86  5115               	movf	(main@convCount_1122+1)& (0+255),w,b
  1763  001D88  E104               	bnz	u8950
  1764  001D8A  0E05               	movlw	5
  1765  001D8C  5D14               	subwf	main@convCount_1122& (0+255),w,b
  1766  001D8E  A0D8               	btfss	status,0,c
  1767  001D90  D753               	goto	l192
  1768  001D92                     u8950:
  1769                           
  1770                           ; BSR set to: 2
  1771  001D92  0101               	movlb	1	; () banked
  1772  001D94  5114               	movf	_INDEX& (0+255),w,b
  1773  001D96  1912               	xorwf	_OLD_INDEX& (0+255),w,b
  1774  001D98  E104               	bnz	u8960
  1775  001D9A  5115               	movf	(_INDEX+1)& (0+255),w,b
  1776  001D9C  1913               	xorwf	(_OLD_INDEX+1)& (0+255),w,b
  1777  001D9E  B4D8               	btfsc	status,2,c
  1778  001DA0  D655               	goto	l6807
  1779  001DA2                     u8960:
  1780                           
  1781                           ; BSR set to: 1
  1782  001DA2  0E00               	movlw	0
  1783  001DA4  0102               	movlb	2	; () banked
  1784  001DA6  6F11               	movwf	(main@c+1)& (0+255),b
  1785  001DA8  0E00               	movlw	0
  1786  001DAA  6F10               	movwf	main@c& (0+255),b
  1787                           
  1788                           ; BSR set to: 2
  1789  001DAC  C112  F216         	movff	_OLD_INDEX,main@i_1125
  1790  001DB0  C113  F217         	movff	_OLD_INDEX+1,main@i_1125+1
  1791  001DB4  D013               	goto	l6913
  1792  001DB6                     l6907:
  1793                           
  1794                           ; BSR set to: 1
  1795  001DB6  0E00               	movlw	low _USART_BUFFER
  1796  001DB8  0102               	movlb	2	; () banked
  1797  001DBA  2516               	addwf	main@i_1125& (0+255),w,b
  1798  001DBC  6ED9               	movwf	fsr2l,c
  1799  001DBE  0E01               	movlw	high _USART_BUFFER
  1800  001DC0  2117               	addwfc	(main@i_1125+1)& (0+255),w,b
  1801  001DC2  6EDA               	movwf	fsr2h,c
  1802  001DC4  0E7A               	movlw	low _commandString
  1803  001DC6  2510               	addwf	main@c& (0+255),w,b
  1804  001DC8  6EE1               	movwf	fsr1l,c
  1805  001DCA  0E01               	movlw	high _commandString
  1806  001DCC  2111               	addwfc	(main@c+1)& (0+255),w,b
  1807  001DCE  6EE2               	movwf	fsr1h,c
  1808  001DD0  CFDF FFE7          	movff	indf2,indf1
  1809                           
  1810                           ; BSR set to: 2
  1811  001DD4  4B10               	infsnz	main@c& (0+255),f,b
  1812  001DD6  2B11               	incf	(main@c+1)& (0+255),f,b
  1813                           
  1814                           ; BSR set to: 2
  1815  001DD8  4B16               	infsnz	main@i_1125& (0+255),f,b
  1816  001DDA  2B17               	incf	(main@i_1125+1)& (0+255),f,b
  1817  001DDC                     l6913:
  1818                           
  1819                           ; BSR set to: 2
  1820  001DDC  5116               	movf	main@i_1125& (0+255),w,b
  1821  001DDE  0101               	movlb	1	; () banked
  1822  001DE0  5D14               	subwf	_INDEX& (0+255),w,b
  1823  001DE2  0102               	movlb	2	; () banked
  1824  001DE4  5117               	movf	(main@i_1125+1)& (0+255),w,b
  1825  001DE6  0101               	movlb	1	; () banked
  1826  001DE8  5915               	subwfb	(_INDEX+1)& (0+255),w,b
  1827  001DEA  B0D8               	btfsc	status,0,c
  1828  001DEC  D7E4               	goto	l6907
  1829                           
  1830                           ; BSR set to: 1
  1831  001DEE  0E00               	movlw	0
  1832  001DF0  6F15               	movwf	(_INDEX+1)& (0+255),b
  1833  001DF2  0E00               	movlw	0
  1834  001DF4  6F14               	movwf	_INDEX& (0+255),b
  1835  001DF6  0E00               	movlw	0
  1836  001DF8  0102               	movlb	2	; () banked
  1837  001DFA  6F1D               	movwf	(main@i_1126+1)& (0+255),b
  1838  001DFC  0E00               	movlw	0
  1839  001DFE  6F1C               	movwf	main@i_1126& (0+255),b
  1840  001E00                     l6917:
  1841                           
  1842                           ; BSR set to: 2
  1843  001E00  511D               	movf	(main@i_1126+1)& (0+255),w,b
  1844  001E02  E10F               	bnz	l6927
  1845  001E04  0E0A               	movlw	10
  1846  001E06  5D1C               	subwf	main@i_1126& (0+255),w,b
  1847  001E08  B0D8               	btfsc	status,0,c
  1848  001E0A  D00B               	goto	l6927
  1849                           
  1850                           ; BSR set to: 2
  1851  001E0C  0E00               	movlw	low _USART_BUFFER
  1852  001E0E  251C               	addwf	main@i_1126& (0+255),w,b
  1853  001E10  6ED9               	movwf	fsr2l,c
  1854  001E12  0E01               	movlw	high _USART_BUFFER
  1855  001E14  211D               	addwfc	(main@i_1126+1)& (0+255),w,b
  1856  001E16  6EDA               	movwf	fsr2h,c
  1857  001E18  0E00               	movlw	0
  1858  001E1A  6EDF               	movwf	indf2,c
  1859                           
  1860                           ; BSR set to: 2
  1861  001E1C  4B1C               	infsnz	main@i_1126& (0+255),f,b
  1862  001E1E  2B1D               	incf	(main@i_1126+1)& (0+255),f,b
  1863  001E20  D7EF               	goto	l6917
  1864  001E22                     l6927:
  1865                           
  1866                           ; BSR set to: 2
  1867  001E22  0E7A               	movlw	low _commandString
  1868  001E24  0100               	movlb	0	; () banked
  1869  001E26  6F86               	movwf	checkCommand@cmd& (0+255),b
  1870  001E28  0E01               	movlw	high _commandString
  1871  001E2A  6F87               	movwf	(checkCommand@cmd+1)& (0+255),b
  1872  001E2C  EC63  F01E         	call	_checkCommand	;wreg free
  1873  001E30  D60D               	goto	l6807
  1874  001E32                     __end_of_main:
  1875                           	opt callstack 0
  1876                           
  1877 ;; *************** function _sprintf *****************
  1878 ;; Defined at:
  1879 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  s               2   56[BANK1 ] PTR unsigned char 
  1882 ;;		 -> temperatureString(10), potString(10), 
  1883 ;;  fmt             2   58[BANK1 ] PTR const unsigned char 
  1884 ;;		 -> STR_2(5), STR_1(5), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  f               6  121[BANK0 ] struct _IO_FILE
  1887 ;;  ap              2  119[BANK0 ] PTR void [1]
  1888 ;;		 -> ?_sprintf(2), 
  1889 ;;  ret             2    0        int 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  2   56[BANK1 ] int 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1899 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Totals:         0      10       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;Total ram usage:       18 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:   11
  1906 ;; This function calls:
  1907 ;;		_vfprintf
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text1
  1914  003C6E                     __ptext1:
  1915                           	opt callstack 0
  1916  003C6E                     _sprintf:
  1917                           	opt callstack 19
  1918                           
  1919                           ;incstack = 0
  1920  003C6E  0EC2               	movlw	low (?_sprintf+4)
  1921  003C70  0100               	movlb	0	; () banked
  1922  003C72  6FD7               	movwf	sprintf@ap& (0+255),b
  1923  003C74  0E01               	movlw	high (?_sprintf+4)
  1924  003C76  6FD8               	movwf	(sprintf@ap+1)& (0+255),b
  1925  003C78  C1BE  F0D9         	movff	sprintf@s,sprintf@f
  1926  003C7C  C1BF  F0DA         	movff	sprintf@s+1,sprintf@f+1
  1927                           
  1928                           ; BSR set to: 0
  1929  003C80  0E00               	movlw	0
  1930  003C82  6FDC               	movwf	(sprintf@f+3)& (0+255),b
  1931  003C84  0E00               	movlw	0
  1932  003C86  6FDB               	movwf	(sprintf@f+2)& (0+255),b
  1933                           
  1934                           ; BSR set to: 0
  1935  003C88  0E00               	movlw	0
  1936  003C8A  6FDE               	movwf	(sprintf@f+5)& (0+255),b
  1937  003C8C  0E00               	movlw	0
  1938  003C8E  6FDD               	movwf	(sprintf@f+4)& (0+255),b
  1939                           
  1940                           ; BSR set to: 0
  1941  003C90  0ED9               	movlw	low sprintf@f
  1942  003C92  6FCD               	movwf	vfprintf@fp& (0+255),b
  1943  003C94  0E00               	movlw	high sprintf@f
  1944  003C96  6FCE               	movwf	(vfprintf@fp+1)& (0+255),b
  1945  003C98  C1C0  F0CF         	movff	sprintf@fmt,vfprintf@fmt
  1946  003C9C  C1C1  F0D0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1947  003CA0  0ED7               	movlw	low sprintf@ap
  1948  003CA2  6FD1               	movwf	vfprintf@ap& (0+255),b
  1949  003CA4  0E00               	movlw	high sprintf@ap
  1950  003CA6  6FD2               	movwf	(vfprintf@ap+1)& (0+255),b
  1951  003CA8  EC0A  F01E         	call	_vfprintf	;wreg free
  1952  003CAC  0100               	movlb	0	; () banked
  1953  003CAE  51DB               	movf	(sprintf@f+2)& (0+255),w,b
  1954  003CB0  0101               	movlb	1	; () banked
  1955  003CB2  25BE               	addwf	sprintf@s& (0+255),w,b
  1956  003CB4  6ED9               	movwf	fsr2l,c
  1957  003CB6  0100               	movlb	0	; () banked
  1958  003CB8  51DC               	movf	(sprintf@f+3)& (0+255),w,b
  1959  003CBA  0101               	movlb	1	; () banked
  1960  003CBC  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
  1961  003CBE  6EDA               	movwf	fsr2h,c
  1962  003CC0  0E00               	movlw	0
  1963  003CC2  6EDF               	movwf	indf2,c
  1964                           
  1965                           ; BSR set to: 1
  1966  003CC4  0012               	return		;funcret
  1967  003CC6                     __end_of_sprintf:
  1968                           	opt callstack 0
  1969                           
  1970 ;; *************** function _vfprintf *****************
  1971 ;; Defined at:
  1972 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  fp              2  109[BANK0 ] PTR struct _IO_FILE
  1975 ;;		 -> sprintf@f(6), 
  1976 ;;  fmt             2  111[BANK0 ] PTR const unsigned char 
  1977 ;;		 -> STR_2(5), STR_1(5), 
  1978 ;;  ap              2  113[BANK0 ] PTR PTR void 
  1979 ;;		 -> sprintf@ap(2), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  cfmt            2  115[BANK0 ] PTR unsigned char 
  1982 ;;		 -> STR_2(5), STR_1(5), 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2  109[BANK0 ] int 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        8 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:   10
  1999 ;; This function calls:
  2000 ;;		_vfpfcnvrt
  2001 ;; This function is called by:
  2002 ;;		_sprintf
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text2
  2007  003C14                     __ptext2:
  2008                           	opt callstack 0
  2009  003C14                     _vfprintf:
  2010                           	opt callstack 19
  2011                           
  2012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;incstack = 0
  2016  003C14  C0CF  F0D3         	movff	vfprintf@fmt,vfprintf@cfmt
  2017  003C18  C0D0  F0D4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2018                           
  2019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  2020  003C1C  0E00               	movlw	0
  2021  003C1E  6E40               	movwf	_nout+1,c
  2022  003C20  0E00               	movlw	0
  2023  003C22  6E3F               	movwf	_nout,c
  2024                           
  2025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2026  003C24  D014               	goto	l6433
  2027  003C26                     l6431:
  2028                           
  2029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  2030  003C26  C0CD  F0B7         	movff	vfprintf@fp,vfpfcnvrt@fp
  2031  003C2A  C0CE  F0B8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2032  003C2E  0ED3               	movlw	low vfprintf@cfmt
  2033  003C30  0100               	movlb	0	; () banked
  2034  003C32  6FB9               	movwf	vfpfcnvrt@fmt& (0+255),b
  2035  003C34  0E00               	movlw	high vfprintf@cfmt
  2036  003C36  6FBA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2037  003C38  C0D1  F0BB         	movff	vfprintf@ap,vfpfcnvrt@ap
  2038  003C3C  C0D2  F0BC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2039  003C40  EC19  F00F         	call	_vfpfcnvrt	;wreg free
  2040  003C44  0100               	movlb	0	; () banked
  2041  003C46  51B7               	movf	?_vfpfcnvrt& (0+255),w,b
  2042  003C48  263F               	addwf	_nout,f,c
  2043  003C4A  51B8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2044  003C4C  2240               	addwfc	_nout+1,f,c
  2045  003C4E                     l6433:
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  2048  003C4E  C0D3  FFF6         	movff	vfprintf@cfmt,tblptrl
  2049  003C52  C0D4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2050  003C56                     	if	0	;tblptru may be non-zero
  2051  003C56                     	endif
  2052  003C56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2053  003C56  0E00               	movlw	low (__mediumconst shr (0+16))
  2054  003C58  6EF8               	movwf	tblptru,c
  2055  003C5A                     	endif
  2056  003C5A  0008               	tblrd		*
  2057  003C5C  50F5               	movf	tablat,w,c
  2058  003C5E  0900               	iorlw	0
  2059  003C60  A4D8               	btfss	status,2,c
  2060  003C62  D7E1               	goto	l6431
  2061                           
  2062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  2063  003C64  C03F  F0CD         	movff	_nout,?_vfprintf
  2064  003C68  C040  F0CE         	movff	_nout+1,?_vfprintf+1
  2065  003C6C  0012               	return		;funcret
  2066  003C6E                     __end_of_vfprintf:
  2067                           	opt callstack 0
  2068                           
  2069 ;; *************** function _vfpfcnvrt *****************
  2070 ;; Defined at:
  2071 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  fp              2   87[BANK0 ] PTR struct _IO_FILE
  2074 ;;		 -> sprintf@f(6), 
  2075 ;;  fmt             2   89[BANK0 ] PTR PTR unsigned char 
  2076 ;;		 -> vfprintf@cfmt(2), 
  2077 ;;  ap              2   91[BANK0 ] PTR PTR void 
  2078 ;;		 -> sprintf@ap(2), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  llu             8    0        unsigned long long 
  2081 ;;  ll              8    0        long long 
  2082 ;;  f               4  101[BANK0 ] long long 
  2083 ;;  ct              3  105[BANK0 ] unsigned char [3]
  2084 ;;  vp              3    0        PTR void 
  2085 ;;  cp              3    0        PTR unsigned char 
  2086 ;;  i               2    0        int 
  2087 ;;  done            2    0        int 
  2088 ;;  c               1  108[BANK0 ] unsigned char 
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  2   87[BANK0 ] int 
  2091 ;; Registers used:
  2092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2098 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;Total ram usage:       22 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    9
  2105 ;; This function calls:
  2106 ;;		_atoi
  2107 ;;		_efgtoa
  2108 ;;		_fputc
  2109 ;;		_isdigit
  2110 ;;		_isupper
  2111 ;;		_strncmp
  2112 ;;		_tolower
  2113 ;; This function is called by:
  2114 ;;		_vfprintf
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text3
  2119  001E32                     __ptext3:
  2120                           	opt callstack 0
  2121  001E32                     _vfpfcnvrt:
  2122                           	opt callstack 19
  2123                           
  2124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2125                           
  2126                           ;incstack = 0
  2127  001E32  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2128  001E36  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2129  001E3A  CFDE FFF6          	movff	postinc2,tblptrl
  2130  001E3E  CFDD FFF7          	movff	postdec2,tblptrh
  2131  001E42                     	if	0	;tblptru may be non-zero
  2132  001E42                     	endif
  2133  001E42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2134  001E42  0E00               	movlw	low (__mediumconst shr (0+16))
  2135  001E44  6EF8               	movwf	tblptru,c
  2136  001E46                     	endif
  2137  001E46  0008               	tblrd		*
  2138  001E48  50F5               	movf	tablat,w,c
  2139  001E4A  0A25               	xorlw	37
  2140  001E4C  A4D8               	btfss	status,2,c
  2141  001E4E  D1C5               	goto	l6309
  2142                           
  2143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  2144  001E50  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145  001E54  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146  001E58  2ADE               	incf	postinc2,f,c
  2147  001E5A  0E00               	movlw	0
  2148  001E5C  22DD               	addwfc	postdec2,f,c
  2149                           
  2150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  2151  001E5E  0E00               	movlw	0
  2152  001E60  6E42               	movwf	_width+1,c
  2153  001E62  0E00               	movlw	0
  2154  001E64  6E41               	movwf	_width,c
  2155  001E66  C041  F0E3         	movff	_width,_flags
  2156  001E6A  C042  F0E4         	movff	_width+1,_flags+1
  2157                           
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  2159  001E6E  6843               	setf	_prec,c
  2160  001E70  6844               	setf	_prec+1,c
  2161                           
  2162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  2163  001E72  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2164  001E76  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2165  001E7A  CFDE FFF6          	movff	postinc2,tblptrl
  2166  001E7E  CFDD FFF7          	movff	postdec2,tblptrh
  2167  001E82                     	if	0	;tblptru may be non-zero
  2168  001E82                     	endif
  2169  001E82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2170  001E82  0E00               	movlw	low (__mediumconst shr (0+16))
  2171  001E84  6EF8               	movwf	tblptru,c
  2172  001E86                     	endif
  2173  001E86  0008               	tblrd		*
  2174  001E88  50F5               	movf	tablat,w,c
  2175  001E8A  0A2E               	xorlw	46
  2176  001E8C  A4D8               	btfss	status,2,c
  2177  001E8E  D072               	goto	u8230
  2178                           
  2179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2180  001E90  0E00               	movlw	0
  2181  001E92  6E44               	movwf	_prec+1,c
  2182  001E94  0E00               	movlw	0
  2183  001E96  6E43               	movwf	_prec,c
  2184                           
  2185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2186  001E98  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2187  001E9C  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2188  001EA0  2ADE               	incf	postinc2,f,c
  2189  001EA2  0E00               	movlw	0
  2190  001EA4  22DD               	addwfc	postdec2,f,c
  2191                           
  2192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2193  001EA6  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2194  001EAA  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2195  001EAE  CFDE FFF6          	movff	postinc2,tblptrl
  2196  001EB2  CFDD FFF7          	movff	postdec2,tblptrh
  2197  001EB6                     	if	0	;tblptru may be non-zero
  2198  001EB6                     	endif
  2199  001EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2200  001EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  2201  001EB8  6EF8               	movwf	tblptru,c
  2202  001EBA                     	endif
  2203  001EBA  0008               	tblrd		*
  2204  001EBC  50F5               	movf	tablat,w,c
  2205  001EBE  0A2A               	xorlw	42
  2206  001EC0  A4D8               	btfss	status,2,c
  2207  001EC2  D01C               	goto	l6245
  2208                           
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2210  001EC4  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2211  001EC8  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2212  001ECC  2ADE               	incf	postinc2,f,c
  2213  001ECE  0E00               	movlw	0
  2214  001ED0  22DD               	addwfc	postdec2,f,c
  2215                           
  2216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2217  001ED2  C0BB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2218  001ED6  C0BC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2219  001EDA  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  2220  001EDE  0E02               	movlw	2
  2221  001EE0  26DE               	addwf	postinc2,f,c
  2222  001EE2  CFDF F0BE          	movff	indf2,??_vfpfcnvrt+1
  2223  001EE6  0E00               	movlw	0
  2224  001EE8  22DD               	addwfc	postdec2,f,c
  2225  001EEA  C0BD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2226  001EEE  C0BE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2227  001EF2  CFDE F043          	movff	postinc2,_prec
  2228  001EF6  CFDD F044          	movff	postdec2,_prec+1
  2229                           
  2230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2231  001EFA  D03C               	goto	u8230
  2232  001EFC                     l6245:
  2233                           
  2234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2235  001EFC  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2236  001F00  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2237  001F04  CFDE F077          	movff	postinc2,atoi@s
  2238  001F08  CFDD F078          	movff	postdec2,atoi@s+1
  2239  001F0C  ECA1  F017         	call	_atoi	;wreg free
  2240  001F10  C077  F043         	movff	?_atoi,_prec
  2241  001F14  C078  F044         	movff	?_atoi+1,_prec+1
  2242                           
  2243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2244  001F18  D007               	goto	l6249
  2245  001F1A                     l6247:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2249  001F1A  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2250  001F1E  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2251  001F22  2ADE               	incf	postinc2,f,c
  2252  001F24  0E00               	movlw	0
  2253  001F26  22DD               	addwfc	postdec2,f,c
  2254  001F28                     l6249:
  2255  001F28  0ED0               	movlw	208
  2256  001F2A  0100               	movlb	0	; () banked
  2257  001F2C  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  2258  001F2E  0EFF               	movlw	255
  2259  001F30  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2260  001F32  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2261  001F36  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2262  001F3A  CFDE FFF6          	movff	postinc2,tblptrl
  2263  001F3E  CFDD FFF7          	movff	postdec2,tblptrh
  2264  001F42                     	if	0	;tblptru may be non-zero
  2265  001F42                     	endif
  2266  001F42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2267  001F42  0E00               	movlw	low (__mediumconst shr (0+16))
  2268  001F44  6EF8               	movwf	tblptru,c
  2269  001F46                     	endif
  2270  001F46  0008               	tblrd		*
  2271  001F48  50F5               	movf	tablat,w,c
  2272  001F4A  6FBF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2273  001F4C  6BC0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2274  001F4E  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  2275  001F50  27BF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2276  001F52  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2277  001F54  23C0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2278  001F56  51C0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2279  001F58  E106               	bnz	u8210
  2280  001F5A  0E0A               	movlw	10
  2281  001F5C  5DBF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2282  001F5E  B0D8               	btfsc	status,0,c
  2283  001F60  D002               	goto	u8210
  2284  001F62  0E01               	movlw	1
  2285  001F64  D001               	goto	u8220
  2286  001F66                     u8210:
  2287  001F66  0E00               	movlw	0
  2288  001F68                     u8220:
  2289  001F68  6FC1               	movwf	_vfpfcnvrt$1398& (0+255),b
  2290  001F6A  6BC2               	clrf	(_vfpfcnvrt$1398+1)& (0+255),b
  2291                           
  2292                           ; BSR set to: 0
  2293  001F6C  51C1               	movf	_vfpfcnvrt$1398& (0+255),w,b
  2294  001F6E  11C2               	iorwf	(_vfpfcnvrt$1398+1)& (0+255),w,b
  2295  001F70  A4D8               	btfss	status,2,c
  2296  001F72  D7D3               	goto	l6247
  2297  001F74                     u8230:
  2298                           
  2299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2300  001F74  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2301  001F78  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2302  001F7C  CFDE FFF6          	movff	postinc2,tblptrl
  2303  001F80  CFDD FFF7          	movff	postdec2,tblptrh
  2304  001F84                     	if	0	;tblptru may be non-zero
  2305  001F84                     	endif
  2306  001F84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2307  001F84  0E00               	movlw	low (__mediumconst shr (0+16))
  2308  001F86  6EF8               	movwf	tblptru,c
  2309  001F88                     	endif
  2310  001F88  0008               	tblrd		*
  2311  001F8A  50F5               	movf	tablat,w,c
  2312  001F8C  0100               	movlb	0	; () banked
  2313  001F8E  6F76               	movwf	tolower@c& (0+255),b
  2314  001F90  6B77               	clrf	(tolower@c+1)& (0+255),b
  2315  001F92  ECBA  F01E         	call	_tolower	;wreg free
  2316  001F96  0100               	movlb	0	; () banked
  2317  001F98  5176               	movf	?_tolower& (0+255),w,b
  2318  001F9A  6FC9               	movwf	vfpfcnvrt@ct& (0+255),b
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2322  001F9C  51C9               	movf	vfpfcnvrt@ct& (0+255),w,b
  2323  001F9E  B4D8               	btfsc	status,2,c
  2324  001FA0  D039               	goto	l6265
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2328  001FA2  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  001FA6  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  001FAA  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  2331  001FAE  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  2332  001FB2  0E01               	movlw	1
  2333  001FB4  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2334  001FB6  0E00               	movlw	0
  2335  001FB8  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2336  001FBA  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2337  001FBE  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2338  001FC2                     	if	0	;tblptru may be non-zero
  2339  001FC2                     	endif
  2340  001FC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2341  001FC2  0E00               	movlw	low (__mediumconst shr (0+16))
  2342  001FC4  6EF8               	movwf	tblptru,c
  2343  001FC6                     	endif
  2344  001FC6  0008               	tblrd		*
  2345  001FC8  50F5               	movf	tablat,w,c
  2346  001FCA  6F76               	movwf	tolower@c& (0+255),b
  2347  001FCC  6B77               	clrf	(tolower@c+1)& (0+255),b
  2348  001FCE  ECBA  F01E         	call	_tolower	;wreg free
  2349  001FD2  0100               	movlb	0	; () banked
  2350  001FD4  5176               	movf	?_tolower& (0+255),w,b
  2351  001FD6  6FCA               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2355  001FD8  51CA               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2356  001FDA  B4D8               	btfsc	status,2,c
  2357  001FDC  D01B               	goto	l6265
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2361  001FDE  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2362  001FE2  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2363  001FE6  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  2364  001FEA  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  2365  001FEE  0E02               	movlw	2
  2366  001FF0  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2367  001FF2  0E00               	movlw	0
  2368  001FF4  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2369  001FF6  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2370  001FFA  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2371  001FFE                     	if	0	;tblptru may be non-zero
  2372  001FFE                     	endif
  2373  001FFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2374  001FFE  0E00               	movlw	low (__mediumconst shr (0+16))
  2375  002000  6EF8               	movwf	tblptru,c
  2376  002002                     	endif
  2377  002002  0008               	tblrd		*
  2378  002004  50F5               	movf	tablat,w,c
  2379  002006  6F76               	movwf	tolower@c& (0+255),b
  2380  002008  6B77               	clrf	(tolower@c+1)& (0+255),b
  2381  00200A  ECBA  F01E         	call	_tolower	;wreg free
  2382  00200E  0100               	movlb	0	; () banked
  2383  002010  5176               	movf	?_tolower& (0+255),w,b
  2384  002012  6FCB               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2385  002014                     l6265:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2389  002014  0E66               	movlw	102
  2390  002016  19C9               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2391  002018  A4D8               	btfss	status,2,c
  2392  00201A  D041               	goto	l6277
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2396  00201C  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  002020  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  002024  CFDE FFF6          	movff	postinc2,tblptrl
  2399  002028  CFDD FFF7          	movff	postdec2,tblptrh
  2400  00202C                     	if	0	;tblptru may be non-zero
  2401  00202C                     	endif
  2402  00202C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2403  00202C  0E00               	movlw	low (__mediumconst shr (0+16))
  2404  00202E  6EF8               	movwf	tblptru,c
  2405  002030                     	endif
  2406  002030  0008               	tblrd		*
  2407  002032  CFF5 F0CC          	movff	tablat,vfpfcnvrt@c
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2411  002036  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412  00203A  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413  00203E  2ADE               	incf	postinc2,f,c
  2414  002040  0E00               	movlw	0
  2415  002042  22DD               	addwfc	postdec2,f,c
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2419  002044  C0BB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2420  002048  C0BC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2421  00204C  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  2422  002050  0E04               	movlw	4
  2423  002052  26DE               	addwf	postinc2,f,c
  2424  002054  CFDF F0BE          	movff	indf2,??_vfpfcnvrt+1
  2425  002058  0E00               	movlw	0
  2426  00205A  22DD               	addwfc	postdec2,f,c
  2427  00205C  C0BD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2428  002060  C0BE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2429  002064  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f
  2430  002068  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f+1
  2431  00206C  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+2
  2432  002070  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+3
  2433  002074                     l6273:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2437  002074  C0B7  F0AB         	movff	vfpfcnvrt@fp,efgtoa@fp
  2438  002078  C0B8  F0AC         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2439  00207C  C0C5  F0AD         	movff	vfpfcnvrt@f,efgtoa@f
  2440  002080  C0C6  F0AE         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2441  002084  C0C7  F0AF         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2442  002088  C0C8  F0B0         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2443  00208C  C0CC  F0B1         	movff	vfpfcnvrt@c,efgtoa@c
  2444  002090  EC2C  F008         	call	_efgtoa	;wreg free
  2445  002094  C0AB  F0B7         	movff	?_efgtoa,?_vfpfcnvrt
  2446  002098  C0AC  F0B8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2447  00209C  0012               	return	
  2448  00209E                     l6277:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2452  00209E  0EC9               	movlw	low vfpfcnvrt@ct
  2453  0020A0  6F70               	movwf	strncmp@_l& (0+255),b
  2454  0020A2  0E00               	movlw	high vfpfcnvrt@ct
  2455  0020A4  6F71               	movwf	(strncmp@_l+1)& (0+255),b
  2456  0020A6  0E53               	movlw	low STR_16
  2457  0020A8  6F72               	movwf	strncmp@_r& (0+255),b
  2458  0020AA  0E10               	movlw	high STR_16
  2459  0020AC  6F73               	movwf	(strncmp@_r+1)& (0+255),b
  2460  0020AE  0E00               	movlw	0
  2461  0020B0  6F75               	movwf	(strncmp@n+1)& (0+255),b
  2462  0020B2  0E02               	movlw	2
  2463  0020B4  6F74               	movwf	strncmp@n& (0+255),b
  2464  0020B6  ECDA  F01A         	call	_strncmp	;wreg free
  2465  0020BA  0100               	movlb	0	; () banked
  2466  0020BC  5170               	movf	?_strncmp& (0+255),w,b
  2467  0020BE  1171               	iorwf	(?_strncmp+1)& (0+255),w,b
  2468  0020C0  A4D8               	btfss	status,2,c
  2469  0020C2  D059               	goto	l6293
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2473  0020C4  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2474  0020C8  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2475  0020CC  CFDE F0BD          	movff	postinc2,??_vfpfcnvrt
  2476  0020D0  CFDD F0BE          	movff	postdec2,??_vfpfcnvrt+1
  2477  0020D4  0E01               	movlw	1
  2478  0020D6  27BD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2479  0020D8  0E00               	movlw	0
  2480  0020DA  23BE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2481  0020DC  C0BD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2482  0020E0  C0BE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2483  0020E4                     	if	0	;tblptru may be non-zero
  2484  0020E4                     	endif
  2485  0020E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2486  0020E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2487  0020E6  6EF8               	movwf	tblptru,c
  2488  0020E8                     	endif
  2489  0020E8  0008               	tblrd		*
  2490  0020EA  CFF5 F0CC          	movff	tablat,vfpfcnvrt@c
  2491  0020EE  0EBF               	movlw	191
  2492  0020F0  6FBD               	movwf	??_vfpfcnvrt& (0+255),b
  2493  0020F2  0EFF               	movlw	255
  2494  0020F4  6FBE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2495  0020F6  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496  0020FA  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497  0020FE  CFDE FFF6          	movff	postinc2,tblptrl
  2498  002102  CFDD FFF7          	movff	postdec2,tblptrh
  2499  002106                     	if	0	;tblptru may be non-zero
  2500  002106                     	endif
  2501  002106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2502  002106  0E00               	movlw	low (__mediumconst shr (0+16))
  2503  002108  6EF8               	movwf	tblptru,c
  2504  00210A                     	endif
  2505  00210A  0008               	tblrd		*
  2506  00210C  50F5               	movf	tablat,w,c
  2507  00210E  6FBF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2508  002110  6BC0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2509  002112  51BD               	movf	??_vfpfcnvrt& (0+255),w,b
  2510  002114  27BF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2511  002116  51BE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2512  002118  23C0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2513  00211A  51C0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2514  00211C  E106               	bnz	u8280
  2515  00211E  0E1A               	movlw	26
  2516  002120  5DBF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2517  002122  B0D8               	btfsc	status,0,c
  2518  002124  D002               	goto	u8280
  2519  002126  0E01               	movlw	1
  2520  002128  D001               	goto	u8290
  2521  00212A                     u8280:
  2522  00212A  0E00               	movlw	0
  2523  00212C                     u8290:
  2524  00212C  6FC3               	movwf	_vfpfcnvrt$1402& (0+255),b
  2525  00212E  6BC4               	clrf	(_vfpfcnvrt$1402+1)& (0+255),b
  2526                           
  2527                           ; BSR set to: 0
  2528  002130  51C3               	movf	_vfpfcnvrt$1402& (0+255),w,b
  2529  002132  11C4               	iorwf	(_vfpfcnvrt$1402+1)& (0+255),w,b
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2533                           
  2534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2538  002134  C0BB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2539  002138  C0BC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2540  00213C  CFDF F0BD          	movff	indf2,??_vfpfcnvrt
  2541  002140  0E04               	movlw	4
  2542  002142  26DE               	addwf	postinc2,f,c
  2543  002144  CFDF F0BE          	movff	indf2,??_vfpfcnvrt+1
  2544  002148  0E00               	movlw	0
  2545  00214A  22DD               	addwfc	postdec2,f,c
  2546  00214C  C0BD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2547  002150  C0BE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2548  002154  CFDE F0C5          	movff	postinc2,vfpfcnvrt@f
  2549  002158  CFDE F0C6          	movff	postinc2,vfpfcnvrt@f+1
  2550  00215C  CFDE F0C7          	movff	postinc2,vfpfcnvrt@f+2
  2551  002160  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f+3
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2555                           
  2556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2557  002164  0E02               	movlw	2
  2558  002166  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  00216A  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  00216E  26DE               	addwf	postinc2,f,c
  2561  002170  0E00               	movlw	0
  2562  002172  22DD               	addwfc	postdec2,f,c
  2563  002174  D77F               	goto	l6273
  2564  002176                     l6293:
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2568  002176  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2569  00217A  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2570  00217E  CFDE FFF6          	movff	postinc2,tblptrl
  2571  002182  CFDD FFF7          	movff	postdec2,tblptrh
  2572  002186                     	if	0	;tblptru may be non-zero
  2573  002186                     	endif
  2574  002186                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2575  002186  0E00               	movlw	low (__mediumconst shr (0+16))
  2576  002188  6EF8               	movwf	tblptru,c
  2577  00218A                     	endif
  2578  00218A  0008               	tblrd		*
  2579  00218C  50F5               	movf	tablat,w,c
  2580  00218E  0A25               	xorlw	37
  2581  002190  A4D8               	btfss	status,2,c
  2582  002192  D017               	goto	l6303
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2586  002194  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2587  002198  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2588  00219C  2ADE               	incf	postinc2,f,c
  2589  00219E  0E00               	movlw	0
  2590  0021A0  22DD               	addwfc	postdec2,f,c
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2594  0021A2  0E00               	movlw	0
  2595  0021A4  6F71               	movwf	(fputc@c+1)& (0+255),b
  2596  0021A6  0E25               	movlw	37
  2597  0021A8  6F70               	movwf	fputc@c& (0+255),b
  2598  0021AA  C0B7  F072         	movff	vfpfcnvrt@fp,fputc@fp
  2599  0021AE  C0B8  F073         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2600  0021B2  EC32  F01B         	call	_fputc	;wreg free
  2601  0021B6                     l6299:
  2602                           
  2603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2604  0021B6  0E00               	movlw	0
  2605  0021B8  0100               	movlb	0	; () banked
  2606  0021BA  6FB8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2607  0021BC  0E01               	movlw	1
  2608  0021BE  6FB7               	movwf	?_vfpfcnvrt& (0+255),b
  2609  0021C0  0012               	return	
  2610  0021C2                     l6303:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2614  0021C2  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2615  0021C6  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2616  0021CA  2ADE               	incf	postinc2,f,c
  2617  0021CC  0E00               	movlw	0
  2618  0021CE  22DD               	addwfc	postdec2,f,c
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2622  0021D0  0E00               	movlw	0
  2623  0021D2  6FB8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2624  0021D4  0E00               	movlw	0
  2625  0021D6  6FB7               	movwf	?_vfpfcnvrt& (0+255),b
  2626  0021D8  0012               	return	
  2627  0021DA                     l6309:
  2628                           
  2629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2630  0021DA  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2631  0021DE  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2632  0021E2  CFDE FFF6          	movff	postinc2,tblptrl
  2633  0021E6  CFDD FFF7          	movff	postdec2,tblptrh
  2634  0021EA                     	if	0	;tblptru may be non-zero
  2635  0021EA                     	endif
  2636  0021EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2637  0021EA  0E00               	movlw	low (__mediumconst shr (0+16))
  2638  0021EC  6EF8               	movwf	tblptru,c
  2639  0021EE                     	endif
  2640  0021EE  0008               	tblrd		*
  2641  0021F0  50F5               	movf	tablat,w,c
  2642  0021F2  0100               	movlb	0	; () banked
  2643  0021F4  6F70               	movwf	fputc@c& (0+255),b
  2644  0021F6  6B71               	clrf	(fputc@c+1)& (0+255),b
  2645  0021F8  C0B7  F072         	movff	vfpfcnvrt@fp,fputc@fp
  2646  0021FC  C0B8  F073         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2647  002200  EC32  F01B         	call	_fputc	;wreg free
  2648                           
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2650  002204  C0B9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2651  002208  C0BA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2652  00220C  2ADE               	incf	postinc2,f,c
  2653  00220E  0E00               	movlw	0
  2654  002210  22DD               	addwfc	postdec2,f,c
  2655  002212  D7D1               	goto	l6299
  2656  002214                     __end_of_vfpfcnvrt:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _strncmp *****************
  2660 ;; Defined at:
  2661 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  _l              2   16[BANK0 ] PTR const unsigned char 
  2664 ;;		 -> vfpfcnvrt@ct(3), 
  2665 ;;  _r              2   18[BANK0 ] PTR const unsigned char 
  2666 ;;		 -> STR_18(3), 
  2667 ;;  n               2   20[BANK0 ] unsigned int 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  r               2   25[BANK0 ] PTR const unsigned char 
  2670 ;;		 -> STR_18(3), 
  2671 ;;  l               2   23[BANK0 ] PTR const unsigned char 
  2672 ;;		 -> vfpfcnvrt@ct(3), 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  2   16[BANK0 ] int 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;Total ram usage:       11 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    4
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_vfpfcnvrt
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text4
  2697  0035B4                     __ptext4:
  2698                           	opt callstack 0
  2699  0035B4                     _strncmp:
  2700                           	opt callstack 23
  2701                           
  2702                           ;incstack = 0
  2703  0035B4  C070  F077         	movff	strncmp@_l,strncmp@l
  2704  0035B8  C071  F078         	movff	strncmp@_l+1,strncmp@l+1
  2705  0035BC  C072  F079         	movff	strncmp@_r,strncmp@r
  2706  0035C0  C073  F07A         	movff	strncmp@_r+1,strncmp@r+1
  2707  0035C4  0100               	movlb	0	; () banked
  2708  0035C6  0774               	decf	strncmp@n& (0+255),f,b
  2709  0035C8  A0D8               	btfss	status,0,c
  2710  0035CA  0775               	decf	(strncmp@n+1)& (0+255),f,b
  2711  0035CC  2974               	incf	strncmp@n& (0+255),w,b
  2712  0035CE  E10F               	bnz	l6205
  2713  0035D0  2975               	incf	(strncmp@n+1)& (0+255),w,b
  2714  0035D2  A4D8               	btfss	status,2,c
  2715  0035D4  D00C               	goto	l6205
  2716                           
  2717                           ; BSR set to: 0
  2718  0035D6  0E00               	movlw	0
  2719  0035D8  6F71               	movwf	(?_strncmp+1)& (0+255),b
  2720  0035DA  0E00               	movlw	0
  2721  0035DC  6F70               	movwf	?_strncmp& (0+255),b
  2722  0035DE  0012               	return	
  2723  0035E0                     l6203:
  2724                           
  2725                           ; BSR set to: 0
  2726  0035E0  4B77               	infsnz	strncmp@l& (0+255),f,b
  2727  0035E2  2B78               	incf	(strncmp@l+1)& (0+255),f,b
  2728  0035E4  4B79               	infsnz	strncmp@r& (0+255),f,b
  2729  0035E6  2B7A               	incf	(strncmp@r+1)& (0+255),f,b
  2730  0035E8  0774               	decf	strncmp@n& (0+255),f,b
  2731  0035EA  A0D8               	btfss	status,0,c
  2732  0035EC  0775               	decf	(strncmp@n+1)& (0+255),f,b
  2733  0035EE                     l6205:
  2734                           
  2735                           ; BSR set to: 0
  2736  0035EE  C077  FFD9         	movff	strncmp@l,fsr2l
  2737  0035F2  C078  FFDA         	movff	strncmp@l+1,fsr2h
  2738  0035F6  50DF               	movf	indf2,w,c
  2739  0035F8  B4D8               	btfsc	status,2,c
  2740  0035FA  D020               	goto	u8140
  2741                           
  2742                           ; BSR set to: 0
  2743  0035FC  C079  FFF6         	movff	strncmp@r,tblptrl
  2744  003600  C07A  FFF7         	movff	strncmp@r+1,tblptrh
  2745  003604                     	if	0	;tblptru may be non-zero
  2746  003604                     	endif
  2747  003604                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2748  003604  0E00               	movlw	low (__mediumconst shr (0+16))
  2749  003606  6EF8               	movwf	tblptru,c
  2750  003608                     	endif
  2751  003608  0008               	tblrd		*
  2752  00360A  50F5               	movf	tablat,w,c
  2753  00360C  0900               	iorlw	0
  2754  00360E  B4D8               	btfsc	status,2,c
  2755  003610  D015               	goto	u8140
  2756                           
  2757                           ; BSR set to: 0
  2758  003612  5174               	movf	strncmp@n& (0+255),w,b
  2759  003614  1175               	iorwf	(strncmp@n+1)& (0+255),w,b
  2760  003616  B4D8               	btfsc	status,2,c
  2761  003618  D011               	goto	u8140
  2762                           
  2763                           ; BSR set to: 0
  2764  00361A  C077  FFD9         	movff	strncmp@l,fsr2l
  2765  00361E  C078  FFDA         	movff	strncmp@l+1,fsr2h
  2766  003622  50DF               	movf	indf2,w,c
  2767  003624  6F76               	movwf	??_strncmp& (0+255),b
  2768  003626  C079  FFF6         	movff	strncmp@r,tblptrl
  2769  00362A  C07A  FFF7         	movff	strncmp@r+1,tblptrh
  2770  00362E                     	if	0	;tblptru may be non-zero
  2771  00362E                     	endif
  2772  00362E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2773  00362E  0E00               	movlw	low (__mediumconst shr (0+16))
  2774  003630  6EF8               	movwf	tblptru,c
  2775  003632                     	endif
  2776  003632  0008               	tblrd		*
  2777  003634  50F5               	movf	tablat,w,c
  2778  003636  1976               	xorwf	??_strncmp& (0+255),w,b
  2779  003638  B4D8               	btfsc	status,2,c
  2780  00363A  D7D2               	goto	l6203
  2781  00363C                     u8140:
  2782                           
  2783                           ; BSR set to: 0
  2784  00363C  C077  FFD9         	movff	strncmp@l,fsr2l
  2785  003640  C078  FFDA         	movff	strncmp@l+1,fsr2h
  2786  003644  50DF               	movf	indf2,w,c
  2787  003646  6F76               	movwf	??_strncmp& (0+255),b
  2788  003648  C079  FFF6         	movff	strncmp@r,tblptrl
  2789  00364C  C07A  FFF7         	movff	strncmp@r+1,tblptrh
  2790  003650                     	if	0	;tblptru may be non-zero
  2791  003650                     	endif
  2792  003650                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2793  003650  0E00               	movlw	low (__mediumconst shr (0+16))
  2794  003652  6EF8               	movwf	tblptru,c
  2795  003654                     	endif
  2796  003654  0008               	tblrd		*
  2797  003656  50F5               	movf	tablat,w,c
  2798  003658  5D76               	subwf	??_strncmp& (0+255),w,b
  2799  00365A  6F70               	movwf	?_strncmp& (0+255),b
  2800  00365C  6B71               	clrf	(?_strncmp+1)& (0+255),b
  2801  00365E  A0D8               	btfss	status,0,c
  2802  003660  0771               	decf	(?_strncmp+1)& (0+255),f,b
  2803                           
  2804                           ; BSR set to: 0
  2805  003662  0012               	return		;funcret
  2806  003664                     __end_of_strncmp:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _efgtoa *****************
  2810 ;; Defined at:
  2811 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  fp              2   75[BANK0 ] PTR struct _IO_FILE
  2814 ;;		 -> sprintf@f(6), 
  2815 ;;  f               4   77[BANK0 ] PTR struct _IO_FILE
  2816 ;;  c               1   81[BANK0 ] unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  u               4   52[BANK1 ] unsigned char 
  2819 ;;  g               4   44[BANK1 ] unsigned char 
  2820 ;;  l               4   38[BANK1 ] unsigned char 
  2821 ;;  h               4   34[BANK1 ] unsigned char 
  2822 ;;  ou              4    0[BANK1 ] unsigned char 
  2823 ;;  n               2   50[BANK1 ] int 
  2824 ;;  e               2   48[BANK1 ] int 
  2825 ;;  i               2   42[BANK1 ] int 
  2826 ;;  w               2   31[BANK1 ] int 
  2827 ;;  p               2   28[BANK1 ] int 
  2828 ;;  sign            2   26[BANK1 ] int 
  2829 ;;  d               2   24[BANK1 ] int 
  2830 ;;  ne              2   22[BANK1 ] int 
  2831 ;;  m               2   20[BANK1 ] int 
  2832 ;;  pp              2   18[BANK1 ] int 
  2833 ;;  t               2   16[BANK1 ] int 
  2834 ;;  mode            1   33[BANK1 ] unsigned char 
  2835 ;;  nmode           1   30[BANK1 ] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2   75[BANK0 ] int 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         0      12      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:       68 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    8
  2852 ;; This function calls:
  2853 ;;		___awdiv
  2854 ;;		___awmod
  2855 ;;		___fladd
  2856 ;;		___fldiv
  2857 ;;		___fleq
  2858 ;;		___flge
  2859 ;;		___flmul
  2860 ;;		___flneg
  2861 ;;		___flsub
  2862 ;;		___fltol
  2863 ;;		___fpclassifyf
  2864 ;;		_floorf
  2865 ;;		_isupper
  2866 ;;		_pad
  2867 ;;		_strcpy
  2868 ;;		_tolower
  2869 ;; This function is called by:
  2870 ;;		_vfpfcnvrt
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text5
  2875  001058                     __ptext5:
  2876                           	opt callstack 0
  2877  001058                     _efgtoa:
  2878                           	opt callstack 19
  2879                           
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;incstack = 0
  2884  001058  0E00               	movlw	0
  2885  00105A  0101               	movlb	1	; () banked
  2886  00105C  6FA1               	movwf	(efgtoa@sign+1)& (0+255),b
  2887  00105E  0E00               	movlw	0
  2888  001060  6FA0               	movwf	efgtoa@sign& (0+255),b
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2892  001062  C0AD  F1B2         	movff	efgtoa@f,efgtoa@g
  2893  001066  C0AE  F1B3         	movff	efgtoa@f+1,efgtoa@g+1
  2894  00106A  C0AF  F1B4         	movff	efgtoa@f+2,efgtoa@g+2
  2895  00106E  C0B0  F1B5         	movff	efgtoa@f+3,efgtoa@g+3
  2896                           
  2897                           ; BSR set to: 1
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2899  001072  AFB5               	btfss	(efgtoa@g+3)& (0+255),7,b
  2900  001074  D016               	goto	l5867
  2901                           
  2902                           ; BSR set to: 1
  2903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2904  001076  0E00               	movlw	0
  2905  001078  6FA1               	movwf	(efgtoa@sign+1)& (0+255),b
  2906  00107A  0E01               	movlw	1
  2907  00107C  6FA0               	movwf	efgtoa@sign& (0+255),b
  2908                           
  2909                           ; BSR set to: 1
  2910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2911  00107E  C1B2  F070         	movff	efgtoa@g,___flneg@f1
  2912  001082  C1B3  F071         	movff	efgtoa@g+1,___flneg@f1+1
  2913  001086  C1B4  F072         	movff	efgtoa@g+2,___flneg@f1+2
  2914  00108A  C1B5  F073         	movff	efgtoa@g+3,___flneg@f1+3
  2915  00108E  EC1D  F020         	call	___flneg	;wreg free
  2916  001092  C070  F1B2         	movff	?___flneg,efgtoa@g
  2917  001096  C071  F1B3         	movff	?___flneg+1,efgtoa@g+1
  2918  00109A  C072  F1B4         	movff	?___flneg+2,efgtoa@g+2
  2919  00109E  C073  F1B5         	movff	?___flneg+3,efgtoa@g+3
  2920  0010A2                     l5867:
  2921                           
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2923  0010A2  0E00               	movlw	0
  2924  0010A4  0101               	movlb	1	; () banked
  2925  0010A6  6FB9               	movwf	(efgtoa@n+1)& (0+255),b
  2926  0010A8  0E00               	movlw	0
  2927  0010AA  6FB8               	movwf	efgtoa@n& (0+255),b
  2928                           
  2929                           ; BSR set to: 1
  2930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2931  0010AC  C041  F1A5         	movff	_width,efgtoa@w
  2932  0010B0  C042  F1A6         	movff	_width+1,efgtoa@w+1
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2936  0010B4  51A0               	movf	efgtoa@sign& (0+255),w,b
  2937  0010B6  11A1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2938  0010B8  A4D8               	btfss	status,2,c
  2939  0010BA  D003               	goto	u7530
  2940                           
  2941                           ; BSR set to: 1
  2942  0010BC  0100               	movlb	0	; () banked
  2943  0010BE  A5E3               	btfss	_flags& (0+255),2,b
  2944  0010C0  D014               	goto	l5887
  2945  0010C2                     u7530:
  2946                           
  2947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2948  0010C2  0101               	movlb	1	; () banked
  2949  0010C4  51A0               	movf	efgtoa@sign& (0+255),w,b
  2950  0010C6  11A1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2951  0010C8  A4D8               	btfss	status,2,c
  2952  0010CA  D004               	goto	l5879
  2953                           
  2954                           ; BSR set to: 1
  2955  0010CC  0E00               	movlw	0
  2956  0010CE  6F8B               	movwf	(_efgtoa$1372+1)& (0+255),b
  2957  0010D0  0E2B               	movlw	43
  2958  0010D2  D003               	goto	L1
  2959  0010D4                     l5879:
  2960                           
  2961                           ; BSR set to: 1
  2962  0010D4  0E00               	movlw	0
  2963  0010D6  6F8B               	movwf	(_efgtoa$1372+1)& (0+255),b
  2964  0010D8  0E2D               	movlw	45
  2965  0010DA                     L1:
  2966  0010DA  6F8A               	movwf	_efgtoa$1372& (0+255),b
  2967                           
  2968                           ; BSR set to: 1
  2969  0010DC  C18A  F116         	movff	_efgtoa$1372,_dbuf
  2970                           
  2971                           ; BSR set to: 1
  2972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2973  0010E0  4BB8               	infsnz	efgtoa@n& (0+255),f,b
  2974  0010E2  2BB9               	incf	(efgtoa@n+1)& (0+255),f,b
  2975                           
  2976                           ; BSR set to: 1
  2977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2978  0010E4  07A5               	decf	efgtoa@w& (0+255),f,b
  2979  0010E6  A0D8               	btfss	status,0,c
  2980  0010E8  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  2981  0010EA                     l5887:
  2982                           
  2983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2984  0010EA  C1B2  F070         	movff	efgtoa@g,___fpclassifyf@x
  2985  0010EE  C1B3  F071         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2986  0010F2  C1B4  F072         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2987  0010F6  C1B5  F073         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2988  0010FA  EC58  F019         	call	___fpclassifyf	;wreg free
  2989  0010FE  0100               	movlb	0	; () banked
  2990  001100  0570               	decf	?___fpclassifyf& (0+255),w,b
  2991  001102  1171               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  2992  001104  A4D8               	btfss	status,2,c
  2993  001106  D053               	goto	l5905
  2994                           
  2995                           ; BSR set to: 0
  2996  001108  0EBF               	movlw	191
  2997  00110A  6FB2               	movwf	??_efgtoa& (0+255),b
  2998  00110C  0EFF               	movlw	255
  2999  00110E  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  3000  001110  51B1               	movf	efgtoa@c& (0+255),w,b
  3001  001112  6FB4               	movwf	(??_efgtoa+2)& (0+255),b
  3002  001114  6BB5               	clrf	(??_efgtoa+3)& (0+255),b
  3003  001116  51B2               	movf	??_efgtoa& (0+255),w,b
  3004  001118  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  3005  00111A  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  3006  00111C  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3007  00111E  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  3008  001120  E106               	bnz	u7560
  3009  001122  0E1A               	movlw	26
  3010  001124  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  3011  001126  B0D8               	btfsc	status,0,c
  3012  001128  D002               	goto	u7560
  3013  00112A  0E01               	movlw	1
  3014  00112C  D001               	goto	u7570
  3015  00112E                     u7560:
  3016  00112E  0E00               	movlw	0
  3017  001130                     u7570:
  3018  001130  0101               	movlb	1	; () banked
  3019  001132  6F8C               	movwf	_efgtoa$1373& (0+255),b
  3020  001134  6B8D               	clrf	(_efgtoa$1373+1)& (0+255),b
  3021                           
  3022                           ; BSR set to: 1
  3023  001136  518C               	movf	_efgtoa$1373& (0+255),w,b
  3024  001138  118D               	iorwf	(_efgtoa$1373+1)& (0+255),w,b
  3025  00113A  B4D8               	btfsc	status,2,c
  3026  00113C  D010               	goto	l5897
  3027                           
  3028                           ; BSR set to: 1
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3030  00113E  0E16               	movlw	low _dbuf
  3031  001140  25B8               	addwf	efgtoa@n& (0+255),w,b
  3032  001142  0100               	movlb	0	; () banked
  3033  001144  6F70               	movwf	strcpy@dest& (0+255),b
  3034  001146  0E01               	movlw	high _dbuf
  3035  001148  0101               	movlb	1	; () banked
  3036  00114A  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3037  00114C  0100               	movlb	0	; () banked
  3038  00114E  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  3039  001150  0E3F               	movlw	low STR_8
  3040  001152  6F72               	movwf	strcpy@src& (0+255),b
  3041  001154  0E10               	movlw	high STR_8
  3042  001156  6F73               	movwf	(strcpy@src+1)& (0+255),b
  3043  001158  EC8F  F01E         	call	_strcpy	;wreg free
  3044                           
  3045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3046  00115C  D00F               	goto	l5899
  3047  00115E                     l5897:
  3048                           
  3049                           ; BSR set to: 1
  3050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3051  00115E  0E16               	movlw	low _dbuf
  3052  001160  25B8               	addwf	efgtoa@n& (0+255),w,b
  3053  001162  0100               	movlb	0	; () banked
  3054  001164  6F70               	movwf	strcpy@dest& (0+255),b
  3055  001166  0E01               	movlw	high _dbuf
  3056  001168  0101               	movlb	1	; () banked
  3057  00116A  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3058  00116C  0100               	movlb	0	; () banked
  3059  00116E  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  3060  001170  0E47               	movlw	low STR_9
  3061  001172  6F72               	movwf	strcpy@src& (0+255),b
  3062  001174  0E10               	movlw	high STR_9
  3063  001176  6F73               	movwf	(strcpy@src+1)& (0+255),b
  3064  001178  EC8F  F01E         	call	_strcpy	;wreg free
  3065  00117C                     l5899:
  3066                           
  3067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3068  00117C  0101               	movlb	1	; () banked
  3069  00117E  0EFD               	movlw	253
  3070  001180  27A5               	addwf	efgtoa@w& (0+255),f,b
  3071  001182  0EFF               	movlw	255
  3072  001184  23A6               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3073  001186                     l5901:
  3074                           
  3075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3076  001186  C0AB  F080         	movff	efgtoa@fp,pad@fp
  3077  00118A  C0AC  F081         	movff	efgtoa@fp+1,pad@fp+1
  3078  00118E  0E16               	movlw	low _dbuf
  3079  001190  0100               	movlb	0	; () banked
  3080  001192  6F82               	movwf	pad@buf& (0+255),b
  3081  001194  0E01               	movlw	high _dbuf
  3082  001196  6F83               	movwf	(pad@buf+1)& (0+255),b
  3083  001198  C1A5  F084         	movff	efgtoa@w,pad@p
  3084  00119C  C1A6  F085         	movff	efgtoa@w+1,pad@p+1
  3085  0011A0  ECD3  F01B         	call	_pad	;wreg free
  3086  0011A4  C080  F0AB         	movff	?_pad,?_efgtoa
  3087  0011A8  C081  F0AC         	movff	?_pad+1,?_efgtoa+1
  3088  0011AC  0012               	return	
  3089  0011AE                     l5905:
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3093  0011AE  C1B2  F070         	movff	efgtoa@g,___fpclassifyf@x
  3094  0011B2  C1B3  F071         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3095  0011B6  C1B4  F072         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3096  0011BA  C1B5  F073         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3097  0011BE  EC58  F019         	call	___fpclassifyf	;wreg free
  3098  0011C2  0100               	movlb	0	; () banked
  3099  0011C4  5170               	movf	?___fpclassifyf& (0+255),w,b
  3100  0011C6  1171               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3101  0011C8  A4D8               	btfss	status,2,c
  3102  0011CA  D03B               	goto	l5923
  3103                           
  3104                           ; BSR set to: 0
  3105  0011CC  0EBF               	movlw	191
  3106  0011CE  6FB2               	movwf	??_efgtoa& (0+255),b
  3107  0011D0  0EFF               	movlw	255
  3108  0011D2  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  3109  0011D4  51B1               	movf	efgtoa@c& (0+255),w,b
  3110  0011D6  6FB4               	movwf	(??_efgtoa+2)& (0+255),b
  3111  0011D8  6BB5               	clrf	(??_efgtoa+3)& (0+255),b
  3112  0011DA  51B2               	movf	??_efgtoa& (0+255),w,b
  3113  0011DC  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  3114  0011DE  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  3115  0011E0  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3116  0011E2  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  3117  0011E4  E106               	bnz	u7600
  3118  0011E6  0E1A               	movlw	26
  3119  0011E8  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  3120  0011EA  B0D8               	btfsc	status,0,c
  3121  0011EC  D002               	goto	u7600
  3122  0011EE  0E01               	movlw	1
  3123  0011F0  D001               	goto	u7610
  3124  0011F2                     u7600:
  3125  0011F2  0E00               	movlw	0
  3126  0011F4                     u7610:
  3127  0011F4  0101               	movlb	1	; () banked
  3128  0011F6  6F8E               	movwf	_efgtoa$1378& (0+255),b
  3129  0011F8  6B8F               	clrf	(_efgtoa$1378+1)& (0+255),b
  3130                           
  3131                           ; BSR set to: 1
  3132  0011FA  518E               	movf	_efgtoa$1378& (0+255),w,b
  3133  0011FC  118F               	iorwf	(_efgtoa$1378+1)& (0+255),w,b
  3134  0011FE  B4D8               	btfsc	status,2,c
  3135  001200  D010               	goto	l5915
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3139  001202  0E16               	movlw	low _dbuf
  3140  001204  25B8               	addwf	efgtoa@n& (0+255),w,b
  3141  001206  0100               	movlb	0	; () banked
  3142  001208  6F70               	movwf	strcpy@dest& (0+255),b
  3143  00120A  0E01               	movlw	high _dbuf
  3144  00120C  0101               	movlb	1	; () banked
  3145  00120E  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3146  001210  0100               	movlb	0	; () banked
  3147  001212  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  3148  001214  0E43               	movlw	low STR_12
  3149  001216  6F72               	movwf	strcpy@src& (0+255),b
  3150  001218  0E10               	movlw	high STR_12
  3151  00121A  6F73               	movwf	(strcpy@src+1)& (0+255),b
  3152  00121C  EC8F  F01E         	call	_strcpy	;wreg free
  3153                           
  3154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3155  001220  D7AD               	goto	l5899
  3156  001222                     l5915:
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3160  001222  0E16               	movlw	low _dbuf
  3161  001224  25B8               	addwf	efgtoa@n& (0+255),w,b
  3162  001226  0100               	movlb	0	; () banked
  3163  001228  6F70               	movwf	strcpy@dest& (0+255),b
  3164  00122A  0E01               	movlw	high _dbuf
  3165  00122C  0101               	movlb	1	; () banked
  3166  00122E  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3167  001230  0100               	movlb	0	; () banked
  3168  001232  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  3169  001234  0E4B               	movlw	low STR_13
  3170  001236  6F72               	movwf	strcpy@src& (0+255),b
  3171  001238  0E10               	movlw	high STR_13
  3172  00123A  6F73               	movwf	(strcpy@src+1)& (0+255),b
  3173  00123C  EC8F  F01E         	call	_strcpy	;wreg free
  3174  001240  D79D               	goto	l5899
  3175  001242                     l5923:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3179  001242  0E00               	movlw	0
  3180  001244  0101               	movlb	1	; () banked
  3181  001246  6FBA               	movwf	efgtoa@u& (0+255),b
  3182  001248  0E00               	movlw	0
  3183  00124A  6FBB               	movwf	(efgtoa@u+1)& (0+255),b
  3184  00124C  0E80               	movlw	128
  3185  00124E  6FBC               	movwf	(efgtoa@u+2)& (0+255),b
  3186  001250  0E3F               	movlw	63
  3187  001252  6FBD               	movwf	(efgtoa@u+3)& (0+255),b
  3188                           
  3189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3190  001254  0E00               	movlw	0
  3191  001256  6FB7               	movwf	(efgtoa@e+1)& (0+255),b
  3192  001258  0E00               	movlw	0
  3193  00125A  6FB6               	movwf	efgtoa@e& (0+255),b
  3194                           
  3195                           ; BSR set to: 1
  3196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3197  00125C  C1B2  F070         	movff	efgtoa@g,___fleq@ff1
  3198  001260  C1B3  F071         	movff	efgtoa@g+1,___fleq@ff1+1
  3199  001264  C1B4  F072         	movff	efgtoa@g+2,___fleq@ff1+2
  3200  001268  C1B5  F073         	movff	efgtoa@g+3,___fleq@ff1+3
  3201  00126C  0E00               	movlw	0
  3202  00126E  0100               	movlb	0	; () banked
  3203  001270  6F74               	movwf	___fleq@ff2& (0+255),b
  3204  001272  0E00               	movlw	0
  3205  001274  6F75               	movwf	(___fleq@ff2+1)& (0+255),b
  3206  001276  0E00               	movlw	0
  3207  001278  6F76               	movwf	(___fleq@ff2+2)& (0+255),b
  3208  00127A  0E00               	movlw	0
  3209  00127C  6F77               	movwf	(___fleq@ff2+3)& (0+255),b
  3210  00127E  EC6D  F01C         	call	___fleq	;wreg free
  3211  001282  0100               	movlb	0	; () banked
  3212  001284  A0D8               	btfss	status,0,c
  3213  001286  D01E               	goto	l5933
  3214  001288  D079               	goto	u7650
  3215  00128A                     l5929:
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3219  00128A  C1BA  F07E         	movff	efgtoa@u,___flmul@b
  3220  00128E  C1BB  F07F         	movff	efgtoa@u+1,___flmul@b+1
  3221  001292  C1BC  F080         	movff	efgtoa@u+2,___flmul@b+2
  3222  001296  C1BD  F081         	movff	efgtoa@u+3,___flmul@b+3
  3223  00129A  0E00               	movlw	0
  3224  00129C  6F82               	movwf	___flmul@a& (0+255),b
  3225  00129E  0E00               	movlw	0
  3226  0012A0  6F83               	movwf	(___flmul@a+1)& (0+255),b
  3227  0012A2  0E20               	movlw	32
  3228  0012A4  6F84               	movwf	(___flmul@a+2)& (0+255),b
  3229  0012A6  0E41               	movlw	65
  3230  0012A8  6F85               	movwf	(___flmul@a+3)& (0+255),b
  3231  0012AA  EC0A  F011         	call	___flmul	;wreg free
  3232  0012AE  C07E  F1BA         	movff	?___flmul,efgtoa@u
  3233  0012B2  C07F  F1BB         	movff	?___flmul+1,efgtoa@u+1
  3234  0012B6  C080  F1BC         	movff	?___flmul+2,efgtoa@u+2
  3235  0012BA  C081  F1BD         	movff	?___flmul+3,efgtoa@u+3
  3236                           
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3238  0012BE  0101               	movlb	1	; () banked
  3239  0012C0  4BB6               	infsnz	efgtoa@e& (0+255),f,b
  3240  0012C2  2BB7               	incf	(efgtoa@e+1)& (0+255),f,b
  3241  0012C4                     l5933:
  3242                           
  3243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3244  0012C4  C1B2  F097         	movff	efgtoa@g,___flge@ff1
  3245  0012C8  C1B3  F098         	movff	efgtoa@g+1,___flge@ff1+1
  3246  0012CC  C1B4  F099         	movff	efgtoa@g+2,___flge@ff1+2
  3247  0012D0  C1B5  F09A         	movff	efgtoa@g+3,___flge@ff1+3
  3248  0012D4  0E00               	movlw	0
  3249  0012D6  0100               	movlb	0	; () banked
  3250  0012D8  6F82               	movwf	___flmul@a& (0+255),b
  3251  0012DA  0E00               	movlw	0
  3252  0012DC  6F83               	movwf	(___flmul@a+1)& (0+255),b
  3253  0012DE  0E20               	movlw	32
  3254  0012E0  6F84               	movwf	(___flmul@a+2)& (0+255),b
  3255  0012E2  0E41               	movlw	65
  3256  0012E4  6F85               	movwf	(___flmul@a+3)& (0+255),b
  3257  0012E6  C1BA  F07E         	movff	efgtoa@u,___flmul@b
  3258  0012EA  C1BB  F07F         	movff	efgtoa@u+1,___flmul@b+1
  3259  0012EE  C1BC  F080         	movff	efgtoa@u+2,___flmul@b+2
  3260  0012F2  C1BD  F081         	movff	efgtoa@u+3,___flmul@b+3
  3261  0012F6  EC0A  F011         	call	___flmul	;wreg free
  3262  0012FA  C07E  F09B         	movff	?___flmul,___flge@ff2
  3263  0012FE  C07F  F09C         	movff	?___flmul+1,___flge@ff2+1
  3264  001302  C080  F09D         	movff	?___flmul+2,___flge@ff2+2
  3265  001306  C081  F09E         	movff	?___flmul+3,___flge@ff2+3
  3266  00130A  ECEF  F018         	call	___flge	;wreg free
  3267  00130E  0100               	movlb	0	; () banked
  3268  001310  A0D8               	btfss	status,0,c
  3269  001312  D01F               	goto	l5939
  3270  001314  D7BA               	goto	l5929
  3271  001316                     l5935:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3275  001316  C1BA  F07E         	movff	efgtoa@u,___fldiv@b
  3276  00131A  C1BB  F07F         	movff	efgtoa@u+1,___fldiv@b+1
  3277  00131E  C1BC  F080         	movff	efgtoa@u+2,___fldiv@b+2
  3278  001322  C1BD  F081         	movff	efgtoa@u+3,___fldiv@b+3
  3279  001326  0E00               	movlw	0
  3280  001328  6F82               	movwf	___fldiv@a& (0+255),b
  3281  00132A  0E00               	movlw	0
  3282  00132C  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  3283  00132E  0E20               	movlw	32
  3284  001330  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  3285  001332  0E41               	movlw	65
  3286  001334  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  3287  001336  EC3B  F014         	call	___fldiv	;wreg free
  3288  00133A  C07E  F1BA         	movff	?___fldiv,efgtoa@u
  3289  00133E  C07F  F1BB         	movff	?___fldiv+1,efgtoa@u+1
  3290  001342  C080  F1BC         	movff	?___fldiv+2,efgtoa@u+2
  3291  001346  C081  F1BD         	movff	?___fldiv+3,efgtoa@u+3
  3292                           
  3293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3294  00134A  0101               	movlb	1	; () banked
  3295  00134C  07B6               	decf	efgtoa@e& (0+255),f,b
  3296  00134E  A0D8               	btfss	status,0,c
  3297  001350  07B7               	decf	(efgtoa@e+1)& (0+255),f,b
  3298  001352                     l5939:
  3299                           
  3300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3301  001352  C1B2  F097         	movff	efgtoa@g,___flge@ff1
  3302  001356  C1B3  F098         	movff	efgtoa@g+1,___flge@ff1+1
  3303  00135A  C1B4  F099         	movff	efgtoa@g+2,___flge@ff1+2
  3304  00135E  C1B5  F09A         	movff	efgtoa@g+3,___flge@ff1+3
  3305  001362  C1BA  F09B         	movff	efgtoa@u,___flge@ff2
  3306  001366  C1BB  F09C         	movff	efgtoa@u+1,___flge@ff2+1
  3307  00136A  C1BC  F09D         	movff	efgtoa@u+2,___flge@ff2+2
  3308  00136E  C1BD  F09E         	movff	efgtoa@u+3,___flge@ff2+3
  3309  001372  ECEF  F018         	call	___flge	;wreg free
  3310  001376  0100               	movlb	0	; () banked
  3311  001378  A0D8               	btfss	status,0,c
  3312  00137A  D7CD               	goto	l5935
  3313  00137C                     u7650:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3317  00137C  C0B1  F076         	movff	efgtoa@c,tolower@c
  3318  001380  6B77               	clrf	(tolower@c+1)& (0+255),b
  3319  001382  ECBA  F01E         	call	_tolower	;wreg free
  3320  001386  0100               	movlb	0	; () banked
  3321  001388  5176               	movf	?_tolower& (0+255),w,b
  3322  00138A  0101               	movlb	1	; () banked
  3323  00138C  6FA7               	movwf	efgtoa@mode& (0+255),b
  3324                           
  3325                           ; BSR set to: 1
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3327  00138E  C1A7  F1A4         	movff	efgtoa@mode,efgtoa@nmode
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3331  001392  0E67               	movlw	103
  3332  001394  19A7               	xorwf	efgtoa@mode& (0+255),w,b
  3333  001396  A4D8               	btfss	status,2,c
  3334  001398  D019               	goto	l5955
  3335                           
  3336                           ; BSR set to: 1
  3337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3338  00139A  5043               	movf	_prec,w,c
  3339  00139C  1044               	iorwf	_prec+1,w,c
  3340  00139E  A4D8               	btfss	status,2,c
  3341  0013A0  D004               	goto	l5951
  3342                           
  3343                           ; BSR set to: 1
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3345  0013A2  0E00               	movlw	0
  3346  0013A4  6E44               	movwf	_prec+1,c
  3347  0013A6  0E01               	movlw	1
  3348  0013A8  6E43               	movwf	_prec,c
  3349  0013AA                     l5951:
  3350                           
  3351                           ; BSR set to: 1
  3352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3353  0013AA  BE44               	btfsc	_prec+1,7,c
  3354  0013AC  D005               	goto	u7680
  3355  0013AE  5044               	movf	_prec+1,w,c
  3356  0013B0  E108               	bnz	l352
  3357  0013B2  0443               	decf	_prec,w,c
  3358  0013B4  B0D8               	btfsc	status,0,c
  3359  0013B6  D005               	goto	l352
  3360  0013B8                     u7680:
  3361                           
  3362                           ; BSR set to: 1
  3363  0013B8  0E00               	movlw	0
  3364  0013BA  6FA3               	movwf	(efgtoa@p+1)& (0+255),b
  3365  0013BC  0E06               	movlw	6
  3366  0013BE  6FA2               	movwf	efgtoa@p& (0+255),b
  3367  0013C0  D008               	goto	l5961
  3368  0013C2                     l352:
  3369                           
  3370                           ; BSR set to: 1
  3371  0013C2  C043  F1A2         	movff	_prec,efgtoa@p
  3372  0013C6  C044  F1A3         	movff	_prec+1,efgtoa@p+1
  3373  0013CA  D003               	goto	l5961
  3374  0013CC                     l5955:
  3375                           
  3376                           ; BSR set to: 1
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3378  0013CC  AE44               	btfss	_prec+1,7,c
  3379  0013CE  D7F9               	goto	l352
  3380  0013D0  D7F3               	goto	u7680
  3381  0013D2                     l5961:
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3385  0013D2  0E67               	movlw	103
  3386  0013D4  19A7               	xorwf	efgtoa@mode& (0+255),w,b
  3387  0013D6  A4D8               	btfss	status,2,c
  3388  0013D8  D028               	goto	l5971
  3389                           
  3390                           ; BSR set to: 1
  3391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3392  0013DA  AFB7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3393  0013DC  D006               	goto	u7710
  3394  0013DE  0EFC               	movlw	252
  3395  0013E0  5DB6               	subwf	efgtoa@e& (0+255),w,b
  3396  0013E2  0EFF               	movlw	255
  3397  0013E4  59B7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3398  0013E6  A0D8               	btfss	status,0,c
  3399  0013E8  D01D               	goto	l5969
  3400  0013EA                     u7710:
  3401                           
  3402                           ; BSR set to: 1
  3403  0013EA  0EFF               	movlw	255
  3404  0013EC  0100               	movlb	0	; () banked
  3405  0013EE  6FB2               	movwf	??_efgtoa& (0+255),b
  3406  0013F0  0EFF               	movlw	255
  3407  0013F2  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  3408  0013F4  C1A2  F0B4         	movff	efgtoa@p,??_efgtoa+2
  3409  0013F8  C1A3  F0B5         	movff	efgtoa@p+1,??_efgtoa+3
  3410  0013FC  51B2               	movf	??_efgtoa& (0+255),w,b
  3411  0013FE  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  3412  001400  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  3413  001402  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3414  001404  0101               	movlb	1	; () banked
  3415  001406  51B6               	movf	efgtoa@e& (0+255),w,b
  3416  001408  0100               	movlb	0	; () banked
  3417  00140A  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  3418  00140C  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  3419  00140E  0A80               	xorlw	128
  3420  001410  6FB6               	movwf	(??_efgtoa+4)& (0+255),b
  3421  001412  0101               	movlb	1	; () banked
  3422  001414  51B7               	movf	(efgtoa@e+1)& (0+255),w,b
  3423  001416  0A80               	xorlw	128
  3424  001418  0100               	movlb	0	; () banked
  3425  00141A  59B6               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3426  00141C  A0D8               	btfss	status,0,c
  3427  00141E  D002               	goto	l5969
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3431  001420  0E66               	movlw	102
  3432  001422  D001               	goto	L2
  3433  001424                     l5969:
  3434                           
  3435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3436  001424  0E65               	movlw	101
  3437  001426                     L2:
  3438  001426  0101               	movlb	1	; () banked
  3439  001428  6FA4               	movwf	efgtoa@nmode& (0+255),b
  3440  00142A                     l5971:
  3441                           
  3442                           ; BSR set to: 1
  3443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3444  00142A  C1A2  F19A         	movff	efgtoa@p,efgtoa@m
  3445  00142E  C1A3  F19B         	movff	efgtoa@p+1,efgtoa@m+1
  3446                           
  3447                           ; BSR set to: 1
  3448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3449  001432  0E67               	movlw	103
  3450  001434  19A7               	xorwf	efgtoa@mode& (0+255),w,b
  3451  001436  A4D8               	btfss	status,2,c
  3452  001438  D005               	goto	u7750
  3453                           
  3454                           ; BSR set to: 1
  3455  00143A  0E66               	movlw	102
  3456  00143C  19A4               	xorwf	efgtoa@nmode& (0+255),w,b
  3457  00143E  B4D8               	btfsc	status,2,c
  3458                           
  3459                           ; BSR set to: 1
  3460  001440  AFB7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3461  001442  D002               	goto	l5981
  3462  001444                     u7750:
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3466  001444  4B9A               	infsnz	efgtoa@m& (0+255),f,b
  3467  001446  2B9B               	incf	(efgtoa@m+1)& (0+255),f,b
  3468  001448                     l5981:
  3469                           
  3470                           ; BSR set to: 1
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3472  001448  0E66               	movlw	102
  3473  00144A  19A4               	xorwf	efgtoa@nmode& (0+255),w,b
  3474  00144C  A4D8               	btfss	status,2,c
  3475  00144E  D016               	goto	l5991
  3476                           
  3477                           ; BSR set to: 1
  3478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3479  001450  AFB7               	btfss	(efgtoa@e+1)& (0+255),7,b
  3480  001452  D00C               	goto	l5987
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3484  001454  0E00               	movlw	0
  3485  001456  6FBA               	movwf	efgtoa@u& (0+255),b
  3486  001458  0E00               	movlw	0
  3487  00145A  6FBB               	movwf	(efgtoa@u+1)& (0+255),b
  3488  00145C  0E80               	movlw	128
  3489  00145E  6FBC               	movwf	(efgtoa@u+2)& (0+255),b
  3490  001460  0E3F               	movlw	63
  3491  001462  6FBD               	movwf	(efgtoa@u+3)& (0+255),b
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3494  001464  0E00               	movlw	0
  3495  001466  6FB7               	movwf	(efgtoa@e+1)& (0+255),b
  3496  001468  0E00               	movlw	0
  3497  00146A  6FB6               	movwf	efgtoa@e& (0+255),b
  3498  00146C                     l5987:
  3499                           
  3500                           ; BSR set to: 1
  3501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3502  00146C  0E67               	movlw	103
  3503  00146E  19A7               	xorwf	efgtoa@mode& (0+255),w,b
  3504  001470  B4D8               	btfsc	status,2,c
  3505  001472  D004               	goto	l5991
  3506                           
  3507                           ; BSR set to: 1
  3508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3509  001474  51B6               	movf	efgtoa@e& (0+255),w,b
  3510  001476  279A               	addwf	efgtoa@m& (0+255),f,b
  3511  001478  51B7               	movf	(efgtoa@e+1)& (0+255),w,b
  3512  00147A  239B               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3513  00147C                     l5991:
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3517  00147C  0E00               	movlw	0
  3518  00147E  6FB1               	movwf	(efgtoa@i+1)& (0+255),b
  3519  001480  0E00               	movlw	0
  3520  001482  6FB0               	movwf	efgtoa@i& (0+255),b
  3521                           
  3522                           ; BSR set to: 1
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3524  001484  C1B2  F1A8         	movff	efgtoa@g,efgtoa@h
  3525  001488  C1B3  F1A9         	movff	efgtoa@g+1,efgtoa@h+1
  3526  00148C  C1B4  F1AA         	movff	efgtoa@g+2,efgtoa@h+2
  3527  001490  C1B5  F1AB         	movff	efgtoa@g+3,efgtoa@h+3
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3531  001494  C1BA  F186         	movff	efgtoa@u,efgtoa@ou
  3532  001498  C1BB  F187         	movff	efgtoa@u+1,efgtoa@ou+1
  3533  00149C  C1BC  F188         	movff	efgtoa@u+2,efgtoa@ou+2
  3534  0014A0  C1BD  F189         	movff	efgtoa@u+3,efgtoa@ou+3
  3535                           
  3536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3537  0014A4  D07C               	goto	l6005
  3538  0014A6                     l5997:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3542  0014A6  C1A8  F07E         	movff	efgtoa@h,___fldiv@b
  3543  0014AA  C1A9  F07F         	movff	efgtoa@h+1,___fldiv@b+1
  3544  0014AE  C1AA  F080         	movff	efgtoa@h+2,___fldiv@b+2
  3545  0014B2  C1AB  F081         	movff	efgtoa@h+3,___fldiv@b+3
  3546  0014B6  C1BA  F082         	movff	efgtoa@u,___fldiv@a
  3547  0014BA  C1BB  F083         	movff	efgtoa@u+1,___fldiv@a+1
  3548  0014BE  C1BC  F084         	movff	efgtoa@u+2,___fldiv@a+2
  3549  0014C2  C1BD  F085         	movff	efgtoa@u+3,___fldiv@a+3
  3550  0014C6  EC3B  F014         	call	___fldiv	;wreg free
  3551  0014CA  C07E  F097         	movff	?___fldiv,floorf@x
  3552  0014CE  C07F  F098         	movff	?___fldiv+1,floorf@x+1
  3553  0014D2  C080  F099         	movff	?___fldiv+2,floorf@x+2
  3554  0014D6  C081  F09A         	movff	?___fldiv+3,floorf@x+3
  3555  0014DA  ECC4  F016         	call	_floorf	;wreg free
  3556  0014DE  C097  F1AC         	movff	?_floorf,efgtoa@l
  3557  0014E2  C098  F1AD         	movff	?_floorf+1,efgtoa@l+1
  3558  0014E6  C099  F1AE         	movff	?_floorf+2,efgtoa@l+2
  3559  0014EA  C09A  F1AF         	movff	?_floorf+3,efgtoa@l+3
  3560                           
  3561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3562  0014EE  C1AC  F070         	movff	efgtoa@l,___fltol@f1
  3563  0014F2  C1AD  F071         	movff	efgtoa@l+1,___fltol@f1+1
  3564  0014F6  C1AE  F072         	movff	efgtoa@l+2,___fltol@f1+2
  3565  0014FA  C1AF  F073         	movff	efgtoa@l+3,___fltol@f1+3
  3566  0014FE  EC1E  F01A         	call	___fltol	;wreg free
  3567  001502  C070  F19E         	movff	?___fltol,efgtoa@d
  3568  001506  C071  F19F         	movff	?___fltol+1,efgtoa@d+1
  3569                           
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3571  00150A  C1A8  F097         	movff	efgtoa@h,___flsub@b
  3572  00150E  C1A9  F098         	movff	efgtoa@h+1,___flsub@b+1
  3573  001512  C1AA  F099         	movff	efgtoa@h+2,___flsub@b+2
  3574  001516  C1AB  F09A         	movff	efgtoa@h+3,___flsub@b+3
  3575  00151A  C1BA  F082         	movff	efgtoa@u,___flmul@a
  3576  00151E  C1BB  F083         	movff	efgtoa@u+1,___flmul@a+1
  3577  001522  C1BC  F084         	movff	efgtoa@u+2,___flmul@a+2
  3578  001526  C1BD  F085         	movff	efgtoa@u+3,___flmul@a+3
  3579  00152A  C1AC  F07E         	movff	efgtoa@l,___flmul@b
  3580  00152E  C1AD  F07F         	movff	efgtoa@l+1,___flmul@b+1
  3581  001532  C1AE  F080         	movff	efgtoa@l+2,___flmul@b+2
  3582  001536  C1AF  F081         	movff	efgtoa@l+3,___flmul@b+3
  3583  00153A  EC0A  F011         	call	___flmul	;wreg free
  3584  00153E  C07E  F09B         	movff	?___flmul,___flsub@a
  3585  001542  C07F  F09C         	movff	?___flmul+1,___flsub@a+1
  3586  001546  C080  F09D         	movff	?___flmul+2,___flsub@a+2
  3587  00154A  C081  F09E         	movff	?___flmul+3,___flsub@a+3
  3588  00154E  EC05  F01F         	call	___flsub	;wreg free
  3589  001552  C097  F1A8         	movff	?___flsub,efgtoa@h
  3590  001556  C098  F1A9         	movff	?___flsub+1,efgtoa@h+1
  3591  00155A  C099  F1AA         	movff	?___flsub+2,efgtoa@h+2
  3592  00155E  C09A  F1AB         	movff	?___flsub+3,efgtoa@h+3
  3593                           
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3595  001562  C1BA  F07E         	movff	efgtoa@u,___fldiv@b
  3596  001566  C1BB  F07F         	movff	efgtoa@u+1,___fldiv@b+1
  3597  00156A  C1BC  F080         	movff	efgtoa@u+2,___fldiv@b+2
  3598  00156E  C1BD  F081         	movff	efgtoa@u+3,___fldiv@b+3
  3599  001572  0E00               	movlw	0
  3600  001574  0100               	movlb	0	; () banked
  3601  001576  6F82               	movwf	___fldiv@a& (0+255),b
  3602  001578  0E00               	movlw	0
  3603  00157A  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  3604  00157C  0E20               	movlw	32
  3605  00157E  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  3606  001580  0E41               	movlw	65
  3607  001582  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  3608  001584  EC3B  F014         	call	___fldiv	;wreg free
  3609  001588  C07E  F1BA         	movff	?___fldiv,efgtoa@u
  3610  00158C  C07F  F1BB         	movff	?___fldiv+1,efgtoa@u+1
  3611  001590  C080  F1BC         	movff	?___fldiv+2,efgtoa@u+2
  3612  001594  C081  F1BD         	movff	?___fldiv+3,efgtoa@u+3
  3613                           
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3615  001598  0101               	movlb	1	; () banked
  3616  00159A  4BB0               	infsnz	efgtoa@i& (0+255),f,b
  3617  00159C  2BB1               	incf	(efgtoa@i+1)& (0+255),f,b
  3618  00159E                     l6005:
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3622  00159E  519A               	movf	efgtoa@m& (0+255),w,b
  3623  0015A0  5DB0               	subwf	efgtoa@i& (0+255),w,b
  3624  0015A2  51B1               	movf	(efgtoa@i+1)& (0+255),w,b
  3625  0015A4  0A80               	xorlw	128
  3626  0015A6  0100               	movlb	0	; () banked
  3627  0015A8  6FB2               	movwf	??_efgtoa& (0+255),b
  3628  0015AA  0101               	movlb	1	; () banked
  3629  0015AC  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  3630  0015AE  0A80               	xorlw	128
  3631  0015B0  0100               	movlb	0	; () banked
  3632  0015B2  59B2               	subwfb	??_efgtoa& (0+255),w,b
  3633  0015B4  A0D8               	btfss	status,0,c
  3634  0015B6  D777               	goto	l5997
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3638  0015B8  C1BA  F07E         	movff	efgtoa@u,___flmul@b
  3639  0015BC  C1BB  F07F         	movff	efgtoa@u+1,___flmul@b+1
  3640  0015C0  C1BC  F080         	movff	efgtoa@u+2,___flmul@b+2
  3641  0015C4  C1BD  F081         	movff	efgtoa@u+3,___flmul@b+3
  3642  0015C8  0E00               	movlw	0
  3643  0015CA  6F82               	movwf	___flmul@a& (0+255),b
  3644  0015CC  0E00               	movlw	0
  3645  0015CE  6F83               	movwf	(___flmul@a+1)& (0+255),b
  3646  0015D0  0EA0               	movlw	160
  3647  0015D2  6F84               	movwf	(___flmul@a+2)& (0+255),b
  3648  0015D4  0E40               	movlw	64
  3649  0015D6  6F85               	movwf	(___flmul@a+3)& (0+255),b
  3650  0015D8  EC0A  F011         	call	___flmul	;wreg free
  3651  0015DC  C07E  F1AC         	movff	?___flmul,efgtoa@l
  3652  0015E0  C07F  F1AD         	movff	?___flmul+1,efgtoa@l+1
  3653  0015E4  C080  F1AE         	movff	?___flmul+2,efgtoa@l+2
  3654  0015E8  C081  F1AF         	movff	?___flmul+3,efgtoa@l+3
  3655                           
  3656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3657  0015EC  C1A8  F097         	movff	efgtoa@h,___flge@ff1
  3658  0015F0  C1A9  F098         	movff	efgtoa@h+1,___flge@ff1+1
  3659  0015F4  C1AA  F099         	movff	efgtoa@h+2,___flge@ff1+2
  3660  0015F8  C1AB  F09A         	movff	efgtoa@h+3,___flge@ff1+3
  3661  0015FC  C1AC  F09B         	movff	efgtoa@l,___flge@ff2
  3662  001600  C1AD  F09C         	movff	efgtoa@l+1,___flge@ff2+1
  3663  001604  C1AE  F09D         	movff	efgtoa@l+2,___flge@ff2+2
  3664  001608  C1AF  F09E         	movff	efgtoa@l+3,___flge@ff2+3
  3665  00160C  ECEF  F018         	call	___flge	;wreg free
  3666  001610  0100               	movlb	0	; () banked
  3667  001612  B0D8               	btfsc	status,0,c
  3668  001614  D003               	goto	l6013
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3672  001616  0E00               	movlw	0
  3673  001618  0101               	movlb	1	; () banked
  3674  00161A  D019               	goto	L3
  3675  00161C                     l6013:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3679  00161C  C1A8  F070         	movff	efgtoa@h,___fleq@ff1
  3680  001620  C1A9  F071         	movff	efgtoa@h+1,___fleq@ff1+1
  3681  001624  C1AA  F072         	movff	efgtoa@h+2,___fleq@ff1+2
  3682  001628  C1AB  F073         	movff	efgtoa@h+3,___fleq@ff1+3
  3683  00162C  C1AC  F074         	movff	efgtoa@l,___fleq@ff2
  3684  001630  C1AD  F075         	movff	efgtoa@l+1,___fleq@ff2+1
  3685  001634  C1AE  F076         	movff	efgtoa@l+2,___fleq@ff2+2
  3686  001638  C1AF  F077         	movff	efgtoa@l+3,___fleq@ff2+3
  3687  00163C  EC6D  F01C         	call	___fleq	;wreg free
  3688  001640  0100               	movlb	0	; () banked
  3689  001642  A0D8               	btfss	status,0,c
  3690  001644  D00B               	goto	l6019
  3691                           
  3692                           ; BSR set to: 0
  3693  001646  0101               	movlb	1	; () banked
  3694  001648  B19E               	btfsc	efgtoa@d& (0+255),0,b
  3695  00164A  D008               	goto	l6019
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3699  00164C  0E00               	movlw	0
  3700  00164E                     L3:
  3701  00164E  6FAC               	movwf	efgtoa@l& (0+255),b
  3702  001650  0E00               	movlw	0
  3703  001652  6FAD               	movwf	(efgtoa@l+1)& (0+255),b
  3704  001654  0E00               	movlw	0
  3705  001656  6FAE               	movwf	(efgtoa@l+2)& (0+255),b
  3706  001658  0E00               	movlw	0
  3707  00165A  6FAF               	movwf	(efgtoa@l+3)& (0+255),b
  3708  00165C                     l6019:
  3709                           
  3710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  3711  00165C  C1B2  F070         	movff	efgtoa@g,___fladd@b
  3712  001660  C1B3  F071         	movff	efgtoa@g+1,___fladd@b+1
  3713  001664  C1B4  F072         	movff	efgtoa@g+2,___fladd@b+2
  3714  001668  C1B5  F073         	movff	efgtoa@g+3,___fladd@b+3
  3715  00166C  C1AC  F074         	movff	efgtoa@l,___fladd@a
  3716  001670  C1AD  F075         	movff	efgtoa@l+1,___fladd@a+1
  3717  001674  C1AE  F076         	movff	efgtoa@l+2,___fladd@a+2
  3718  001678  C1AF  F077         	movff	efgtoa@l+3,___fladd@a+3
  3719  00167C  ECB4  F012         	call	___fladd	;wreg free
  3720  001680  C070  F1A8         	movff	?___fladd,efgtoa@h
  3721  001684  C071  F1A9         	movff	?___fladd+1,efgtoa@h+1
  3722  001688  C072  F1AA         	movff	?___fladd+2,efgtoa@h+2
  3723  00168C  C073  F1AB         	movff	?___fladd+3,efgtoa@h+3
  3724                           
  3725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3726  001690  C186  F1BA         	movff	efgtoa@ou,efgtoa@u
  3727  001694  C187  F1BB         	movff	efgtoa@ou+1,efgtoa@u+1
  3728  001698  C188  F1BC         	movff	efgtoa@ou+2,efgtoa@u+2
  3729  00169C  C189  F1BD         	movff	efgtoa@ou+3,efgtoa@u+3
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3732  0016A0  0E65               	movlw	101
  3733  0016A2  0101               	movlb	1	; () banked
  3734  0016A4  19A4               	xorwf	efgtoa@nmode& (0+255),w,b
  3735  0016A6  B4D8               	btfsc	status,2,c
  3736  0016A8  D005               	goto	l6027
  3737                           
  3738                           ; BSR set to: 1
  3739  0016AA  C1B6  F19C         	movff	efgtoa@e,efgtoa@ne
  3740  0016AE  C1B7  F19D         	movff	efgtoa@e+1,efgtoa@ne+1
  3741  0016B2  D004               	goto	l378
  3742  0016B4                     l6027:
  3743                           
  3744                           ; BSR set to: 1
  3745  0016B4  0E00               	movlw	0
  3746  0016B6  6F9D               	movwf	(efgtoa@ne+1)& (0+255),b
  3747  0016B8  0E00               	movlw	0
  3748  0016BA  6F9C               	movwf	efgtoa@ne& (0+255),b
  3749  0016BC                     l378:
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3753  0016BC  0E00               	movlw	0
  3754  0016BE  6F99               	movwf	(efgtoa@pp+1)& (0+255),b
  3755  0016C0  0E00               	movlw	0
  3756  0016C2  6F98               	movwf	efgtoa@pp& (0+255),b
  3757                           
  3758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3759  0016C4  0E00               	movlw	0
  3760  0016C6  6F97               	movwf	(efgtoa@t+1)& (0+255),b
  3761  0016C8  0E00               	movlw	0
  3762  0016CA  6F96               	movwf	efgtoa@t& (0+255),b
  3763                           
  3764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3765  0016CC  0E00               	movlw	0
  3766  0016CE  6FB1               	movwf	(efgtoa@i+1)& (0+255),b
  3767  0016D0  0E00               	movlw	0
  3768  0016D2  6FB0               	movwf	efgtoa@i& (0+255),b
  3769                           
  3770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3771  0016D4  D0C9               	goto	l6077
  3772  0016D6                     l6029:
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3776  0016D6  C1A8  F07E         	movff	efgtoa@h,___fldiv@b
  3777  0016DA  C1A9  F07F         	movff	efgtoa@h+1,___fldiv@b+1
  3778  0016DE  C1AA  F080         	movff	efgtoa@h+2,___fldiv@b+2
  3779  0016E2  C1AB  F081         	movff	efgtoa@h+3,___fldiv@b+3
  3780  0016E6  C1BA  F082         	movff	efgtoa@u,___fldiv@a
  3781  0016EA  C1BB  F083         	movff	efgtoa@u+1,___fldiv@a+1
  3782  0016EE  C1BC  F084         	movff	efgtoa@u+2,___fldiv@a+2
  3783  0016F2  C1BD  F085         	movff	efgtoa@u+3,___fldiv@a+3
  3784  0016F6  EC3B  F014         	call	___fldiv	;wreg free
  3785  0016FA  C07E  F097         	movff	?___fldiv,floorf@x
  3786  0016FE  C07F  F098         	movff	?___fldiv+1,floorf@x+1
  3787  001702  C080  F099         	movff	?___fldiv+2,floorf@x+2
  3788  001706  C081  F09A         	movff	?___fldiv+3,floorf@x+3
  3789  00170A  ECC4  F016         	call	_floorf	;wreg free
  3790  00170E  C097  F1AC         	movff	?_floorf,efgtoa@l
  3791  001712  C098  F1AD         	movff	?_floorf+1,efgtoa@l+1
  3792  001716  C099  F1AE         	movff	?_floorf+2,efgtoa@l+2
  3793  00171A  C09A  F1AF         	movff	?_floorf+3,efgtoa@l+3
  3794                           
  3795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3796  00171E  C1AC  F070         	movff	efgtoa@l,___fltol@f1
  3797  001722  C1AD  F071         	movff	efgtoa@l+1,___fltol@f1+1
  3798  001726  C1AE  F072         	movff	efgtoa@l+2,___fltol@f1+2
  3799  00172A  C1AF  F073         	movff	efgtoa@l+3,___fltol@f1+3
  3800  00172E  EC1E  F01A         	call	___fltol	;wreg free
  3801  001732  C070  F19E         	movff	?___fltol,efgtoa@d
  3802  001736  C071  F19F         	movff	?___fltol+1,efgtoa@d+1
  3803                           
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3805  00173A  0100               	movlb	0	; () banked
  3806  00173C  B9E3               	btfsc	_flags& (0+255),4,b
  3807  00173E  D00D               	goto	l6041
  3808                           
  3809                           ; BSR set to: 0
  3810  001740  0101               	movlb	1	; () banked
  3811  001742  519E               	movf	efgtoa@d& (0+255),w,b
  3812  001744  119F               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3813  001746  A4D8               	btfss	status,2,c
  3814  001748  D008               	goto	l6041
  3815                           
  3816                           ; BSR set to: 1
  3817  00174A  0E67               	movlw	103
  3818  00174C  19A7               	xorwf	efgtoa@mode& (0+255),w,b
  3819  00174E  B4D8               	btfsc	status,2,c
  3820                           
  3821                           ; BSR set to: 1
  3822  001750  AF9D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3823  001752  D003               	goto	l6041
  3824                           
  3825                           ; BSR set to: 1
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3827  001754  4B96               	infsnz	efgtoa@t& (0+255),f,b
  3828  001756  2B97               	incf	(efgtoa@t+1)& (0+255),f,b
  3829                           
  3830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3831  001758  D03A               	goto	l6069
  3832  00175A                     l6041:
  3833                           
  3834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3835  00175A  0101               	movlb	1	; () banked
  3836  00175C  5198               	movf	efgtoa@pp& (0+255),w,b
  3837  00175E  1199               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3838  001760  B4D8               	btfsc	status,2,c
  3839                           
  3840                           ; BSR set to: 1
  3841  001762  AF9D               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3842  001764  D022               	goto	l6061
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3846  001766  0E16               	movlw	low _dbuf
  3847  001768  25B8               	addwf	efgtoa@n& (0+255),w,b
  3848  00176A  6ED9               	movwf	fsr2l,c
  3849  00176C  0E01               	movlw	high _dbuf
  3850  00176E  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3851  001770  6EDA               	movwf	fsr2h,c
  3852  001772  0E2E               	movlw	46
  3853  001774  6EDF               	movwf	indf2,c
  3854                           
  3855                           ; BSR set to: 1
  3856  001776  4BB8               	infsnz	efgtoa@n& (0+255),f,b
  3857  001778  2BB9               	incf	(efgtoa@n+1)& (0+255),f,b
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3861  00177A  07A5               	decf	efgtoa@w& (0+255),f,b
  3862  00177C  A0D8               	btfss	status,0,c
  3863  00177E  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  3864                           
  3865                           ; BSR set to: 1
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3867  001780  0E00               	movlw	0
  3868  001782  6F99               	movwf	(efgtoa@pp+1)& (0+255),b
  3869  001784  0E01               	movlw	1
  3870  001786  6F98               	movwf	efgtoa@pp& (0+255),b
  3871  001788  D010               	goto	l6061
  3872  00178A                     l6053:
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3876  00178A  0E16               	movlw	low _dbuf
  3877  00178C  25B8               	addwf	efgtoa@n& (0+255),w,b
  3878  00178E  6ED9               	movwf	fsr2l,c
  3879  001790  0E01               	movlw	high _dbuf
  3880  001792  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3881  001794  6EDA               	movwf	fsr2h,c
  3882  001796  0E30               	movlw	48
  3883  001798  6EDF               	movwf	indf2,c
  3884                           
  3885                           ; BSR set to: 1
  3886  00179A  4BB8               	infsnz	efgtoa@n& (0+255),f,b
  3887  00179C  2BB9               	incf	(efgtoa@n+1)& (0+255),f,b
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3891  00179E  07A5               	decf	efgtoa@w& (0+255),f,b
  3892  0017A0  A0D8               	btfss	status,0,c
  3893  0017A2  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  3894                           
  3895                           ; BSR set to: 1
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3897  0017A4  0796               	decf	efgtoa@t& (0+255),f,b
  3898  0017A6  A0D8               	btfss	status,0,c
  3899  0017A8  0797               	decf	(efgtoa@t+1)& (0+255),f,b
  3900  0017AA                     l6061:
  3901                           
  3902                           ; BSR set to: 1
  3903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3904  0017AA  5196               	movf	efgtoa@t& (0+255),w,b
  3905  0017AC  1197               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3906  0017AE  A4D8               	btfss	status,2,c
  3907  0017B0  D7EC               	goto	l6053
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3911  0017B2  0E16               	movlw	low _dbuf
  3912  0017B4  25B8               	addwf	efgtoa@n& (0+255),w,b
  3913  0017B6  6ED9               	movwf	fsr2l,c
  3914  0017B8  0E01               	movlw	high _dbuf
  3915  0017BA  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3916  0017BC  6EDA               	movwf	fsr2h,c
  3917  0017BE  519E               	movf	efgtoa@d& (0+255),w,b
  3918  0017C0  0F30               	addlw	48
  3919  0017C2  6EDF               	movwf	indf2,c
  3920                           
  3921                           ; BSR set to: 1
  3922  0017C4  4BB8               	infsnz	efgtoa@n& (0+255),f,b
  3923  0017C6  2BB9               	incf	(efgtoa@n+1)& (0+255),f,b
  3924                           
  3925                           ; BSR set to: 1
  3926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3927  0017C8  07A5               	decf	efgtoa@w& (0+255),f,b
  3928  0017CA  A0D8               	btfss	status,0,c
  3929  0017CC  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  3930  0017CE                     l6069:
  3931                           
  3932                           ; BSR set to: 1
  3933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3934  0017CE  C1A8  F097         	movff	efgtoa@h,___flsub@b
  3935  0017D2  C1A9  F098         	movff	efgtoa@h+1,___flsub@b+1
  3936  0017D6  C1AA  F099         	movff	efgtoa@h+2,___flsub@b+2
  3937  0017DA  C1AB  F09A         	movff	efgtoa@h+3,___flsub@b+3
  3938  0017DE  C1BA  F082         	movff	efgtoa@u,___flmul@a
  3939  0017E2  C1BB  F083         	movff	efgtoa@u+1,___flmul@a+1
  3940  0017E6  C1BC  F084         	movff	efgtoa@u+2,___flmul@a+2
  3941  0017EA  C1BD  F085         	movff	efgtoa@u+3,___flmul@a+3
  3942  0017EE  C1AC  F07E         	movff	efgtoa@l,___flmul@b
  3943  0017F2  C1AD  F07F         	movff	efgtoa@l+1,___flmul@b+1
  3944  0017F6  C1AE  F080         	movff	efgtoa@l+2,___flmul@b+2
  3945  0017FA  C1AF  F081         	movff	efgtoa@l+3,___flmul@b+3
  3946  0017FE  EC0A  F011         	call	___flmul	;wreg free
  3947  001802  C07E  F09B         	movff	?___flmul,___flsub@a
  3948  001806  C07F  F09C         	movff	?___flmul+1,___flsub@a+1
  3949  00180A  C080  F09D         	movff	?___flmul+2,___flsub@a+2
  3950  00180E  C081  F09E         	movff	?___flmul+3,___flsub@a+3
  3951  001812  EC05  F01F         	call	___flsub	;wreg free
  3952  001816  C097  F1A8         	movff	?___flsub,efgtoa@h
  3953  00181A  C098  F1A9         	movff	?___flsub+1,efgtoa@h+1
  3954  00181E  C099  F1AA         	movff	?___flsub+2,efgtoa@h+2
  3955  001822  C09A  F1AB         	movff	?___flsub+3,efgtoa@h+3
  3956                           
  3957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3958  001826  C1BA  F07E         	movff	efgtoa@u,___fldiv@b
  3959  00182A  C1BB  F07F         	movff	efgtoa@u+1,___fldiv@b+1
  3960  00182E  C1BC  F080         	movff	efgtoa@u+2,___fldiv@b+2
  3961  001832  C1BD  F081         	movff	efgtoa@u+3,___fldiv@b+3
  3962  001836  0E00               	movlw	0
  3963  001838  0100               	movlb	0	; () banked
  3964  00183A  6F82               	movwf	___fldiv@a& (0+255),b
  3965  00183C  0E00               	movlw	0
  3966  00183E  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  3967  001840  0E20               	movlw	32
  3968  001842  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  3969  001844  0E41               	movlw	65
  3970  001846  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  3971  001848  EC3B  F014         	call	___fldiv	;wreg free
  3972  00184C  C07E  F1BA         	movff	?___fldiv,efgtoa@u
  3973  001850  C07F  F1BB         	movff	?___fldiv+1,efgtoa@u+1
  3974  001854  C080  F1BC         	movff	?___fldiv+2,efgtoa@u+2
  3975  001858  C081  F1BD         	movff	?___fldiv+3,efgtoa@u+3
  3976                           
  3977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3978  00185C  0101               	movlb	1	; () banked
  3979  00185E  079C               	decf	efgtoa@ne& (0+255),f,b
  3980  001860  A0D8               	btfss	status,0,c
  3981  001862  079D               	decf	(efgtoa@ne+1)& (0+255),f,b
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3985  001864  4BB0               	infsnz	efgtoa@i& (0+255),f,b
  3986  001866  2BB1               	incf	(efgtoa@i+1)& (0+255),f,b
  3987  001868                     l6077:
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3991  001868  519A               	movf	efgtoa@m& (0+255),w,b
  3992  00186A  5DB0               	subwf	efgtoa@i& (0+255),w,b
  3993  00186C  51B1               	movf	(efgtoa@i+1)& (0+255),w,b
  3994  00186E  0A80               	xorlw	128
  3995  001870  0100               	movlb	0	; () banked
  3996  001872  6FB2               	movwf	??_efgtoa& (0+255),b
  3997  001874  0101               	movlb	1	; () banked
  3998  001876  519B               	movf	(efgtoa@m+1)& (0+255),w,b
  3999  001878  0A80               	xorlw	128
  4000  00187A  0100               	movlb	0	; () banked
  4001  00187C  59B2               	subwfb	??_efgtoa& (0+255),w,b
  4002  00187E  B0D8               	btfsc	status,0,c
  4003  001880  D009               	goto	u7920
  4004                           
  4005                           ; BSR set to: 0
  4006  001882  0101               	movlb	1	; () banked
  4007  001884  BFB9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4008  001886  D727               	goto	l6029
  4009  001888  51B9               	movf	(efgtoa@n+1)& (0+255),w,b
  4010  00188A  E104               	bnz	u7920
  4011  00188C  0E4B               	movlw	75
  4012  00188E  5DB8               	subwf	efgtoa@n& (0+255),w,b
  4013  001890  A0D8               	btfss	status,0,c
  4014  001892  D721               	goto	l6029
  4015  001894                     u7920:
  4016                           
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4018  001894  0101               	movlb	1	; () banked
  4019  001896  5198               	movf	efgtoa@pp& (0+255),w,b
  4020  001898  1199               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4021  00189A  A4D8               	btfss	status,2,c
  4022  00189C  D00E               	goto	l6089
  4023                           
  4024                           ; BSR set to: 1
  4025  00189E  0100               	movlb	0	; () banked
  4026  0018A0  A9E3               	btfss	_flags& (0+255),4,b
  4027  0018A2  D00B               	goto	l6089
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4031  0018A4  0E16               	movlw	low _dbuf
  4032  0018A6  0101               	movlb	1	; () banked
  4033  0018A8  25B8               	addwf	efgtoa@n& (0+255),w,b
  4034  0018AA  6ED9               	movwf	fsr2l,c
  4035  0018AC  0E01               	movlw	high _dbuf
  4036  0018AE  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4037  0018B0  6EDA               	movwf	fsr2h,c
  4038  0018B2  0E2E               	movlw	46
  4039  0018B4  6EDF               	movwf	indf2,c
  4040                           
  4041                           ; BSR set to: 1
  4042  0018B6  4BB8               	infsnz	efgtoa@n& (0+255),f,b
  4043  0018B8  2BB9               	incf	(efgtoa@n+1)& (0+255),f,b
  4044  0018BA                     l6089:
  4045                           
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4047  0018BA  0E16               	movlw	low _dbuf
  4048  0018BC  0101               	movlb	1	; () banked
  4049  0018BE  25B8               	addwf	efgtoa@n& (0+255),w,b
  4050  0018C0  6ED9               	movwf	fsr2l,c
  4051  0018C2  0E01               	movlw	high _dbuf
  4052  0018C4  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4053  0018C6  6EDA               	movwf	fsr2h,c
  4054  0018C8  0E00               	movlw	0
  4055  0018CA  6EDF               	movwf	indf2,c
  4056                           
  4057                           ; BSR set to: 1
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4059  0018CC  0E65               	movlw	101
  4060  0018CE  19A4               	xorwf	efgtoa@nmode& (0+255),w,b
  4061  0018D0  A4D8               	btfss	status,2,c
  4062  0018D2  D459               	goto	l5901
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4066  0018D4  0E00               	movlw	0
  4067  0018D6  6FB1               	movwf	(efgtoa@i+1)& (0+255),b
  4068  0018D8  0E4F               	movlw	79
  4069  0018DA  6FB0               	movwf	efgtoa@i& (0+255),b
  4070                           
  4071                           ; BSR set to: 1
  4072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4073  0018DC  0E16               	movlw	low _dbuf
  4074  0018DE  25B0               	addwf	efgtoa@i& (0+255),w,b
  4075  0018E0  6ED9               	movwf	fsr2l,c
  4076  0018E2  0E01               	movlw	high _dbuf
  4077  0018E4  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4078  0018E6  6EDA               	movwf	fsr2h,c
  4079  0018E8  0E00               	movlw	0
  4080  0018EA  6EDF               	movwf	indf2,c
  4081                           
  4082                           ; BSR set to: 1
  4083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4084  0018EC  0E00               	movlw	0
  4085  0018EE  6FA1               	movwf	(efgtoa@sign+1)& (0+255),b
  4086  0018F0  0E00               	movlw	0
  4087  0018F2  6FA0               	movwf	efgtoa@sign& (0+255),b
  4088                           
  4089                           ; BSR set to: 1
  4090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4091  0018F4  AFB7               	btfss	(efgtoa@e+1)& (0+255),7,b
  4092  0018F6  D008               	goto	l6105
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4096  0018F8  0E00               	movlw	0
  4097  0018FA  6FA1               	movwf	(efgtoa@sign+1)& (0+255),b
  4098  0018FC  0E01               	movlw	1
  4099  0018FE  6FA0               	movwf	efgtoa@sign& (0+255),b
  4100                           
  4101                           ; BSR set to: 1
  4102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4103  001900  6DB6               	negf	efgtoa@e& (0+255),b
  4104  001902  1FB7               	comf	(efgtoa@e+1)& (0+255),f,b
  4105  001904  B0D8               	btfsc	status,0,c
  4106  001906  2BB7               	incf	(efgtoa@e+1)& (0+255),f,b
  4107  001908                     l6105:
  4108                           
  4109                           ; BSR set to: 1
  4110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4111  001908  0E00               	movlw	0
  4112  00190A  6FA3               	movwf	(efgtoa@p+1)& (0+255),b
  4113  00190C  0E02               	movlw	2
  4114  00190E  6FA2               	movwf	efgtoa@p& (0+255),b
  4115                           
  4116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4117  001910  D02D               	goto	l6117
  4118  001912                     l6107:
  4119                           
  4120                           ; BSR set to: 1
  4121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4122  001912  07B0               	decf	efgtoa@i& (0+255),f,b
  4123  001914  A0D8               	btfss	status,0,c
  4124  001916  07B1               	decf	(efgtoa@i+1)& (0+255),f,b
  4125                           
  4126                           ; BSR set to: 1
  4127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4128  001918  0E16               	movlw	low _dbuf
  4129  00191A  25B0               	addwf	efgtoa@i& (0+255),w,b
  4130  00191C  6ED9               	movwf	fsr2l,c
  4131  00191E  0E01               	movlw	high _dbuf
  4132  001920  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4133  001922  6EDA               	movwf	fsr2h,c
  4134  001924  C1B6  F070         	movff	efgtoa@e,___awmod@dividend
  4135  001928  C1B7  F071         	movff	efgtoa@e+1,___awmod@dividend+1
  4136  00192C  0E00               	movlw	0
  4137  00192E  0100               	movlb	0	; () banked
  4138  001930  6F73               	movwf	(___awmod@divisor+1)& (0+255),b
  4139  001932  0E0A               	movlw	10
  4140  001934  6F72               	movwf	___awmod@divisor& (0+255),b
  4141  001936  EC38  F01D         	call	___awmod	;wreg free
  4142  00193A  0100               	movlb	0	; () banked
  4143  00193C  5170               	movf	?___awmod& (0+255),w,b
  4144  00193E  0F30               	addlw	48
  4145  001940  6EDF               	movwf	indf2,c
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4149  001942  C1B6  F070         	movff	efgtoa@e,___awdiv@dividend
  4150  001946  C1B7  F071         	movff	efgtoa@e+1,___awdiv@dividend+1
  4151  00194A  0E00               	movlw	0
  4152  00194C  6F73               	movwf	(___awdiv@divisor+1)& (0+255),b
  4153  00194E  0E0A               	movlw	10
  4154  001950  6F72               	movwf	___awdiv@divisor& (0+255),b
  4155  001952  ECB3  F01C         	call	___awdiv	;wreg free
  4156  001956  C070  F1B6         	movff	?___awdiv,efgtoa@e
  4157  00195A  C071  F1B7         	movff	?___awdiv+1,efgtoa@e+1
  4158                           
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4160  00195E  0101               	movlb	1	; () banked
  4161  001960  07A2               	decf	efgtoa@p& (0+255),f,b
  4162  001962  A0D8               	btfss	status,0,c
  4163  001964  07A3               	decf	(efgtoa@p+1)& (0+255),f,b
  4164                           
  4165                           ; BSR set to: 1
  4166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4167  001966  07A5               	decf	efgtoa@w& (0+255),f,b
  4168  001968  A0D8               	btfss	status,0,c
  4169  00196A  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  4170  00196C                     l6117:
  4171                           
  4172                           ; BSR set to: 1
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4174  00196C  51B6               	movf	efgtoa@e& (0+255),w,b
  4175  00196E  11B7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4176  001970  A4D8               	btfss	status,2,c
  4177  001972  D7CF               	goto	l6107
  4178                           
  4179                           ; BSR set to: 1
  4180  001974  BFA3               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4181  001976  D005               	goto	u7980
  4182  001978  51A3               	movf	(efgtoa@p+1)& (0+255),w,b
  4183  00197A  E1CB               	bnz	l6107
  4184  00197C  05A2               	decf	efgtoa@p& (0+255),w,b
  4185  00197E  B0D8               	btfsc	status,0,c
  4186  001980  D7C8               	goto	l6107
  4187  001982                     u7980:
  4188                           
  4189                           ; BSR set to: 1
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4191  001982  07B0               	decf	efgtoa@i& (0+255),f,b
  4192  001984  A0D8               	btfss	status,0,c
  4193  001986  07B1               	decf	(efgtoa@i+1)& (0+255),f,b
  4194                           
  4195                           ; BSR set to: 1
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4197  001988  51A0               	movf	efgtoa@sign& (0+255),w,b
  4198  00198A  11A1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4199  00198C  A4D8               	btfss	status,2,c
  4200  00198E  D004               	goto	l6127
  4201                           
  4202                           ; BSR set to: 1
  4203  001990  0E00               	movlw	0
  4204  001992  6F91               	movwf	(_efgtoa$1382+1)& (0+255),b
  4205  001994  0E2B               	movlw	43
  4206  001996  D003               	goto	L4
  4207  001998                     l6127:
  4208                           
  4209                           ; BSR set to: 1
  4210  001998  0E00               	movlw	0
  4211  00199A  6F91               	movwf	(_efgtoa$1382+1)& (0+255),b
  4212  00199C  0E2D               	movlw	45
  4213  00199E                     L4:
  4214  00199E  6F90               	movwf	_efgtoa$1382& (0+255),b
  4215                           
  4216                           ; BSR set to: 1
  4217  0019A0  0E16               	movlw	low _dbuf
  4218  0019A2  25B0               	addwf	efgtoa@i& (0+255),w,b
  4219  0019A4  6ED9               	movwf	fsr2l,c
  4220  0019A6  0E01               	movlw	high _dbuf
  4221  0019A8  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4222  0019AA  6EDA               	movwf	fsr2h,c
  4223  0019AC  C190  FFDF         	movff	_efgtoa$1382,indf2
  4224                           
  4225                           ; BSR set to: 1
  4226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4227  0019B0  07A5               	decf	efgtoa@w& (0+255),f,b
  4228  0019B2  A0D8               	btfss	status,0,c
  4229  0019B4  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  4230                           
  4231                           ; BSR set to: 1
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4233  0019B6  07B0               	decf	efgtoa@i& (0+255),f,b
  4234  0019B8  A0D8               	btfss	status,0,c
  4235  0019BA  07B1               	decf	(efgtoa@i+1)& (0+255),f,b
  4236                           
  4237                           ; BSR set to: 1
  4238  0019BC  0EBF               	movlw	191
  4239  0019BE  0100               	movlb	0	; () banked
  4240  0019C0  6FB2               	movwf	??_efgtoa& (0+255),b
  4241  0019C2  0EFF               	movlw	255
  4242  0019C4  6FB3               	movwf	(??_efgtoa+1)& (0+255),b
  4243  0019C6  51B1               	movf	efgtoa@c& (0+255),w,b
  4244  0019C8  6FB4               	movwf	(??_efgtoa+2)& (0+255),b
  4245  0019CA  6BB5               	clrf	(??_efgtoa+3)& (0+255),b
  4246  0019CC  51B2               	movf	??_efgtoa& (0+255),w,b
  4247  0019CE  27B4               	addwf	(??_efgtoa+2)& (0+255),f,b
  4248  0019D0  51B3               	movf	(??_efgtoa+1)& (0+255),w,b
  4249  0019D2  23B5               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4250  0019D4  51B5               	movf	(??_efgtoa+3)& (0+255),w,b
  4251  0019D6  E106               	bnz	u8000
  4252  0019D8  0E1A               	movlw	26
  4253  0019DA  5DB4               	subwf	(??_efgtoa+2)& (0+255),w,b
  4254  0019DC  B0D8               	btfsc	status,0,c
  4255  0019DE  D002               	goto	u8000
  4256  0019E0  0E01               	movlw	1
  4257  0019E2  D001               	goto	u8010
  4258  0019E4                     u8000:
  4259  0019E4  0E00               	movlw	0
  4260  0019E6                     u8010:
  4261  0019E6  0101               	movlb	1	; () banked
  4262  0019E8  6F94               	movwf	_efgtoa$1384& (0+255),b
  4263  0019EA  6B95               	clrf	(_efgtoa$1384+1)& (0+255),b
  4264                           
  4265                           ; BSR set to: 1
  4266  0019EC  5194               	movf	_efgtoa$1384& (0+255),w,b
  4267  0019EE  1195               	iorwf	(_efgtoa$1384+1)& (0+255),w,b
  4268  0019F0  A4D8               	btfss	status,2,c
  4269  0019F2  D004               	goto	l6143
  4270                           
  4271                           ; BSR set to: 1
  4272  0019F4  0E00               	movlw	0
  4273  0019F6  6F93               	movwf	(_efgtoa$1383+1)& (0+255),b
  4274  0019F8  0E65               	movlw	101
  4275  0019FA  D003               	goto	L5
  4276  0019FC                     l6143:
  4277                           
  4278                           ; BSR set to: 1
  4279  0019FC  0E00               	movlw	0
  4280  0019FE  6F93               	movwf	(_efgtoa$1383+1)& (0+255),b
  4281  001A00  0E45               	movlw	69
  4282  001A02                     L5:
  4283  001A02  6F92               	movwf	_efgtoa$1383& (0+255),b
  4284                           
  4285                           ; BSR set to: 1
  4286  001A04  0E16               	movlw	low _dbuf
  4287  001A06  25B0               	addwf	efgtoa@i& (0+255),w,b
  4288  001A08  6ED9               	movwf	fsr2l,c
  4289  001A0A  0E01               	movlw	high _dbuf
  4290  001A0C  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4291  001A0E  6EDA               	movwf	fsr2h,c
  4292  001A10  C192  FFDF         	movff	_efgtoa$1383,indf2
  4293                           
  4294                           ; BSR set to: 1
  4295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4296  001A14  07A5               	decf	efgtoa@w& (0+255),f,b
  4297  001A16  A0D8               	btfss	status,0,c
  4298  001A18  07A6               	decf	(efgtoa@w+1)& (0+255),f,b
  4299                           
  4300                           ; BSR set to: 1
  4301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4302  001A1A  0E16               	movlw	low _dbuf
  4303  001A1C  25B8               	addwf	efgtoa@n& (0+255),w,b
  4304  001A1E  0100               	movlb	0	; () banked
  4305  001A20  6F70               	movwf	strcpy@dest& (0+255),b
  4306  001A22  0E01               	movlw	high _dbuf
  4307  001A24  0101               	movlb	1	; () banked
  4308  001A26  21B9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4309  001A28  0100               	movlb	0	; () banked
  4310  001A2A  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  4311  001A2C  0E16               	movlw	low _dbuf
  4312  001A2E  0101               	movlb	1	; () banked
  4313  001A30  25B0               	addwf	efgtoa@i& (0+255),w,b
  4314  001A32  0100               	movlb	0	; () banked
  4315  001A34  6F72               	movwf	strcpy@src& (0+255),b
  4316  001A36  0E01               	movlw	high _dbuf
  4317  001A38  0101               	movlb	1	; () banked
  4318  001A3A  21B1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4319  001A3C  0100               	movlb	0	; () banked
  4320  001A3E  6F73               	movwf	(strcpy@src+1)& (0+255),b
  4321  001A40  EC8F  F01E         	call	_strcpy	;wreg free
  4322  001A44  EFC3  F008         	goto	l5901
  4323  001A48                     __end_of_efgtoa:
  4324                           	opt callstack 0
  4325                           
  4326 ;; *************** function _tolower *****************
  4327 ;; Defined at:
  4328 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  c               2   22[BANK0 ] int 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  2   22[BANK0 ] int 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;Total ram usage:        8 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    5
  4349 ;; This function calls:
  4350 ;;		_isupper
  4351 ;; This function is called by:
  4352 ;;		_efgtoa
  4353 ;;		_vfpfcnvrt
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text6
  4358  003D74                     __ptext6:
  4359                           	opt callstack 0
  4360  003D74                     _tolower:
  4361                           	opt callstack 22
  4362                           
  4363                           ;incstack = 0
  4364  003D74  0EBF               	movlw	191
  4365  003D76  0100               	movlb	0	; () banked
  4366  003D78  6F78               	movwf	??_tolower& (0+255),b
  4367  003D7A  0EFF               	movlw	255
  4368  003D7C  6F79               	movwf	(??_tolower+1)& (0+255),b
  4369  003D7E  C076  F07A         	movff	tolower@c,??_tolower+2
  4370  003D82  C077  F07B         	movff	tolower@c+1,??_tolower+3
  4371  003D86  5178               	movf	??_tolower& (0+255),w,b
  4372  003D88  277A               	addwf	(??_tolower+2)& (0+255),f,b
  4373  003D8A  5179               	movf	(??_tolower+1)& (0+255),w,b
  4374  003D8C  237B               	addwfc	(??_tolower+3)& (0+255),f,b
  4375  003D8E  517B               	movf	(??_tolower+3)& (0+255),w,b
  4376  003D90  E106               	bnz	u6640
  4377  003D92  0E1A               	movlw	26
  4378  003D94  5D7A               	subwf	(??_tolower+2)& (0+255),w,b
  4379  003D96  B0D8               	btfsc	status,0,c
  4380  003D98  D002               	goto	u6640
  4381  003D9A  0E01               	movlw	1
  4382  003D9C  D001               	goto	u6650
  4383  003D9E                     u6640:
  4384  003D9E  0E00               	movlw	0
  4385  003DA0                     u6650:
  4386  003DA0  6F7C               	movwf	_tolower$1992& (0+255),b
  4387  003DA2  6B7D               	clrf	(_tolower$1992+1)& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390  003DA4  517C               	movf	_tolower$1992& (0+255),w,b
  4391  003DA6  117D               	iorwf	(_tolower$1992+1)& (0+255),w,b
  4392  003DA8  B4D8               	btfsc	status,2,c
  4393  003DAA  D006               	goto	l1251
  4394                           
  4395                           ; BSR set to: 0
  4396  003DAC  0E20               	movlw	32
  4397  003DAE  1176               	iorwf	tolower@c& (0+255),w,b
  4398  003DB0  6F76               	movwf	?_tolower& (0+255),b
  4399  003DB2  5177               	movf	(tolower@c+1)& (0+255),w,b
  4400  003DB4  6F77               	movwf	(?_tolower+1)& (0+255),b
  4401  003DB6  0012               	return	
  4402  003DB8                     l1251:
  4403                           
  4404                           ; BSR set to: 0
  4405  003DB8  C076  F076         	movff	tolower@c,?_tolower
  4406  003DBC  C077  F077         	movff	tolower@c+1,?_tolower+1
  4407                           
  4408                           ; BSR set to: 0
  4409  003DC0  0012               	return		;funcret
  4410  003DC2                     __end_of_tolower:
  4411                           	opt callstack 0
  4412                           
  4413 ;; *************** function _isupper *****************
  4414 ;; Defined at:
  4415 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  c               2   16[BANK0 ] int 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;		None
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2   16[BANK0 ] int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;Total ram usage:        6 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    4
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_efgtoa
  4440 ;;		_vfpfcnvrt
  4441 ;;		_tolower
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text7
  4446  003FD6                     __ptext7:
  4447                           	opt callstack 0
  4448  003FD6                     _isupper:
  4449                           	opt callstack 22
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;incstack = 0
  4453  003FD6  0EBF               	movlw	191
  4454  003FD8  0100               	movlb	0	; () banked
  4455  003FDA  6F72               	movwf	??_isupper& (0+255),b
  4456  003FDC  0EFF               	movlw	255
  4457  003FDE  6F73               	movwf	(??_isupper+1)& (0+255),b
  4458  003FE0  C070  F074         	movff	isupper@c,??_isupper+2
  4459  003FE4  C071  F075         	movff	isupper@c+1,??_isupper+3
  4460  003FE8  5172               	movf	??_isupper& (0+255),w,b
  4461  003FEA  2774               	addwf	(??_isupper+2)& (0+255),f,b
  4462  003FEC  5173               	movf	(??_isupper+1)& (0+255),w,b
  4463  003FEE  2375               	addwfc	(??_isupper+3)& (0+255),f,b
  4464  003FF0  5175               	movf	(??_isupper+3)& (0+255),w,b
  4465  003FF2  E106               	bnz	u6100
  4466  003FF4  0E1A               	movlw	26
  4467  003FF6  5D74               	subwf	(??_isupper+2)& (0+255),w,b
  4468  003FF8  B0D8               	btfsc	status,0,c
  4469  003FFA  D002               	goto	u6100
  4470  003FFC  0E01               	movlw	1
  4471  003FFE  D001               	goto	u6110
  4472  004000                     u6100:
  4473  004000  0E00               	movlw	0
  4474  004002                     u6110:
  4475  004002  6F70               	movwf	?_isupper& (0+255),b
  4476  004004  6B71               	clrf	(?_isupper+1)& (0+255),b
  4477                           
  4478                           ; BSR set to: 0
  4479  004006  0012               	return		;funcret
  4480  004008                     __end_of_isupper:
  4481                           	opt callstack 0
  4482                           
  4483 ;; *************** function _pad *****************
  4484 ;; Defined at:
  4485 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  fp              2   32[BANK0 ] PTR struct _IO_FILE
  4488 ;;		 -> sprintf@f(6), 
  4489 ;;  buf             2   34[BANK0 ] PTR unsigned char 
  4490 ;;		 -> dbuf(80), 
  4491 ;;  p               2   36[BANK0 ] int 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  w               2   41[BANK0 ] int 
  4494 ;;  i               2   39[BANK0 ] int 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  2   32[BANK0 ] int 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:       11 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    7
  4511 ;; This function calls:
  4512 ;;		_fputc
  4513 ;;		_fputs
  4514 ;;		_strlen
  4515 ;; This function is called by:
  4516 ;;		_efgtoa
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text8
  4521  0037A6                     __ptext8:
  4522                           	opt callstack 0
  4523  0037A6                     _pad:
  4524                           	opt callstack 19
  4525                           
  4526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;incstack = 0
  4530  0037A6  0100               	movlb	0	; () banked
  4531  0037A8  A1E3               	btfss	_flags& (0+255),0,b
  4532  0037AA  D00A               	goto	l5313
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4536  0037AC  C082  F079         	movff	pad@buf,fputs@s
  4537  0037B0  C083  F07A         	movff	pad@buf+1,fputs@s+1
  4538  0037B4  C080  F07B         	movff	pad@fp,fputs@fp
  4539  0037B8  C081  F07C         	movff	pad@fp+1,fputs@fp+1
  4540  0037BC  ECB1  F01F         	call	_fputs	;wreg free
  4541  0037C0                     l5313:
  4542                           
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4544  0037C0  0100               	movlb	0	; () banked
  4545  0037C2  BF85               	btfsc	(pad@p+1)& (0+255),7,b
  4546  0037C4  D005               	goto	l5317
  4547                           
  4548                           ; BSR set to: 0
  4549  0037C6  C084  F089         	movff	pad@p,pad@w
  4550  0037CA  C085  F08A         	movff	pad@p+1,pad@w+1
  4551  0037CE  D004               	goto	l311
  4552  0037D0                     l5317:
  4553                           
  4554                           ; BSR set to: 0
  4555  0037D0  0E00               	movlw	0
  4556  0037D2  6F8A               	movwf	(pad@w+1)& (0+255),b
  4557  0037D4  0E00               	movlw	0
  4558  0037D6  6F89               	movwf	pad@w& (0+255),b
  4559  0037D8                     l311:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  4563  0037D8  0E00               	movlw	0
  4564  0037DA  6F88               	movwf	(pad@i+1)& (0+255),b
  4565  0037DC  0E00               	movlw	0
  4566  0037DE  6F87               	movwf	pad@i& (0+255),b
  4567                           
  4568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4569  0037E0  D00D               	goto	l5323
  4570  0037E2                     l5319:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  4574  0037E2  0E00               	movlw	0
  4575  0037E4  6F71               	movwf	(fputc@c+1)& (0+255),b
  4576  0037E6  0E20               	movlw	32
  4577  0037E8  6F70               	movwf	fputc@c& (0+255),b
  4578  0037EA  C080  F072         	movff	pad@fp,fputc@fp
  4579  0037EE  C081  F073         	movff	pad@fp+1,fputc@fp+1
  4580  0037F2  EC32  F01B         	call	_fputc	;wreg free
  4581                           
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  4583  0037F6  0100               	movlb	0	; () banked
  4584  0037F8  4B87               	infsnz	pad@i& (0+255),f,b
  4585  0037FA  2B88               	incf	(pad@i+1)& (0+255),f,b
  4586  0037FC                     l5323:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  4590  0037FC  5189               	movf	pad@w& (0+255),w,b
  4591  0037FE  5D87               	subwf	pad@i& (0+255),w,b
  4592  003800  5188               	movf	(pad@i+1)& (0+255),w,b
  4593  003802  0A80               	xorlw	128
  4594  003804  6F86               	movwf	??_pad& (0+255),b
  4595  003806  518A               	movf	(pad@w+1)& (0+255),w,b
  4596  003808  0A80               	xorlw	128
  4597  00380A  5986               	subwfb	??_pad& (0+255),w,b
  4598  00380C  A0D8               	btfss	status,0,c
  4599  00380E  D7E9               	goto	l5319
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4603  003810  B1E3               	btfsc	_flags& (0+255),0,b
  4604  003812  D00A               	goto	l5327
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4608  003814  C082  F079         	movff	pad@buf,fputs@s
  4609  003818  C083  F07A         	movff	pad@buf+1,fputs@s+1
  4610  00381C  C080  F07B         	movff	pad@fp,fputs@fp
  4611  003820  C081  F07C         	movff	pad@fp+1,fputs@fp+1
  4612  003824  ECB1  F01F         	call	_fputs	;wreg free
  4613  003828                     l5327:
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4616  003828  C082  F070         	movff	pad@buf,strlen@s
  4617  00382C  C083  F071         	movff	pad@buf+1,strlen@s+1
  4618  003830  EC29  F01F         	call	_strlen	;wreg free
  4619  003834  0100               	movlb	0	; () banked
  4620  003836  5189               	movf	pad@w& (0+255),w,b
  4621  003838  2570               	addwf	?_strlen& (0+255),w,b
  4622  00383A  6F80               	movwf	?_pad& (0+255),b
  4623  00383C  518A               	movf	(pad@w+1)& (0+255),w,b
  4624  00383E  2171               	addwfc	(?_strlen+1)& (0+255),w,b
  4625  003840  6F81               	movwf	(?_pad+1)& (0+255),b
  4626                           
  4627                           ; BSR set to: 0
  4628  003842  0012               	return		;funcret
  4629  003844                     __end_of_pad:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function _fputs *****************
  4633 ;; Defined at:
  4634 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  s               2   25[BANK0 ] PTR const unsigned char 
  4637 ;;		 -> dbuf(80), 
  4638 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  4639 ;;		 -> sprintf@f(6), 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  i               2   30[BANK0 ] int 
  4642 ;;  c               1   29[BANK0 ] unsigned char 
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  2   25[BANK0 ] int 
  4645 ;; Registers used:
  4646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4653 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;Total ram usage:        7 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    6
  4659 ;; This function calls:
  4660 ;;		_fputc
  4661 ;; This function is called by:
  4662 ;;		_pad
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text9
  4667  003F62                     __ptext9:
  4668                           	opt callstack 0
  4669  003F62                     _fputs:
  4670                           	opt callstack 19
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;incstack = 0
  4674  003F62  0E00               	movlw	0
  4675  003F64  0100               	movlb	0	; () banked
  4676  003F66  6F7F               	movwf	(fputs@i+1)& (0+255),b
  4677  003F68  0E00               	movlw	0
  4678  003F6A  6F7E               	movwf	fputs@i& (0+255),b
  4679  003F6C  D00C               	goto	l5097
  4680  003F6E                     l5093:
  4681                           
  4682                           ; BSR set to: 0
  4683  003F6E  C07D  F070         	movff	fputs@c,fputc@c
  4684  003F72  6B71               	clrf	(fputc@c+1)& (0+255),b
  4685  003F74  C07B  F072         	movff	fputs@fp,fputc@fp
  4686  003F78  C07C  F073         	movff	fputs@fp+1,fputc@fp+1
  4687  003F7C  EC32  F01B         	call	_fputc	;wreg free
  4688  003F80  0100               	movlb	0	; () banked
  4689  003F82  4B7E               	infsnz	fputs@i& (0+255),f,b
  4690  003F84  2B7F               	incf	(fputs@i+1)& (0+255),f,b
  4691  003F86                     l5097:
  4692                           
  4693                           ; BSR set to: 0
  4694  003F86  517E               	movf	fputs@i& (0+255),w,b
  4695  003F88  2579               	addwf	fputs@s& (0+255),w,b
  4696  003F8A  6ED9               	movwf	fsr2l,c
  4697  003F8C  517F               	movf	(fputs@i+1)& (0+255),w,b
  4698  003F8E  217A               	addwfc	(fputs@s+1)& (0+255),w,b
  4699  003F90  6EDA               	movwf	fsr2h,c
  4700  003F92  50DF               	movf	indf2,w,c
  4701  003F94  6F7D               	movwf	fputs@c& (0+255),b
  4702  003F96  517D               	movf	fputs@c& (0+255),w,b
  4703  003F98  B4D8               	btfsc	status,2,c
  4704  003F9A  0012               	return	
  4705  003F9C  D7E8               	goto	l5093
  4706  003F9E                     __end_of_fputs:
  4707                           	opt callstack 0
  4708                           
  4709 ;; *************** function _fputc *****************
  4710 ;; Defined at:
  4711 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  c               2   16[BANK0 ] int 
  4714 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  4715 ;;		 -> sprintf@f(6), 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  2   16[BANK0 ] int 
  4720 ;; Registers used:
  4721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:        9 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    5
  4734 ;; This function calls:
  4735 ;;		_putch
  4736 ;; This function is called by:
  4737 ;;		_pad
  4738 ;;		_vfpfcnvrt
  4739 ;;		_fputs
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text10
  4744  003664                     __ptext10:
  4745                           	opt callstack 0
  4746  003664                     _fputc:
  4747                           	opt callstack 22
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;incstack = 0
  4751  003664  0100               	movlb	0	; () banked
  4752  003666  5172               	movf	fputc@fp& (0+255),w,b
  4753  003668  1173               	iorwf	(fputc@fp+1)& (0+255),w,b
  4754  00366A  B4D8               	btfsc	status,2,c
  4755  00366C  D004               	goto	u6040
  4756                           
  4757                           ; BSR set to: 0
  4758  00366E  5172               	movf	fputc@fp& (0+255),w,b
  4759  003670  1173               	iorwf	(fputc@fp+1)& (0+255),w,b
  4760  003672  A4D8               	btfss	status,2,c
  4761  003674  D004               	goto	l5073
  4762  003676                     u6040:
  4763                           
  4764                           ; BSR set to: 0
  4765  003676  5170               	movf	fputc@c& (0+255),w,b
  4766  003678  EC6D  F020         	call	_putch
  4767  00367C  0012               	return	
  4768  00367E                     l5073:
  4769                           
  4770                           ; BSR set to: 0
  4771  00367E  EE20 F004          	lfsr	2,4
  4772  003682  5172               	movf	fputc@fp& (0+255),w,b
  4773  003684  26D9               	addwf	fsr2l,f,c
  4774  003686  5173               	movf	(fputc@fp+1)& (0+255),w,b
  4775  003688  22DA               	addwfc	fsr2h,f,c
  4776  00368A  50DE               	movf	postinc2,w,c
  4777  00368C  10DE               	iorwf	postinc2,w,c
  4778  00368E  B4D8               	btfsc	status,2,c
  4779  003690  D016               	goto	u6060
  4780                           
  4781                           ; BSR set to: 0
  4782  003692  EE20 F004          	lfsr	2,4
  4783  003696  5172               	movf	fputc@fp& (0+255),w,b
  4784  003698  26D9               	addwf	fsr2l,f,c
  4785  00369A  5173               	movf	(fputc@fp+1)& (0+255),w,b
  4786  00369C  22DA               	addwfc	fsr2h,f,c
  4787  00369E  EE10 F002          	lfsr	1,2
  4788  0036A2  5172               	movf	fputc@fp& (0+255),w,b
  4789  0036A4  26E1               	addwf	fsr1l,f,c
  4790  0036A6  5173               	movf	(fputc@fp+1)& (0+255),w,b
  4791  0036A8  22E2               	addwfc	fsr1h,f,c
  4792  0036AA  50DE               	movf	postinc2,w,c
  4793  0036AC  5CE6               	subwf	postinc1,w,c
  4794  0036AE  50E6               	movf	postinc1,w,c
  4795  0036B0  0A80               	xorlw	128
  4796  0036B2  6F78               	movwf	(??_fputc+4)& (0+255),b
  4797  0036B4  50DE               	movf	postinc2,w,c
  4798  0036B6  0A80               	xorlw	128
  4799  0036B8  5978               	subwfb	(??_fputc+4)& (0+255),w,b
  4800  0036BA  B0D8               	btfsc	status,0,c
  4801  0036BC  0012               	return	
  4802  0036BE                     u6060:
  4803                           
  4804                           ; BSR set to: 0
  4805  0036BE  EE20 F002          	lfsr	2,2
  4806  0036C2  5172               	movf	fputc@fp& (0+255),w,b
  4807  0036C4  26D9               	addwf	fsr2l,f,c
  4808  0036C6  5173               	movf	(fputc@fp+1)& (0+255),w,b
  4809  0036C8  22DA               	addwfc	fsr2h,f,c
  4810  0036CA  CFDE F074          	movff	postinc2,??_fputc
  4811  0036CE  CFDD F075          	movff	postdec2,??_fputc+1
  4812  0036D2  C072  FFD9         	movff	fputc@fp,fsr2l
  4813  0036D6  C073  FFDA         	movff	fputc@fp+1,fsr2h
  4814  0036DA  CFDE F076          	movff	postinc2,??_fputc+2
  4815  0036DE  CFDD F077          	movff	postdec2,??_fputc+3
  4816  0036E2  5174               	movf	??_fputc& (0+255),w,b
  4817  0036E4  2576               	addwf	(??_fputc+2)& (0+255),w,b
  4818  0036E6  6ED9               	movwf	fsr2l,c
  4819  0036E8  5175               	movf	(??_fputc+1)& (0+255),w,b
  4820  0036EA  2177               	addwfc	(??_fputc+3)& (0+255),w,b
  4821  0036EC  6EDA               	movwf	fsr2h,c
  4822  0036EE  C070  FFDF         	movff	fputc@c,indf2
  4823  0036F2  EE20 F002          	lfsr	2,2
  4824  0036F6  5172               	movf	fputc@fp& (0+255),w,b
  4825  0036F8  26D9               	addwf	fsr2l,f,c
  4826  0036FA  5173               	movf	(fputc@fp+1)& (0+255),w,b
  4827  0036FC  22DA               	addwfc	fsr2h,f,c
  4828  0036FE  2ADE               	incf	postinc2,f,c
  4829  003700  0E00               	movlw	0
  4830  003702  22DD               	addwfc	postdec2,f,c
  4831  003704  0012               	return		;funcret
  4832  003706                     __end_of_fputc:
  4833                           	opt callstack 0
  4834                           
  4835 ;; *************** function _putch *****************
  4836 ;; Defined at:
  4837 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  c               1    wreg     unsigned char 
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  c               1    0[COMRAM] unsigned char 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    4
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_fputc
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text11
  4866  0040DA                     __ptext11:
  4867                           	opt callstack 0
  4868  0040DA                     _putch:
  4869                           	opt callstack 22
  4870                           
  4871                           ;incstack = 0
  4872  0040DA  0012               	return		;funcret
  4873  0040DC                     __end_of_putch:
  4874                           	opt callstack 0
  4875                           
  4876 ;; *************** function _floorf *****************
  4877 ;; Defined at:
  4878 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  x               4   55[BANK0 ] float 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  u               4   71[BANK0 ] struct .
  4883 ;;  m               4   65[BANK0 ] unsigned long 
  4884 ;;  e               2   69[BANK0 ] int 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  4   55[BANK0 ] float 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;Total ram usage:       20 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    4
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_efgtoa
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text12
  4909  002D88                     __ptext12:
  4910                           	opt callstack 0
  4911  002D88                     _floorf:
  4912                           	opt callstack 22
  4913                           
  4914                           ;incstack = 0
  4915  002D88  C037  F0A7         	movff	floorf@F524,floorf@u
  4916  002D8C  C038  F0A8         	movff	floorf@F524+1,floorf@u+1
  4917  002D90  C039  F0A9         	movff	floorf@F524+2,floorf@u+2
  4918  002D94  C03A  F0AA         	movff	floorf@F524+3,floorf@u+3
  4919  002D98  C097  F0A7         	movff	floorf@x,floorf@u
  4920  002D9C  C098  F0A8         	movff	floorf@x+1,floorf@u+1
  4921  002DA0  C099  F0A9         	movff	floorf@x+2,floorf@u+2
  4922  002DA4  C09A  F0AA         	movff	floorf@x+3,floorf@u+3
  4923  002DA8  0E81               	movlw	129
  4924  002DAA  0100               	movlb	0	; () banked
  4925  002DAC  6F9B               	movwf	??_floorf& (0+255),b
  4926  002DAE  0EFF               	movlw	255
  4927  002DB0  6F9C               	movwf	(??_floorf+1)& (0+255),b
  4928  002DB2  C0A7  F09D         	movff	floorf@u,??_floorf+2
  4929  002DB6  C0A8  F09E         	movff	floorf@u+1,??_floorf+3
  4930  002DBA  C0A9  F09F         	movff	floorf@u+2,??_floorf+4
  4931  002DBE  C0AA  F0A0         	movff	floorf@u+3,??_floorf+5
  4932  002DC2  0E18               	movlw	24
  4933  002DC4  D005               	goto	u6670
  4934  002DC6                     u6675:
  4935  002DC6  90D8               	bcf	status,0,c
  4936  002DC8  33A0               	rrcf	(??_floorf+5)& (0+255),f,b
  4937  002DCA  339F               	rrcf	(??_floorf+4)& (0+255),f,b
  4938  002DCC  339E               	rrcf	(??_floorf+3)& (0+255),f,b
  4939  002DCE  339D               	rrcf	(??_floorf+2)& (0+255),f,b
  4940  002DD0                     u6670:
  4941  002DD0  2EE8               	decfsz	wreg,f,c
  4942  002DD2  D7F9               	goto	u6675
  4943  002DD4  519D               	movf	(??_floorf+2)& (0+255),w,b
  4944  002DD6  259B               	addwf	??_floorf& (0+255),w,b
  4945  002DD8  6FA5               	movwf	floorf@e& (0+255),b
  4946  002DDA  0E00               	movlw	0
  4947  002DDC  219C               	addwfc	(??_floorf+1)& (0+255),w,b
  4948  002DDE  6FA6               	movwf	(floorf@e+1)& (0+255),b
  4949  002DE0  BFA6               	btfsc	(floorf@e+1)& (0+255),7,b
  4950  002DE2  D00F               	goto	l5369
  4951  002DE4  51A6               	movf	(floorf@e+1)& (0+255),w,b
  4952  002DE6  E104               	bnz	u6680
  4953  002DE8  0E17               	movlw	23
  4954  002DEA  5DA5               	subwf	floorf@e& (0+255),w,b
  4955  002DEC  A0D8               	btfss	status,0,c
  4956  002DEE  D009               	goto	l5369
  4957  002DF0                     u6680:
  4958                           
  4959                           ; BSR set to: 0
  4960  002DF0  C097  F097         	movff	floorf@x,?_floorf
  4961  002DF4  C098  F098         	movff	floorf@x+1,?_floorf+1
  4962  002DF8  C099  F099         	movff	floorf@x+2,?_floorf+2
  4963  002DFC  C09A  F09A         	movff	floorf@x+3,?_floorf+3
  4964  002E00  0012               	return	
  4965  002E02                     l5369:
  4966                           
  4967                           ; BSR set to: 0
  4968  002E02  BFA6               	btfsc	(floorf@e+1)& (0+255),7,b
  4969  002E04  D05F               	goto	l5379
  4970                           
  4971                           ; BSR set to: 0
  4972  002E06  C0A5  F09B         	movff	floorf@e,??_floorf
  4973  002E0A  0EFF               	movlw	255
  4974  002E0C  6F9C               	movwf	(??_floorf+1)& (0+255),b
  4975  002E0E  0EFF               	movlw	255
  4976  002E10  6F9D               	movwf	(??_floorf+2)& (0+255),b
  4977  002E12  0E7F               	movlw	127
  4978  002E14  6F9E               	movwf	(??_floorf+3)& (0+255),b
  4979  002E16  0E00               	movlw	0
  4980  002E18  6F9F               	movwf	(??_floorf+4)& (0+255),b
  4981  002E1A                     u6705:
  4982  002E1A  679B               	tstfsz	??_floorf& (0+255),b
  4983  002E1C  D001               	goto	u6706
  4984  002E1E  D007               	goto	u6707
  4985  002E20                     u6706:
  4986  002E20  359F               	rlcf	(??_floorf+4)& (0+255),w,b
  4987  002E22  339F               	rrcf	(??_floorf+4)& (0+255),f,b
  4988  002E24  339E               	rrcf	(??_floorf+3)& (0+255),f,b
  4989  002E26  339D               	rrcf	(??_floorf+2)& (0+255),f,b
  4990  002E28  339C               	rrcf	(??_floorf+1)& (0+255),f,b
  4991  002E2A  2F9B               	decfsz	??_floorf& (0+255),f,b
  4992  002E2C  D7F6               	goto	u6705
  4993  002E2E                     u6707:
  4994  002E2E  C09C  F0A1         	movff	??_floorf+1,floorf@m
  4995  002E32  C09D  F0A2         	movff	??_floorf+2,floorf@m+1
  4996  002E36  C09E  F0A3         	movff	??_floorf+3,floorf@m+2
  4997  002E3A  C09F  F0A4         	movff	??_floorf+4,floorf@m+3
  4998  002E3E  0100               	movlb	0	; () banked
  4999  002E40  51A1               	movf	floorf@m& (0+255),w,b
  5000  002E42  15A7               	andwf	floorf@u& (0+255),w,b
  5001  002E44  6F9B               	movwf	??_floorf& (0+255),b
  5002  002E46  51A2               	movf	(floorf@m+1)& (0+255),w,b
  5003  002E48  15A8               	andwf	(floorf@u+1)& (0+255),w,b
  5004  002E4A  6F9C               	movwf	(??_floorf+1)& (0+255),b
  5005  002E4C  51A3               	movf	(floorf@m+2)& (0+255),w,b
  5006  002E4E  15A9               	andwf	(floorf@u+2)& (0+255),w,b
  5007  002E50  6F9D               	movwf	(??_floorf+2)& (0+255),b
  5008  002E52  51A4               	movf	(floorf@m+3)& (0+255),w,b
  5009  002E54  15AA               	andwf	(floorf@u+3)& (0+255),w,b
  5010  002E56  6F9E               	movwf	(??_floorf+3)& (0+255),b
  5011  002E58  519B               	movf	??_floorf& (0+255),w,b
  5012  002E5A  119C               	iorwf	(??_floorf+1)& (0+255),w,b
  5013  002E5C  119D               	iorwf	(??_floorf+2)& (0+255),w,b
  5014  002E5E  119E               	iorwf	(??_floorf+3)& (0+255),w,b
  5015  002E60  B4D8               	btfsc	status,2,c
  5016  002E62  D7C6               	goto	u6680
  5017                           
  5018                           ; BSR set to: 0
  5019  002E64  C0A7  F09B         	movff	floorf@u,??_floorf
  5020  002E68  C0A8  F09C         	movff	floorf@u+1,??_floorf+1
  5021  002E6C  C0A9  F09D         	movff	floorf@u+2,??_floorf+2
  5022  002E70  C0AA  F09E         	movff	floorf@u+3,??_floorf+3
  5023  002E74  0E20               	movlw	32
  5024  002E76  D005               	goto	u6720
  5025  002E78                     u6725:
  5026  002E78  90D8               	bcf	status,0,c
  5027  002E7A  339E               	rrcf	(??_floorf+3)& (0+255),f,b
  5028  002E7C  339D               	rrcf	(??_floorf+2)& (0+255),f,b
  5029  002E7E  339C               	rrcf	(??_floorf+1)& (0+255),f,b
  5030  002E80  339B               	rrcf	??_floorf& (0+255),f,b
  5031  002E82                     u6720:
  5032  002E82  2EE8               	decfsz	wreg,f,c
  5033  002E84  D7F9               	goto	u6725
  5034  002E86  519B               	movf	??_floorf& (0+255),w,b
  5035  002E88  119C               	iorwf	(??_floorf+1)& (0+255),w,b
  5036  002E8A  119D               	iorwf	(??_floorf+2)& (0+255),w,b
  5037  002E8C  119E               	iorwf	(??_floorf+3)& (0+255),w,b
  5038  002E8E  B4D8               	btfsc	status,2,c
  5039  002E90  D008               	goto	l1163
  5040                           
  5041                           ; BSR set to: 0
  5042  002E92  51A1               	movf	floorf@m& (0+255),w,b
  5043  002E94  27A7               	addwf	floorf@u& (0+255),f,b
  5044  002E96  51A2               	movf	(floorf@m+1)& (0+255),w,b
  5045  002E98  23A8               	addwfc	(floorf@u+1)& (0+255),f,b
  5046  002E9A  51A3               	movf	(floorf@m+2)& (0+255),w,b
  5047  002E9C  23A9               	addwfc	(floorf@u+2)& (0+255),f,b
  5048  002E9E  51A4               	movf	(floorf@m+3)& (0+255),w,b
  5049  002EA0  23AA               	addwfc	(floorf@u+3)& (0+255),f,b
  5050  002EA2                     l1163:
  5051                           
  5052                           ; BSR set to: 0
  5053  002EA2  1DA1               	comf	floorf@m& (0+255),w,b
  5054  002EA4  6F9B               	movwf	??_floorf& (0+255),b
  5055  002EA6  1DA2               	comf	(floorf@m+1)& (0+255),w,b
  5056  002EA8  6F9C               	movwf	(??_floorf+1)& (0+255),b
  5057  002EAA  1DA3               	comf	(floorf@m+2)& (0+255),w,b
  5058  002EAC  6F9D               	movwf	(??_floorf+2)& (0+255),b
  5059  002EAE  1DA4               	comf	(floorf@m+3)& (0+255),w,b
  5060  002EB0  6F9E               	movwf	(??_floorf+3)& (0+255),b
  5061  002EB2  519B               	movf	??_floorf& (0+255),w,b
  5062  002EB4  17A7               	andwf	floorf@u& (0+255),f,b
  5063  002EB6  519C               	movf	(??_floorf+1)& (0+255),w,b
  5064  002EB8  17A8               	andwf	(floorf@u+1)& (0+255),f,b
  5065  002EBA  519D               	movf	(??_floorf+2)& (0+255),w,b
  5066  002EBC  17A9               	andwf	(floorf@u+2)& (0+255),f,b
  5067  002EBE  519E               	movf	(??_floorf+3)& (0+255),w,b
  5068  002EC0  17AA               	andwf	(floorf@u+3)& (0+255),f,b
  5069  002EC2  D036               	goto	l5387
  5070  002EC4                     l5379:
  5071                           
  5072                           ; BSR set to: 0
  5073  002EC4  C0A7  F09B         	movff	floorf@u,??_floorf
  5074  002EC8  C0A8  F09C         	movff	floorf@u+1,??_floorf+1
  5075  002ECC  C0A9  F09D         	movff	floorf@u+2,??_floorf+2
  5076  002ED0  C0AA  F09E         	movff	floorf@u+3,??_floorf+3
  5077  002ED4  0E20               	movlw	32
  5078  002ED6  D005               	goto	u6740
  5079  002ED8                     u6745:
  5080  002ED8  90D8               	bcf	status,0,c
  5081  002EDA  339E               	rrcf	(??_floorf+3)& (0+255),f,b
  5082  002EDC  339D               	rrcf	(??_floorf+2)& (0+255),f,b
  5083  002EDE  339C               	rrcf	(??_floorf+1)& (0+255),f,b
  5084  002EE0  339B               	rrcf	??_floorf& (0+255),f,b
  5085  002EE2                     u6740:
  5086  002EE2  2EE8               	decfsz	wreg,f,c
  5087  002EE4  D7F9               	goto	u6745
  5088  002EE6  519B               	movf	??_floorf& (0+255),w,b
  5089  002EE8  119C               	iorwf	(??_floorf+1)& (0+255),w,b
  5090  002EEA  119D               	iorwf	(??_floorf+2)& (0+255),w,b
  5091  002EEC  119E               	iorwf	(??_floorf+3)& (0+255),w,b
  5092  002EEE  A4D8               	btfss	status,2,c
  5093  002EF0  D008               	goto	l5383
  5094                           
  5095                           ; BSR set to: 0
  5096  002EF2  0E00               	movlw	0
  5097  002EF4  6FA7               	movwf	floorf@u& (0+255),b
  5098  002EF6  0E00               	movlw	0
  5099  002EF8  6FA8               	movwf	(floorf@u+1)& (0+255),b
  5100  002EFA  0E00               	movlw	0
  5101  002EFC  6FA9               	movwf	(floorf@u+2)& (0+255),b
  5102  002EFE  0E00               	movlw	0
  5103  002F00  D016               	goto	L6
  5104  002F02                     l5383:
  5105                           
  5106                           ; BSR set to: 0
  5107  002F02  90D8               	bcf	status,0,c
  5108  002F04  35A7               	rlcf	floorf@u& (0+255),w,b
  5109  002F06  6F9B               	movwf	??_floorf& (0+255),b
  5110  002F08  35A8               	rlcf	(floorf@u+1)& (0+255),w,b
  5111  002F0A  6F9C               	movwf	(??_floorf+1)& (0+255),b
  5112  002F0C  35A9               	rlcf	(floorf@u+2)& (0+255),w,b
  5113  002F0E  6F9D               	movwf	(??_floorf+2)& (0+255),b
  5114  002F10  35AA               	rlcf	(floorf@u+3)& (0+255),w,b
  5115  002F12  6F9E               	movwf	(??_floorf+3)& (0+255),b
  5116  002F14  519B               	movf	??_floorf& (0+255),w,b
  5117  002F16  119C               	iorwf	(??_floorf+1)& (0+255),w,b
  5118  002F18  119D               	iorwf	(??_floorf+2)& (0+255),w,b
  5119  002F1A  119E               	iorwf	(??_floorf+3)& (0+255),w,b
  5120  002F1C  B4D8               	btfsc	status,2,c
  5121  002F1E  D008               	goto	l5387
  5122                           
  5123                           ; BSR set to: 0
  5124  002F20  0E00               	movlw	0
  5125  002F22  6FA7               	movwf	floorf@u& (0+255),b
  5126  002F24  0E00               	movlw	0
  5127  002F26  6FA8               	movwf	(floorf@u+1)& (0+255),b
  5128  002F28  0E80               	movlw	128
  5129  002F2A  6FA9               	movwf	(floorf@u+2)& (0+255),b
  5130  002F2C  0EBF               	movlw	191
  5131  002F2E                     L6:
  5132  002F2E  6FAA               	movwf	(floorf@u+3)& (0+255),b
  5133  002F30                     l5387:
  5134                           
  5135                           ; BSR set to: 0
  5136  002F30  C0A7  F097         	movff	floorf@u,?_floorf
  5137  002F34  C0A8  F098         	movff	floorf@u+1,?_floorf+1
  5138  002F38  C0A9  F099         	movff	floorf@u+2,?_floorf+2
  5139  002F3C  C0AA  F09A         	movff	floorf@u+3,?_floorf+3
  5140                           
  5141                           ; BSR set to: 0
  5142  002F40  0012               	return		;funcret
  5143  002F42                     __end_of_floorf:
  5144                           	opt callstack 0
  5145                           
  5146 ;; *************** function ___fpclassifyf *****************
  5147 ;; Defined at:
  5148 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  x               4   16[BANK0 ] float 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;  u               4   26[BANK0 ] struct .
  5153 ;;  e               2   24[BANK0 ] int 
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  2   16[BANK0 ] int 
  5156 ;; Registers used:
  5157 ;;		wreg, status,2, status,0
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5165 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5166 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5167 ;;Total ram usage:       14 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    4
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_efgtoa
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text13
  5178  0032B0                     __ptext13:
  5179                           	opt callstack 0
  5180  0032B0                     ___fpclassifyf:
  5181                           	opt callstack 22
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;incstack = 0
  5185  0032B0  C03B  F07A         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5186  0032B4  C03C  F07B         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5187  0032B8  C03D  F07C         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5188  0032BC  C03E  F07D         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5189  0032C0  C070  F07A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5190  0032C4  C071  F07B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5191  0032C8  C072  F07C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5192  0032CC  C073  F07D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5193  0032D0  C07A  F074         	movff	___fpclassifyf@u,??___fpclassifyf
  5194  0032D4  C07B  F075         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5195  0032D8  C07C  F076         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5196  0032DC  C07D  F077         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5197  0032E0  0E18               	movlw	24
  5198  0032E2  D006               	goto	u6570
  5199  0032E4                     u6575:
  5200  0032E4  0100               	movlb	0	; () banked
  5201  0032E6  90D8               	bcf	status,0,c
  5202  0032E8  3377               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5203  0032EA  3376               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5204  0032EC  3375               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5205  0032EE  3374               	rrcf	??___fpclassifyf& (0+255),f,b
  5206  0032F0                     u6570:
  5207  0032F0  2EE8               	decfsz	wreg,f,c
  5208  0032F2  D7F8               	goto	u6575
  5209  0032F4  5174               	movf	??___fpclassifyf& (0+255),w,b
  5210  0032F6  6F78               	movwf	___fpclassifyf@e& (0+255),b
  5211  0032F8  6B79               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5212  0032FA  5178               	movf	___fpclassifyf@e& (0+255),w,b
  5213  0032FC  1179               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5214  0032FE  A4D8               	btfss	status,2,c
  5215  003300  D019               	goto	l5343
  5216                           
  5217                           ; BSR set to: 0
  5218  003302  90D8               	bcf	status,0,c
  5219  003304  357A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5220  003306  6F74               	movwf	??___fpclassifyf& (0+255),b
  5221  003308  357B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5222  00330A  6F75               	movwf	(??___fpclassifyf+1)& (0+255),b
  5223  00330C  357C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5224  00330E  6F76               	movwf	(??___fpclassifyf+2)& (0+255),b
  5225  003310  357D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5226  003312  6F77               	movwf	(??___fpclassifyf+3)& (0+255),b
  5227  003314  5174               	movf	??___fpclassifyf& (0+255),w,b
  5228  003316  1175               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5229  003318  1176               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5230  00331A  1177               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5231  00331C  A4D8               	btfss	status,2,c
  5232  00331E  D005               	goto	l5339
  5233                           
  5234                           ; BSR set to: 0
  5235  003320  0E00               	movlw	0
  5236  003322  6F71               	movwf	(?___fpclassifyf+1)& (0+255),b
  5237  003324  0E02               	movlw	2
  5238  003326  6F70               	movwf	?___fpclassifyf& (0+255),b
  5239  003328  0012               	return	
  5240  00332A                     l5339:
  5241                           
  5242                           ; BSR set to: 0
  5243  00332A  0E00               	movlw	0
  5244  00332C  6F71               	movwf	(?___fpclassifyf+1)& (0+255),b
  5245  00332E  0E03               	movlw	3
  5246  003330  6F70               	movwf	?___fpclassifyf& (0+255),b
  5247  003332  0012               	return	
  5248  003334                     l5343:
  5249                           
  5250                           ; BSR set to: 0
  5251  003334  2978               	incf	___fpclassifyf@e& (0+255),w,b
  5252  003336  1179               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5253  003338  A4D8               	btfss	status,2,c
  5254  00333A  D01C               	goto	l5349
  5255                           
  5256                           ; BSR set to: 0
  5257  00333C  C07A  F074         	movff	___fpclassifyf@u,??___fpclassifyf
  5258  003340  C07B  F075         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5259  003344  C07C  F076         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5260  003348  C07D  F077         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5261  00334C  0E09               	movlw	9
  5262  00334E                     u6615:
  5263  00334E  90D8               	bcf	status,0,c
  5264  003350  3774               	rlcf	??___fpclassifyf& (0+255),f,b
  5265  003352  3775               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5266  003354  3776               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5267  003356  3777               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5268  003358  2EE8               	decfsz	wreg,f,c
  5269  00335A  D7F9               	goto	u6615
  5270  00335C  5174               	movf	??___fpclassifyf& (0+255),w,b
  5271  00335E  1175               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5272  003360  1176               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5273  003362  1177               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5274  003364  A4D8               	btfss	status,2,c
  5275  003366  D002               	goto	u6620
  5276  003368  0E01               	movlw	1
  5277  00336A  D001               	goto	u6630
  5278  00336C                     u6620:
  5279  00336C  0E00               	movlw	0
  5280  00336E                     u6630:
  5281  00336E  6F70               	movwf	?___fpclassifyf& (0+255),b
  5282  003370  6B71               	clrf	(?___fpclassifyf+1)& (0+255),b
  5283  003372  0012               	return	
  5284  003374                     l5349:
  5285                           
  5286                           ; BSR set to: 0
  5287  003374  0E00               	movlw	0
  5288  003376  6F71               	movwf	(?___fpclassifyf+1)& (0+255),b
  5289  003378  0E04               	movlw	4
  5290  00337A  6F70               	movwf	?___fpclassifyf& (0+255),b
  5291                           
  5292                           ; BSR set to: 0
  5293  00337C  0012               	return		;funcret
  5294  00337E                     __end_of___fpclassifyf:
  5295                           	opt callstack 0
  5296                           
  5297 ;; *************** function ___fltol *****************
  5298 ;; Defined at:
  5299 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  f1              4   16[BANK0 ] int 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  exp1            1   25[BANK0 ] unsigned char 
  5304 ;;  sign1           1   24[BANK0 ] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  4   16[BANK0 ] long 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5314 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;Total ram usage:       10 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    4
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_efgtoa
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text14
  5329  00343C                     __ptext14:
  5330                           	opt callstack 0
  5331  00343C                     ___fltol:
  5332                           	opt callstack 22
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;incstack = 0
  5336  00343C  0100               	movlb	0	; () banked
  5337  00343E  3572               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5338  003440  3573               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5339  003442  6F79               	movwf	___fltol@exp1& (0+255),b
  5340  003444  5179               	movf	___fltol@exp1& (0+255),w,b
  5341  003446  A4D8               	btfss	status,2,c
  5342  003448  D009               	goto	l5807
  5343  00344A                     u7420:
  5344                           
  5345                           ; BSR set to: 0
  5346  00344A  0E00               	movlw	0
  5347  00344C  6F70               	movwf	?___fltol& (0+255),b
  5348  00344E  0E00               	movlw	0
  5349  003450  6F71               	movwf	(?___fltol+1)& (0+255),b
  5350  003452  0E00               	movlw	0
  5351  003454  6F72               	movwf	(?___fltol+2)& (0+255),b
  5352  003456  0E00               	movlw	0
  5353  003458  6F73               	movwf	(?___fltol+3)& (0+255),b
  5354  00345A  0012               	return	
  5355  00345C                     l5807:
  5356                           
  5357                           ; BSR set to: 0
  5358  00345C  C070  F074         	movff	___fltol@f1,??___fltol
  5359  003460  C071  F075         	movff	___fltol@f1+1,??___fltol+1
  5360  003464  C072  F076         	movff	___fltol@f1+2,??___fltol+2
  5361  003468  C073  F077         	movff	___fltol@f1+3,??___fltol+3
  5362  00346C  0E20               	movlw	32
  5363  00346E  D005               	goto	u7430
  5364  003470                     u7435:
  5365  003470  90D8               	bcf	status,0,c
  5366  003472  3377               	rrcf	(??___fltol+3)& (0+255),f,b
  5367  003474  3376               	rrcf	(??___fltol+2)& (0+255),f,b
  5368  003476  3375               	rrcf	(??___fltol+1)& (0+255),f,b
  5369  003478  3374               	rrcf	??___fltol& (0+255),f,b
  5370  00347A                     u7430:
  5371  00347A  2EE8               	decfsz	wreg,f,c
  5372  00347C  D7F9               	goto	u7435
  5373  00347E  5174               	movf	??___fltol& (0+255),w,b
  5374  003480  6F78               	movwf	___fltol@sign1& (0+255),b
  5375                           
  5376                           ; BSR set to: 0
  5377  003482  8F72               	bsf	(___fltol@f1+2)& (0+255),7,b
  5378                           
  5379                           ; BSR set to: 0
  5380  003484  0EFF               	movlw	255
  5381  003486  1770               	andwf	___fltol@f1& (0+255),f,b
  5382  003488  0EFF               	movlw	255
  5383  00348A  1771               	andwf	(___fltol@f1+1)& (0+255),f,b
  5384  00348C  0EFF               	movlw	255
  5385  00348E  1772               	andwf	(___fltol@f1+2)& (0+255),f,b
  5386  003490  0E00               	movlw	0
  5387  003492  1773               	andwf	(___fltol@f1+3)& (0+255),f,b
  5388                           
  5389                           ; BSR set to: 0
  5390  003494  0E96               	movlw	150
  5391  003496  5F79               	subwf	___fltol@exp1& (0+255),f,b
  5392                           
  5393                           ; BSR set to: 0
  5394  003498  AF79               	btfss	___fltol@exp1& (0+255),7,b
  5395  00349A  D00D               	goto	l5827
  5396                           
  5397                           ; BSR set to: 0
  5398  00349C  5179               	movf	___fltol@exp1& (0+255),w,b
  5399  00349E  0A80               	xorlw	128
  5400  0034A0  0F97               	addlw	151
  5401  0034A2  A0D8               	btfss	status,0,c
  5402  0034A4  D7D2               	goto	u7420
  5403  0034A6                     l5823:
  5404                           
  5405                           ; BSR set to: 0
  5406  0034A6  90D8               	bcf	status,0,c
  5407  0034A8  3373               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5408  0034AA  3372               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5409  0034AC  3371               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5410  0034AE  3370               	rrcf	___fltol@f1& (0+255),f,b
  5411                           
  5412                           ; BSR set to: 0
  5413  0034B0  3F79               	incfsz	___fltol@exp1& (0+255),f,b
  5414  0034B2  D7F9               	goto	l5823
  5415  0034B4  D00D               	goto	u7470
  5416  0034B6                     l5827:
  5417                           
  5418                           ; BSR set to: 0
  5419  0034B6  0E1F               	movlw	31
  5420  0034B8  6579               	cpfsgt	___fltol@exp1& (0+255),b
  5421  0034BA  D007               	goto	l5835
  5422  0034BC  D7C6               	goto	u7420
  5423  0034BE                     l5833:
  5424                           
  5425                           ; BSR set to: 0
  5426  0034BE  90D8               	bcf	status,0,c
  5427  0034C0  3770               	rlcf	___fltol@f1& (0+255),f,b
  5428  0034C2  3771               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5429  0034C4  3772               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5430  0034C6  3773               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5431  0034C8  0779               	decf	___fltol@exp1& (0+255),f,b
  5432  0034CA                     l5835:
  5433                           
  5434                           ; BSR set to: 0
  5435  0034CA  5179               	movf	___fltol@exp1& (0+255),w,b
  5436  0034CC  A4D8               	btfss	status,2,c
  5437  0034CE  D7F7               	goto	l5833
  5438  0034D0                     u7470:
  5439                           
  5440                           ; BSR set to: 0
  5441  0034D0  5178               	movf	___fltol@sign1& (0+255),w,b
  5442  0034D2  B4D8               	btfsc	status,2,c
  5443  0034D4  D008               	goto	l5841
  5444                           
  5445                           ; BSR set to: 0
  5446  0034D6  1F73               	comf	(___fltol@f1+3)& (0+255),f,b
  5447  0034D8  1F72               	comf	(___fltol@f1+2)& (0+255),f,b
  5448  0034DA  1F71               	comf	(___fltol@f1+1)& (0+255),f,b
  5449  0034DC  6D70               	negf	___fltol@f1& (0+255),b
  5450  0034DE  0E00               	movlw	0
  5451  0034E0  2371               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5452  0034E2  2372               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5453  0034E4  2373               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5454  0034E6                     l5841:
  5455                           
  5456                           ; BSR set to: 0
  5457  0034E6  C070  F070         	movff	___fltol@f1,?___fltol
  5458  0034EA  C071  F071         	movff	___fltol@f1+1,?___fltol+1
  5459  0034EE  C072  F072         	movff	___fltol@f1+2,?___fltol+2
  5460  0034F2  C073  F073         	movff	___fltol@f1+3,?___fltol+3
  5461                           
  5462                           ; BSR set to: 0
  5463  0034F6  0012               	return		;funcret
  5464  0034F8                     __end_of___fltol:
  5465                           	opt callstack 0
  5466                           
  5467 ;; *************** function ___flsub *****************
  5468 ;; Defined at:
  5469 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  b               4   55[BANK0 ] long 
  5472 ;;  a               4   59[BANK0 ] long 
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  4   55[BANK0 ] long 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5484 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;Total ram usage:        8 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    5
  5491 ;; This function calls:
  5492 ;;		___fladd
  5493 ;; This function is called by:
  5494 ;;		_efgtoa
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text15
  5499  003E0A                     __ptext15:
  5500                           	opt callstack 0
  5501  003E0A                     ___flsub:
  5502                           	opt callstack 21
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;incstack = 0
  5506  003E0A  0E00               	movlw	0
  5507  003E0C  0100               	movlb	0	; () banked
  5508  003E0E  1B9B               	xorwf	___flsub@a& (0+255),f,b
  5509  003E10  0E00               	movlw	0
  5510  003E12  1B9C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5511  003E14  0E00               	movlw	0
  5512  003E16  1B9D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5513  003E18  0E80               	movlw	128
  5514  003E1A  1B9E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5515                           
  5516                           ; BSR set to: 0
  5517  003E1C  C097  F070         	movff	___flsub@b,___fladd@b
  5518  003E20  C098  F071         	movff	___flsub@b+1,___fladd@b+1
  5519  003E24  C099  F072         	movff	___flsub@b+2,___fladd@b+2
  5520  003E28  C09A  F073         	movff	___flsub@b+3,___fladd@b+3
  5521  003E2C  C09B  F074         	movff	___flsub@a,___fladd@a
  5522  003E30  C09C  F075         	movff	___flsub@a+1,___fladd@a+1
  5523  003E34  C09D  F076         	movff	___flsub@a+2,___fladd@a+2
  5524  003E38  C09E  F077         	movff	___flsub@a+3,___fladd@a+3
  5525  003E3C  ECB4  F012         	call	___fladd	;wreg free
  5526  003E40  C070  F097         	movff	?___fladd,?___flsub
  5527  003E44  C071  F098         	movff	?___fladd+1,?___flsub+1
  5528  003E48  C072  F099         	movff	?___fladd+2,?___flsub+2
  5529  003E4C  C073  F09A         	movff	?___fladd+3,?___flsub+3
  5530  003E50  0012               	return		;funcret
  5531  003E52                     __end_of___flsub:
  5532                           	opt callstack 0
  5533                           
  5534 ;; *************** function ___fladd *****************
  5535 ;; Defined at:
  5536 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  b               4   16[BANK0 ] long 
  5539 ;;  a               4   20[BANK0 ] long 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  grs             1   31[BANK0 ] unsigned char 
  5542 ;;  bexp            1   30[BANK0 ] unsigned char 
  5543 ;;  aexp            1   29[BANK0 ] unsigned char 
  5544 ;;  signs           1   28[BANK0 ] unsigned char 
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  4   16[BANK0 ] unsigned char 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5554 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;Total ram usage:       16 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    4
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_efgtoa
  5565 ;;		___flsub
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text16
  5570  002568                     __ptext16:
  5571                           	opt callstack 0
  5572  002568                     ___fladd:
  5573                           	opt callstack 21
  5574                           
  5575                           ;incstack = 0
  5576  002568  0100               	movlb	0	; () banked
  5577  00256A  5173               	movf	(___fladd@b+3)& (0+255),w,b
  5578  00256C  0B80               	andlw	128
  5579  00256E  6F7C               	movwf	___fladd@signs& (0+255),b
  5580  002570  5173               	movf	(___fladd@b+3)& (0+255),w,b
  5581  002572  2573               	addwf	(___fladd@b+3)& (0+255),w,b
  5582  002574  6F7E               	movwf	___fladd@bexp& (0+255),b
  5583                           
  5584                           ; BSR set to: 0
  5585  002576  BF72               	btfsc	(___fladd@b+2)& (0+255),7,b
  5586                           
  5587                           ; BSR set to: 0
  5588  002578  817E               	bsf	___fladd@bexp& (0+255),0,b
  5589                           
  5590                           ; BSR set to: 0
  5591  00257A  517E               	movf	___fladd@bexp& (0+255),w,b
  5592  00257C  B4D8               	btfsc	status,2,c
  5593  00257E  D00D               	goto	l5119
  5594                           
  5595                           ; BSR set to: 0
  5596  002580  297E               	incf	___fladd@bexp& (0+255),w,b
  5597  002582  A4D8               	btfss	status,2,c
  5598  002584  D008               	goto	l5115
  5599                           
  5600                           ; BSR set to: 0
  5601  002586  0E00               	movlw	0
  5602  002588  6F70               	movwf	___fladd@b& (0+255),b
  5603  00258A  0E00               	movlw	0
  5604  00258C  6F71               	movwf	(___fladd@b+1)& (0+255),b
  5605  00258E  0E00               	movlw	0
  5606  002590  6F72               	movwf	(___fladd@b+2)& (0+255),b
  5607  002592  0E00               	movlw	0
  5608  002594  6F73               	movwf	(___fladd@b+3)& (0+255),b
  5609  002596                     l5115:
  5610                           
  5611                           ; BSR set to: 0
  5612  002596  8F72               	bsf	(___fladd@b+2)& (0+255),7,b
  5613  002598  D006               	goto	L7
  5614  00259A                     l5119:
  5615                           
  5616                           ; BSR set to: 0
  5617  00259A  0E00               	movlw	0
  5618  00259C  6F70               	movwf	___fladd@b& (0+255),b
  5619  00259E  0E00               	movlw	0
  5620  0025A0  6F71               	movwf	(___fladd@b+1)& (0+255),b
  5621  0025A2  0E00               	movlw	0
  5622  0025A4  6F72               	movwf	(___fladd@b+2)& (0+255),b
  5623  0025A6                     L7:
  5624  0025A6  0E00               	movlw	0
  5625  0025A8  6F73               	movwf	(___fladd@b+3)& (0+255),b
  5626                           
  5627                           ; BSR set to: 0
  5628  0025AA  5177               	movf	(___fladd@a+3)& (0+255),w,b
  5629  0025AC  0B80               	andlw	128
  5630  0025AE  6F7D               	movwf	___fladd@aexp& (0+255),b
  5631                           
  5632                           ; BSR set to: 0
  5633  0025B0  517C               	movf	___fladd@signs& (0+255),w,b
  5634  0025B2  197D               	xorwf	___fladd@aexp& (0+255),w,b
  5635  0025B4  A4D8               	btfss	status,2,c
  5636                           
  5637                           ; BSR set to: 0
  5638  0025B6  8D7C               	bsf	___fladd@signs& (0+255),6,b
  5639                           
  5640                           ; BSR set to: 0
  5641  0025B8  5177               	movf	(___fladd@a+3)& (0+255),w,b
  5642  0025BA  2577               	addwf	(___fladd@a+3)& (0+255),w,b
  5643  0025BC  6F7D               	movwf	___fladd@aexp& (0+255),b
  5644                           
  5645                           ; BSR set to: 0
  5646  0025BE  BF76               	btfsc	(___fladd@a+2)& (0+255),7,b
  5647                           
  5648                           ; BSR set to: 0
  5649  0025C0  817D               	bsf	___fladd@aexp& (0+255),0,b
  5650                           
  5651                           ; BSR set to: 0
  5652  0025C2  517D               	movf	___fladd@aexp& (0+255),w,b
  5653  0025C4  B4D8               	btfsc	status,2,c
  5654  0025C6  D00D               	goto	l5143
  5655                           
  5656                           ; BSR set to: 0
  5657  0025C8  297D               	incf	___fladd@aexp& (0+255),w,b
  5658  0025CA  A4D8               	btfss	status,2,c
  5659  0025CC  D008               	goto	l5139
  5660                           
  5661                           ; BSR set to: 0
  5662  0025CE  0E00               	movlw	0
  5663  0025D0  6F74               	movwf	___fladd@a& (0+255),b
  5664  0025D2  0E00               	movlw	0
  5665  0025D4  6F75               	movwf	(___fladd@a+1)& (0+255),b
  5666  0025D6  0E00               	movlw	0
  5667  0025D8  6F76               	movwf	(___fladd@a+2)& (0+255),b
  5668  0025DA  0E00               	movlw	0
  5669  0025DC  6F77               	movwf	(___fladd@a+3)& (0+255),b
  5670  0025DE                     l5139:
  5671                           
  5672                           ; BSR set to: 0
  5673  0025DE  8F76               	bsf	(___fladd@a+2)& (0+255),7,b
  5674  0025E0  D006               	goto	L8
  5675  0025E2                     l5143:
  5676                           
  5677                           ; BSR set to: 0
  5678  0025E2  0E00               	movlw	0
  5679  0025E4  6F74               	movwf	___fladd@a& (0+255),b
  5680  0025E6  0E00               	movlw	0
  5681  0025E8  6F75               	movwf	(___fladd@a+1)& (0+255),b
  5682  0025EA  0E00               	movlw	0
  5683  0025EC  6F76               	movwf	(___fladd@a+2)& (0+255),b
  5684  0025EE                     L8:
  5685  0025EE  0E00               	movlw	0
  5686  0025F0  6F77               	movwf	(___fladd@a+3)& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689  0025F2  517E               	movf	___fladd@bexp& (0+255),w,b
  5690  0025F4  5D7D               	subwf	___fladd@aexp& (0+255),w,b
  5691  0025F6  B0D8               	btfsc	status,0,c
  5692  0025F8  D022               	goto	l5181
  5693                           
  5694                           ; BSR set to: 0
  5695  0025FA  AD7C               	btfss	___fladd@signs& (0+255),6,b
  5696  0025FC  D002               	goto	l5151
  5697                           
  5698                           ; BSR set to: 0
  5699  0025FE  0E80               	movlw	128
  5700  002600  1B7C               	xorwf	___fladd@signs& (0+255),f,b
  5701  002602                     l5151:
  5702                           
  5703                           ; BSR set to: 0
  5704  002602  C07E  F07F         	movff	___fladd@bexp,___fladd@grs
  5705                           
  5706                           ; BSR set to: 0
  5707  002606  C07D  F07E         	movff	___fladd@aexp,___fladd@bexp
  5708                           
  5709                           ; BSR set to: 0
  5710  00260A  C07F  F07D         	movff	___fladd@grs,___fladd@aexp
  5711                           
  5712                           ; BSR set to: 0
  5713  00260E  C070  F07F         	movff	___fladd@b,___fladd@grs
  5714                           
  5715                           ; BSR set to: 0
  5716  002612  C074  F070         	movff	___fladd@a,___fladd@b
  5717                           
  5718                           ; BSR set to: 0
  5719  002616  C07F  F074         	movff	___fladd@grs,___fladd@a
  5720                           
  5721                           ; BSR set to: 0
  5722  00261A  C071  F07F         	movff	___fladd@b+1,___fladd@grs
  5723                           
  5724                           ; BSR set to: 0
  5725  00261E  C075  F071         	movff	___fladd@a+1,___fladd@b+1
  5726                           
  5727                           ; BSR set to: 0
  5728  002622  C07F  F075         	movff	___fladd@grs,___fladd@a+1
  5729                           
  5730                           ; BSR set to: 0
  5731  002626  C072  F07F         	movff	___fladd@b+2,___fladd@grs
  5732                           
  5733                           ; BSR set to: 0
  5734  00262A  C076  F072         	movff	___fladd@a+2,___fladd@b+2
  5735                           
  5736                           ; BSR set to: 0
  5737  00262E  C07F  F076         	movff	___fladd@grs,___fladd@a+2
  5738                           
  5739                           ; BSR set to: 0
  5740  002632  C073  F07F         	movff	___fladd@b+3,___fladd@grs
  5741                           
  5742                           ; BSR set to: 0
  5743  002636  C077  F073         	movff	___fladd@a+3,___fladd@b+3
  5744                           
  5745                           ; BSR set to: 0
  5746  00263A  C07F  F077         	movff	___fladd@grs,___fladd@a+3
  5747  00263E                     l5181:
  5748                           
  5749                           ; BSR set to: 0
  5750  00263E  0E00               	movlw	0
  5751  002640  6F7F               	movwf	___fladd@grs& (0+255),b
  5752                           
  5753                           ; BSR set to: 0
  5754  002642  517E               	movf	___fladd@bexp& (0+255),w,b
  5755  002644  C07D  F078         	movff	___fladd@aexp,??___fladd
  5756  002648  6B79               	clrf	(??___fladd+1)& (0+255),b
  5757  00264A  5F78               	subwf	??___fladd& (0+255),f,b
  5758  00264C  0E00               	movlw	0
  5759  00264E  5B79               	subwfb	(??___fladd+1)& (0+255),f,b
  5760  002650  BF79               	btfsc	(??___fladd+1)& (0+255),7,b
  5761  002652  D02C               	goto	l970
  5762  002654  5179               	movf	(??___fladd+1)& (0+255),w,b
  5763  002656  E104               	bnz	u6210
  5764  002658  0E1A               	movlw	26
  5765  00265A  5D78               	subwf	??___fladd& (0+255),w,b
  5766  00265C  A0D8               	btfss	status,0,c
  5767  00265E  D026               	goto	l970
  5768  002660                     u6210:
  5769                           
  5770                           ; BSR set to: 0
  5771  002660  5170               	movf	___fladd@b& (0+255),w,b
  5772  002662  1171               	iorwf	(___fladd@b+1)& (0+255),w,b
  5773  002664  1172               	iorwf	(___fladd@b+2)& (0+255),w,b
  5774  002666  1173               	iorwf	(___fladd@b+3)& (0+255),w,b
  5775  002668  B4D8               	btfsc	status,2,c
  5776  00266A  D002               	goto	u6220
  5777  00266C  0E01               	movlw	1
  5778  00266E  D001               	goto	u6230
  5779  002670                     u6220:
  5780  002670  0E00               	movlw	0
  5781  002672                     u6230:
  5782  002672  6F7F               	movwf	___fladd@grs& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785  002674  0E00               	movlw	0
  5786  002676  6F70               	movwf	___fladd@b& (0+255),b
  5787  002678  0E00               	movlw	0
  5788  00267A  6F71               	movwf	(___fladd@b+1)& (0+255),b
  5789  00267C  0E00               	movlw	0
  5790  00267E  6F72               	movwf	(___fladd@b+2)& (0+255),b
  5791  002680  0E00               	movlw	0
  5792  002682  6F73               	movwf	(___fladd@b+3)& (0+255),b
  5793                           
  5794                           ; BSR set to: 0
  5795  002684  C07D  F07E         	movff	___fladd@aexp,___fladd@bexp
  5796  002688  D015               	goto	u6260
  5797  00268A                     l971:
  5798                           
  5799                           ; BSR set to: 0
  5800  00268A  A17F               	btfss	___fladd@grs& (0+255),0,b
  5801  00268C  D005               	goto	l5193
  5802                           
  5803                           ; BSR set to: 0
  5804  00268E  90D8               	bcf	status,0,c
  5805  002690  317F               	rrcf	___fladd@grs& (0+255),w,b
  5806  002692  0901               	iorlw	1
  5807  002694  6F7F               	movwf	___fladd@grs& (0+255),b
  5808  002696  D002               	goto	l5195
  5809  002698                     l5193:
  5810                           
  5811                           ; BSR set to: 0
  5812  002698  90D8               	bcf	status,0,c
  5813  00269A  337F               	rrcf	___fladd@grs& (0+255),f,b
  5814  00269C                     l5195:
  5815                           
  5816                           ; BSR set to: 0
  5817  00269C  B170               	btfsc	___fladd@b& (0+255),0,b
  5818                           
  5819                           ; BSR set to: 0
  5820  00269E  8F7F               	bsf	___fladd@grs& (0+255),7,b
  5821                           
  5822                           ; BSR set to: 0
  5823  0026A0  3573               	rlcf	(___fladd@b+3)& (0+255),w,b
  5824  0026A2  3373               	rrcf	(___fladd@b+3)& (0+255),f,b
  5825  0026A4  3372               	rrcf	(___fladd@b+2)& (0+255),f,b
  5826  0026A6  3371               	rrcf	(___fladd@b+1)& (0+255),f,b
  5827  0026A8  3370               	rrcf	___fladd@b& (0+255),f,b
  5828                           
  5829                           ; BSR set to: 0
  5830  0026AA  2B7E               	incf	___fladd@bexp& (0+255),f,b
  5831  0026AC                     l970:
  5832                           
  5833                           ; BSR set to: 0
  5834  0026AC  517D               	movf	___fladd@aexp& (0+255),w,b
  5835  0026AE  5D7E               	subwf	___fladd@bexp& (0+255),w,b
  5836  0026B0  A0D8               	btfss	status,0,c
  5837  0026B2  D7EB               	goto	l971
  5838  0026B4                     u6260:
  5839                           
  5840                           ; BSR set to: 0
  5841  0026B4  BD7C               	btfsc	___fladd@signs& (0+255),6,b
  5842  0026B6  D028               	goto	l5227
  5843                           
  5844                           ; BSR set to: 0
  5845  0026B8  517E               	movf	___fladd@bexp& (0+255),w,b
  5846  0026BA  A4D8               	btfss	status,2,c
  5847  0026BC  D009               	goto	l5209
  5848                           
  5849                           ; BSR set to: 0
  5850  0026BE  0E00               	movlw	0
  5851  0026C0  6F70               	movwf	?___fladd& (0+255),b
  5852  0026C2  0E00               	movlw	0
  5853  0026C4  6F71               	movwf	(?___fladd+1)& (0+255),b
  5854  0026C6  0E00               	movlw	0
  5855  0026C8  6F72               	movwf	(?___fladd+2)& (0+255),b
  5856  0026CA  0E00               	movlw	0
  5857  0026CC  6F73               	movwf	(?___fladd+3)& (0+255),b
  5858  0026CE  0012               	return	
  5859  0026D0                     l5209:
  5860                           
  5861                           ; BSR set to: 0
  5862  0026D0  5174               	movf	___fladd@a& (0+255),w,b
  5863  0026D2  2770               	addwf	___fladd@b& (0+255),f,b
  5864  0026D4  5175               	movf	(___fladd@a+1)& (0+255),w,b
  5865  0026D6  2371               	addwfc	(___fladd@b+1)& (0+255),f,b
  5866  0026D8  5176               	movf	(___fladd@a+2)& (0+255),w,b
  5867  0026DA  2372               	addwfc	(___fladd@b+2)& (0+255),f,b
  5868  0026DC  5177               	movf	(___fladd@a+3)& (0+255),w,b
  5869  0026DE  2373               	addwfc	(___fladd@b+3)& (0+255),f,b
  5870                           
  5871                           ; BSR set to: 0
  5872  0026E0  A173               	btfss	(___fladd@b+3)& (0+255),0,b
  5873  0026E2  D071               	goto	u6390
  5874                           
  5875                           ; BSR set to: 0
  5876  0026E4  A17F               	btfss	___fladd@grs& (0+255),0,b
  5877  0026E6  D005               	goto	l5217
  5878                           
  5879                           ; BSR set to: 0
  5880  0026E8  90D8               	bcf	status,0,c
  5881  0026EA  317F               	rrcf	___fladd@grs& (0+255),w,b
  5882  0026EC  0901               	iorlw	1
  5883  0026EE  6F7F               	movwf	___fladd@grs& (0+255),b
  5884  0026F0  D002               	goto	l5219
  5885  0026F2                     l5217:
  5886                           
  5887                           ; BSR set to: 0
  5888  0026F2  90D8               	bcf	status,0,c
  5889  0026F4  337F               	rrcf	___fladd@grs& (0+255),f,b
  5890  0026F6                     l5219:
  5891                           
  5892                           ; BSR set to: 0
  5893  0026F6  B170               	btfsc	___fladd@b& (0+255),0,b
  5894                           
  5895                           ; BSR set to: 0
  5896  0026F8  8F7F               	bsf	___fladd@grs& (0+255),7,b
  5897                           
  5898                           ; BSR set to: 0
  5899  0026FA  3573               	rlcf	(___fladd@b+3)& (0+255),w,b
  5900  0026FC  3373               	rrcf	(___fladd@b+3)& (0+255),f,b
  5901  0026FE  3372               	rrcf	(___fladd@b+2)& (0+255),f,b
  5902  002700  3371               	rrcf	(___fladd@b+1)& (0+255),f,b
  5903  002702  3370               	rrcf	___fladd@b& (0+255),f,b
  5904                           
  5905                           ; BSR set to: 0
  5906  002704  2B7E               	incf	___fladd@bexp& (0+255),f,b
  5907  002706  D05F               	goto	u6390
  5908  002708                     l5227:
  5909                           
  5910                           ; BSR set to: 0
  5911  002708  5174               	movf	___fladd@a& (0+255),w,b
  5912  00270A  5D70               	subwf	___fladd@b& (0+255),w,b
  5913  00270C  5175               	movf	(___fladd@a+1)& (0+255),w,b
  5914  00270E  5971               	subwfb	(___fladd@b+1)& (0+255),w,b
  5915  002710  5176               	movf	(___fladd@a+2)& (0+255),w,b
  5916  002712  5972               	subwfb	(___fladd@b+2)& (0+255),w,b
  5917  002714  5173               	movf	(___fladd@b+3)& (0+255),w,b
  5918  002716  0A80               	xorlw	128
  5919  002718  6F78               	movwf	??___fladd& (0+255),b
  5920  00271A  5177               	movf	(___fladd@a+3)& (0+255),w,b
  5921  00271C  0A80               	xorlw	128
  5922  00271E  5978               	subwfb	??___fladd& (0+255),w,b
  5923  002720  B0D8               	btfsc	status,0,c
  5924  002722  D025               	goto	l5237
  5925                           
  5926                           ; BSR set to: 0
  5927  002724  5170               	movf	___fladd@b& (0+255),w,b
  5928  002726  5D74               	subwf	___fladd@a& (0+255),w,b
  5929  002728  6F78               	movwf	??___fladd& (0+255),b
  5930  00272A  5171               	movf	(___fladd@b+1)& (0+255),w,b
  5931  00272C  5975               	subwfb	(___fladd@a+1)& (0+255),w,b
  5932  00272E  6F79               	movwf	(??___fladd+1)& (0+255),b
  5933  002730  5172               	movf	(___fladd@b+2)& (0+255),w,b
  5934  002732  5976               	subwfb	(___fladd@a+2)& (0+255),w,b
  5935  002734  6F7A               	movwf	(??___fladd+2)& (0+255),b
  5936  002736  5173               	movf	(___fladd@b+3)& (0+255),w,b
  5937  002738  5977               	subwfb	(___fladd@a+3)& (0+255),w,b
  5938  00273A  6F7B               	movwf	(??___fladd+3)& (0+255),b
  5939  00273C  0EFF               	movlw	255
  5940  00273E  2578               	addwf	??___fladd& (0+255),w,b
  5941  002740  6F70               	movwf	___fladd@b& (0+255),b
  5942  002742  0EFF               	movlw	255
  5943  002744  2179               	addwfc	(??___fladd+1)& (0+255),w,b
  5944  002746  6F71               	movwf	(___fladd@b+1)& (0+255),b
  5945  002748  0EFF               	movlw	255
  5946  00274A  217A               	addwfc	(??___fladd+2)& (0+255),w,b
  5947  00274C  6F72               	movwf	(___fladd@b+2)& (0+255),b
  5948  00274E  0EFF               	movlw	255
  5949  002750  217B               	addwfc	(??___fladd+3)& (0+255),w,b
  5950  002752  6F73               	movwf	(___fladd@b+3)& (0+255),b
  5951  002754  0E80               	movlw	128
  5952  002756  1B7C               	xorwf	___fladd@signs& (0+255),f,b
  5953                           
  5954                           ; BSR set to: 0
  5955  002758  6D7F               	negf	___fladd@grs& (0+255),b
  5956                           
  5957                           ; BSR set to: 0
  5958  00275A  517F               	movf	___fladd@grs& (0+255),w,b
  5959  00275C  A4D8               	btfss	status,2,c
  5960  00275E  D00F               	goto	l986
  5961                           
  5962                           ; BSR set to: 0
  5963  002760  0E01               	movlw	1
  5964  002762  2770               	addwf	___fladd@b& (0+255),f,b
  5965  002764  0E00               	movlw	0
  5966  002766  2371               	addwfc	(___fladd@b+1)& (0+255),f,b
  5967  002768  2372               	addwfc	(___fladd@b+2)& (0+255),f,b
  5968  00276A  2373               	addwfc	(___fladd@b+3)& (0+255),f,b
  5969  00276C  D008               	goto	l986
  5970  00276E                     l5237:
  5971                           
  5972                           ; BSR set to: 0
  5973  00276E  5174               	movf	___fladd@a& (0+255),w,b
  5974  002770  5F70               	subwf	___fladd@b& (0+255),f,b
  5975  002772  5175               	movf	(___fladd@a+1)& (0+255),w,b
  5976  002774  5B71               	subwfb	(___fladd@b+1)& (0+255),f,b
  5977  002776  5176               	movf	(___fladd@a+2)& (0+255),w,b
  5978  002778  5B72               	subwfb	(___fladd@b+2)& (0+255),f,b
  5979  00277A  5177               	movf	(___fladd@a+3)& (0+255),w,b
  5980  00277C  5B73               	subwfb	(___fladd@b+3)& (0+255),f,b
  5981  00277E                     l986:
  5982                           
  5983                           ; BSR set to: 0
  5984  00277E  5170               	movf	___fladd@b& (0+255),w,b
  5985  002780  1171               	iorwf	(___fladd@b+1)& (0+255),w,b
  5986  002782  1172               	iorwf	(___fladd@b+2)& (0+255),w,b
  5987  002784  1173               	iorwf	(___fladd@b+3)& (0+255),w,b
  5988  002786  A4D8               	btfss	status,2,c
  5989  002788  D01C               	goto	l5261
  5990                           
  5991                           ; BSR set to: 0
  5992  00278A  517F               	movf	___fladd@grs& (0+255),w,b
  5993  00278C  A4D8               	btfss	status,2,c
  5994  00278E  D019               	goto	l5261
  5995                           
  5996                           ; BSR set to: 0
  5997  002790  0E00               	movlw	0
  5998  002792  6F70               	movwf	?___fladd& (0+255),b
  5999  002794  0E00               	movlw	0
  6000  002796  6F71               	movwf	(?___fladd+1)& (0+255),b
  6001  002798  0E00               	movlw	0
  6002  00279A  6F72               	movwf	(?___fladd+2)& (0+255),b
  6003  00279C  0E00               	movlw	0
  6004  00279E  6F73               	movwf	(?___fladd+3)& (0+255),b
  6005  0027A0  0012               	return	
  6006  0027A2                     l5245:
  6007                           
  6008                           ; BSR set to: 0
  6009  0027A2  90D8               	bcf	status,0,c
  6010  0027A4  3770               	rlcf	___fladd@b& (0+255),f,b
  6011  0027A6  3771               	rlcf	(___fladd@b+1)& (0+255),f,b
  6012  0027A8  3772               	rlcf	(___fladd@b+2)& (0+255),f,b
  6013  0027AA  3773               	rlcf	(___fladd@b+3)& (0+255),f,b
  6014                           
  6015                           ; BSR set to: 0
  6016  0027AC  BF7F               	btfsc	___fladd@grs& (0+255),7,b
  6017                           
  6018                           ; BSR set to: 0
  6019  0027AE  8170               	bsf	___fladd@b& (0+255),0,b
  6020                           
  6021                           ; BSR set to: 0
  6022  0027B0  A17F               	btfss	___fladd@grs& (0+255),0,b
  6023  0027B2  D002               	goto	l5255
  6024                           
  6025                           ; BSR set to: 0
  6026  0027B4  80D8               	bsf	status,0,c
  6027  0027B6  D001               	goto	L9
  6028  0027B8                     l5255:
  6029                           
  6030                           ; BSR set to: 0
  6031  0027B8  90D8               	bcf	status,0,c
  6032  0027BA                     L9:
  6033  0027BA  377F               	rlcf	___fladd@grs& (0+255),f,b
  6034                           
  6035                           ; BSR set to: 0
  6036  0027BC  517E               	movf	___fladd@bexp& (0+255),w,b
  6037  0027BE  A4D8               	btfss	status,2,c
  6038                           
  6039                           ; BSR set to: 0
  6040  0027C0  077E               	decf	___fladd@bexp& (0+255),f,b
  6041  0027C2                     l5261:
  6042                           
  6043                           ; BSR set to: 0
  6044  0027C2  AF72               	btfss	(___fladd@b+2)& (0+255),7,b
  6045  0027C4  D7EE               	goto	l5245
  6046  0027C6                     u6390:
  6047                           
  6048                           ; BSR set to: 0
  6049  0027C6  0E00               	movlw	0
  6050  0027C8  6F7D               	movwf	___fladd@aexp& (0+255),b
  6051                           
  6052                           ; BSR set to: 0
  6053  0027CA  AF7F               	btfss	___fladd@grs& (0+255),7,b
  6054  0027CC  D00B               	goto	l995
  6055                           
  6056                           ; BSR set to: 0
  6057  0027CE  C07F  F078         	movff	___fladd@grs,??___fladd
  6058  0027D2  0E7F               	movlw	127
  6059  0027D4  1778               	andwf	??___fladd& (0+255),f,b
  6060  0027D6  B4D8               	btfsc	status,2,c
  6061  0027D8  D003               	goto	l996
  6062  0027DA                     u6410:
  6063                           
  6064                           ; BSR set to: 0
  6065  0027DA  0E01               	movlw	1
  6066  0027DC  6F7D               	movwf	___fladd@aexp& (0+255),b
  6067  0027DE  D002               	goto	l995
  6068  0027E0                     l996:
  6069                           
  6070                           ; BSR set to: 0
  6071  0027E0  B170               	btfsc	___fladd@b& (0+255),0,b
  6072  0027E2  D7FB               	goto	u6410
  6073  0027E4                     l995:
  6074                           
  6075                           ; BSR set to: 0
  6076  0027E4  517D               	movf	___fladd@aexp& (0+255),w,b
  6077  0027E6  B4D8               	btfsc	status,2,c
  6078  0027E8  D020               	goto	l5281
  6079                           
  6080                           ; BSR set to: 0
  6081  0027EA  0E01               	movlw	1
  6082  0027EC  2770               	addwf	___fladd@b& (0+255),f,b
  6083  0027EE  0E00               	movlw	0
  6084  0027F0  2371               	addwfc	(___fladd@b+1)& (0+255),f,b
  6085  0027F2  2372               	addwfc	(___fladd@b+2)& (0+255),f,b
  6086  0027F4  2373               	addwfc	(___fladd@b+3)& (0+255),f,b
  6087                           
  6088                           ; BSR set to: 0
  6089  0027F6  A173               	btfss	(___fladd@b+3)& (0+255),0,b
  6090  0027F8  D018               	goto	l5281
  6091                           
  6092                           ; BSR set to: 0
  6093  0027FA  C070  F078         	movff	___fladd@b,??___fladd
  6094  0027FE  C071  F079         	movff	___fladd@b+1,??___fladd+1
  6095  002802  C072  F07A         	movff	___fladd@b+2,??___fladd+2
  6096  002806  C073  F07B         	movff	___fladd@b+3,??___fladd+3
  6097  00280A  357B               	rlcf	(??___fladd+3)& (0+255),w,b
  6098  00280C  337B               	rrcf	(??___fladd+3)& (0+255),f,b
  6099  00280E  337A               	rrcf	(??___fladd+2)& (0+255),f,b
  6100  002810  3379               	rrcf	(??___fladd+1)& (0+255),f,b
  6101  002812  3378               	rrcf	??___fladd& (0+255),f,b
  6102  002814  C078  F070         	movff	??___fladd,___fladd@b
  6103  002818  C079  F071         	movff	??___fladd+1,___fladd@b+1
  6104  00281C  C07A  F072         	movff	??___fladd+2,___fladd@b+2
  6105  002820  C07B  F073         	movff	??___fladd+3,___fladd@b+3
  6106  002824  297E               	incf	___fladd@bexp& (0+255),w,b
  6107  002826  A4D8               	btfss	status,2,c
  6108                           
  6109                           ; BSR set to: 0
  6110  002828  2B7E               	incf	___fladd@bexp& (0+255),f,b
  6111  00282A                     l5281:
  6112                           
  6113                           ; BSR set to: 0
  6114  00282A  297E               	incf	___fladd@bexp& (0+255),w,b
  6115  00282C  B4D8               	btfsc	status,2,c
  6116  00282E  D003               	goto	u6470
  6117                           
  6118                           ; BSR set to: 0
  6119  002830  517E               	movf	___fladd@bexp& (0+255),w,b
  6120  002832  A4D8               	btfss	status,2,c
  6121  002834  D00D               	goto	l5289
  6122  002836                     u6470:
  6123                           
  6124                           ; BSR set to: 0
  6125  002836  0E00               	movlw	0
  6126  002838  6F70               	movwf	___fladd@b& (0+255),b
  6127  00283A  0E00               	movlw	0
  6128  00283C  6F71               	movwf	(___fladd@b+1)& (0+255),b
  6129  00283E  0E00               	movlw	0
  6130  002840  6F72               	movwf	(___fladd@b+2)& (0+255),b
  6131  002842  0E00               	movlw	0
  6132  002844  6F73               	movwf	(___fladd@b+3)& (0+255),b
  6133  002846  517E               	movf	___fladd@bexp& (0+255),w,b
  6134  002848  A4D8               	btfss	status,2,c
  6135  00284A  D002               	goto	l5289
  6136                           
  6137                           ; BSR set to: 0
  6138  00284C  0E00               	movlw	0
  6139  00284E  6F7C               	movwf	___fladd@signs& (0+255),b
  6140  002850                     l5289:
  6141                           
  6142                           ; BSR set to: 0
  6143  002850  A17E               	btfss	___fladd@bexp& (0+255),0,b
  6144  002852  D002               	goto	l5293
  6145                           
  6146                           ; BSR set to: 0
  6147  002854  8F72               	bsf	(___fladd@b+2)& (0+255),7,b
  6148  002856  D001               	goto	l5295
  6149  002858                     l5293:
  6150                           
  6151                           ; BSR set to: 0
  6152  002858  9F72               	bcf	(___fladd@b+2)& (0+255),7,b
  6153  00285A                     l5295:
  6154                           
  6155                           ; BSR set to: 0
  6156  00285A  90D8               	bcf	status,0,c
  6157  00285C  317E               	rrcf	___fladd@bexp& (0+255),w,b
  6158  00285E  6F73               	movwf	(___fladd@b+3)& (0+255),b
  6159                           
  6160                           ; BSR set to: 0
  6161  002860  BF7C               	btfsc	___fladd@signs& (0+255),7,b
  6162                           
  6163                           ; BSR set to: 0
  6164  002862  8F73               	bsf	(___fladd@b+3)& (0+255),7,b
  6165                           
  6166                           ; BSR set to: 0
  6167  002864  C070  F070         	movff	___fladd@b,?___fladd
  6168  002868  C071  F071         	movff	___fladd@b+1,?___fladd+1
  6169  00286C  C072  F072         	movff	___fladd@b+2,?___fladd+2
  6170  002870  C073  F073         	movff	___fladd@b+3,?___fladd+3
  6171                           
  6172                           ; BSR set to: 0
  6173  002874  0012               	return		;funcret
  6174  002876                     __end_of___fladd:
  6175                           	opt callstack 0
  6176                           
  6177 ;; *************** function ___flneg *****************
  6178 ;; Defined at:
  6179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  f1              4   16[BANK0 ] unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  4   16[BANK0 ] unsigned char 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;Total ram usage:        4 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    4
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_efgtoa
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text17
  6208  00403A                     __ptext17:
  6209                           	opt callstack 0
  6210  00403A                     ___flneg:
  6211                           	opt callstack 22
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;incstack = 0
  6215  00403A  0100               	movlb	0	; () banked
  6216  00403C  5170               	movf	___flneg@f1& (0+255),w,b
  6217  00403E  1171               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6218  004040  1172               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6219  004042  1173               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6220  004044  B4D8               	btfsc	status,2,c
  6221  004046  D008               	goto	l5797
  6222                           
  6223                           ; BSR set to: 0
  6224  004048  0E00               	movlw	0
  6225  00404A  1B70               	xorwf	___flneg@f1& (0+255),f,b
  6226  00404C  0E00               	movlw	0
  6227  00404E  1B71               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6228  004050  0E00               	movlw	0
  6229  004052  1B72               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6230  004054  0E80               	movlw	128
  6231  004056  1B73               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6232  004058                     l5797:
  6233                           
  6234                           ; BSR set to: 0
  6235  004058  C070  F070         	movff	___flneg@f1,?___flneg
  6236  00405C  C071  F071         	movff	___flneg@f1+1,?___flneg+1
  6237  004060  C072  F072         	movff	___flneg@f1+2,?___flneg+2
  6238  004064  C073  F073         	movff	___flneg@f1+3,?___flneg+3
  6239                           
  6240                           ; BSR set to: 0
  6241  004068  0012               	return		;funcret
  6242  00406A                     __end_of___flneg:
  6243                           	opt callstack 0
  6244                           
  6245 ;; *************** function ___flmul *****************
  6246 ;; Defined at:
  6247 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  b               4   30[BANK0 ] unsigned char 
  6250 ;;  a               4   34[BANK0 ] unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  prod            4   49[BANK0 ] struct .
  6253 ;;  grs             4   44[BANK0 ] unsigned long 
  6254 ;;  temp            2   53[BANK0 ] struct .
  6255 ;;  bexp            1   48[BANK0 ] unsigned char 
  6256 ;;  aexp            1   43[BANK0 ] unsigned char 
  6257 ;;  sign            1   42[BANK0 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  4   30[BANK0 ] unsigned char 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0, prodl, prodh
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6267 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;Total ram usage:       25 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    4
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;;		_efgtoa
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text18
  6283  002214                     __ptext18:
  6284                           	opt callstack 0
  6285  002214                     ___flmul:
  6286                           	opt callstack 22
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;incstack = 0
  6290  002214  0100               	movlb	0	; () banked
  6291  002216  5181               	movf	(___flmul@b+3)& (0+255),w,b
  6292  002218  0B80               	andlw	128
  6293  00221A  6F8A               	movwf	___flmul@sign& (0+255),b
  6294  00221C  5181               	movf	(___flmul@b+3)& (0+255),w,b
  6295  00221E  2581               	addwf	(___flmul@b+3)& (0+255),w,b
  6296  002220  6F90               	movwf	___flmul@bexp& (0+255),b
  6297                           
  6298                           ; BSR set to: 0
  6299  002222  BF80               	btfsc	(___flmul@b+2)& (0+255),7,b
  6300                           
  6301                           ; BSR set to: 0
  6302  002224  8190               	bsf	___flmul@bexp& (0+255),0,b
  6303                           
  6304                           ; BSR set to: 0
  6305  002226  5190               	movf	___flmul@bexp& (0+255),w,b
  6306  002228  B4D8               	btfsc	status,2,c
  6307  00222A  D00D               	goto	l5553
  6308                           
  6309                           ; BSR set to: 0
  6310  00222C  2990               	incf	___flmul@bexp& (0+255),w,b
  6311  00222E  A4D8               	btfss	status,2,c
  6312  002230  D008               	goto	l5551
  6313                           
  6314                           ; BSR set to: 0
  6315  002232  0E00               	movlw	0
  6316  002234  6F7E               	movwf	___flmul@b& (0+255),b
  6317  002236  0E00               	movlw	0
  6318  002238  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  6319  00223A  0E00               	movlw	0
  6320  00223C  6F80               	movwf	(___flmul@b+2)& (0+255),b
  6321  00223E  0E00               	movlw	0
  6322  002240  6F81               	movwf	(___flmul@b+3)& (0+255),b
  6323  002242                     l5551:
  6324                           
  6325                           ; BSR set to: 0
  6326  002242  8F80               	bsf	(___flmul@b+2)& (0+255),7,b
  6327  002244  D008               	goto	l5555
  6328  002246                     l5553:
  6329                           
  6330                           ; BSR set to: 0
  6331  002246  0E00               	movlw	0
  6332  002248  6F7E               	movwf	___flmul@b& (0+255),b
  6333  00224A  0E00               	movlw	0
  6334  00224C  6F7F               	movwf	(___flmul@b+1)& (0+255),b
  6335  00224E  0E00               	movlw	0
  6336  002250  6F80               	movwf	(___flmul@b+2)& (0+255),b
  6337  002252  0E00               	movlw	0
  6338  002254  6F81               	movwf	(___flmul@b+3)& (0+255),b
  6339  002256                     l5555:
  6340                           
  6341                           ; BSR set to: 0
  6342  002256  5185               	movf	(___flmul@a+3)& (0+255),w,b
  6343  002258  0B80               	andlw	128
  6344  00225A  1B8A               	xorwf	___flmul@sign& (0+255),f,b
  6345                           
  6346                           ; BSR set to: 0
  6347  00225C  5185               	movf	(___flmul@a+3)& (0+255),w,b
  6348  00225E  2585               	addwf	(___flmul@a+3)& (0+255),w,b
  6349  002260  6F8B               	movwf	___flmul@aexp& (0+255),b
  6350                           
  6351                           ; BSR set to: 0
  6352  002262  BF84               	btfsc	(___flmul@a+2)& (0+255),7,b
  6353                           
  6354                           ; BSR set to: 0
  6355  002264  818B               	bsf	___flmul@aexp& (0+255),0,b
  6356                           
  6357                           ; BSR set to: 0
  6358  002266  518B               	movf	___flmul@aexp& (0+255),w,b
  6359  002268  B4D8               	btfsc	status,2,c
  6360  00226A  D00D               	goto	l5571
  6361                           
  6362                           ; BSR set to: 0
  6363  00226C  298B               	incf	___flmul@aexp& (0+255),w,b
  6364  00226E  A4D8               	btfss	status,2,c
  6365  002270  D008               	goto	l5569
  6366                           
  6367                           ; BSR set to: 0
  6368  002272  0E00               	movlw	0
  6369  002274  6F82               	movwf	___flmul@a& (0+255),b
  6370  002276  0E00               	movlw	0
  6371  002278  6F83               	movwf	(___flmul@a+1)& (0+255),b
  6372  00227A  0E00               	movlw	0
  6373  00227C  6F84               	movwf	(___flmul@a+2)& (0+255),b
  6374  00227E  0E00               	movlw	0
  6375  002280  6F85               	movwf	(___flmul@a+3)& (0+255),b
  6376  002282                     l5569:
  6377                           
  6378                           ; BSR set to: 0
  6379  002282  8F84               	bsf	(___flmul@a+2)& (0+255),7,b
  6380  002284  D008               	goto	l1055
  6381  002286                     l5571:
  6382                           
  6383                           ; BSR set to: 0
  6384  002286  0E00               	movlw	0
  6385  002288  6F82               	movwf	___flmul@a& (0+255),b
  6386  00228A  0E00               	movlw	0
  6387  00228C  6F83               	movwf	(___flmul@a+1)& (0+255),b
  6388  00228E  0E00               	movlw	0
  6389  002290  6F84               	movwf	(___flmul@a+2)& (0+255),b
  6390  002292  0E00               	movlw	0
  6391  002294  6F85               	movwf	(___flmul@a+3)& (0+255),b
  6392  002296                     l1055:
  6393                           
  6394                           ; BSR set to: 0
  6395  002296  518B               	movf	___flmul@aexp& (0+255),w,b
  6396  002298  B4D8               	btfsc	status,2,c
  6397  00229A  D003               	goto	u7090
  6398                           
  6399                           ; BSR set to: 0
  6400  00229C  5190               	movf	___flmul@bexp& (0+255),w,b
  6401  00229E  A4D8               	btfss	status,2,c
  6402  0022A0  D009               	goto	l5579
  6403  0022A2                     u7090:
  6404                           
  6405                           ; BSR set to: 0
  6406  0022A2  0E00               	movlw	0
  6407  0022A4  6F7E               	movwf	?___flmul& (0+255),b
  6408  0022A6  0E00               	movlw	0
  6409  0022A8  6F7F               	movwf	(?___flmul+1)& (0+255),b
  6410  0022AA  0E00               	movlw	0
  6411  0022AC  6F80               	movwf	(?___flmul+2)& (0+255),b
  6412  0022AE  0E00               	movlw	0
  6413  0022B0  6F81               	movwf	(?___flmul+3)& (0+255),b
  6414  0022B2  0012               	return	
  6415  0022B4                     l5579:
  6416                           
  6417                           ; BSR set to: 0
  6418  0022B4  5184               	movf	(___flmul@a+2)& (0+255),w,b
  6419  0022B6  037E               	mulwf	___flmul@b& (0+255),b
  6420  0022B8  CFF3 F095          	movff	prodl,___flmul@temp
  6421  0022BC  CFF4 F096          	movff	prodh,___flmul@temp+1
  6422                           
  6423                           ; BSR set to: 0
  6424  0022C0  5195               	movf	___flmul@temp& (0+255),w,b
  6425  0022C2  6F8C               	movwf	___flmul@grs& (0+255),b
  6426  0022C4  6B8D               	clrf	(___flmul@grs+1)& (0+255),b
  6427  0022C6  6B8E               	clrf	(___flmul@grs+2)& (0+255),b
  6428  0022C8  6B8F               	clrf	(___flmul@grs+3)& (0+255),b
  6429                           
  6430                           ; BSR set to: 0
  6431  0022CA  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6432  0022CC  6F91               	movwf	___flmul@prod& (0+255),b
  6433  0022CE  6B92               	clrf	(___flmul@prod+1)& (0+255),b
  6434  0022D0  6B93               	clrf	(___flmul@prod+2)& (0+255),b
  6435  0022D2  6B94               	clrf	(___flmul@prod+3)& (0+255),b
  6436  0022D4  5183               	movf	(___flmul@a+1)& (0+255),w,b
  6437  0022D6  037F               	mulwf	(___flmul@b+1)& (0+255),b
  6438  0022D8  CFF3 F095          	movff	prodl,___flmul@temp
  6439  0022DC  CFF4 F096          	movff	prodh,___flmul@temp+1
  6440                           
  6441                           ; BSR set to: 0
  6442  0022E0  5195               	movf	___flmul@temp& (0+255),w,b
  6443  0022E2  278C               	addwf	___flmul@grs& (0+255),f,b
  6444  0022E4  0E00               	movlw	0
  6445  0022E6  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6446  0022E8  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6447  0022EA  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6448                           
  6449                           ; BSR set to: 0
  6450  0022EC  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6451  0022EE  2791               	addwf	___flmul@prod& (0+255),f,b
  6452  0022F0  0E00               	movlw	0
  6453  0022F2  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6454  0022F4  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6455  0022F6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6456  0022F8  5182               	movf	___flmul@a& (0+255),w,b
  6457  0022FA  0380               	mulwf	(___flmul@b+2)& (0+255),b
  6458  0022FC  CFF3 F095          	movff	prodl,___flmul@temp
  6459  002300  CFF4 F096          	movff	prodh,___flmul@temp+1
  6460                           
  6461                           ; BSR set to: 0
  6462  002304  5195               	movf	___flmul@temp& (0+255),w,b
  6463  002306  278C               	addwf	___flmul@grs& (0+255),f,b
  6464  002308  0E00               	movlw	0
  6465  00230A  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6466  00230C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6467  00230E  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6468                           
  6469                           ; BSR set to: 0
  6470  002310  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6471  002312  2791               	addwf	___flmul@prod& (0+255),f,b
  6472  002314  0E00               	movlw	0
  6473  002316  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6474  002318  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6475  00231A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6476                           
  6477                           ; BSR set to: 0
  6478  00231C  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  6479  002320  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  6480  002324  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  6481  002328  6B8C               	clrf	___flmul@grs& (0+255),b
  6482                           
  6483                           ; BSR set to: 0
  6484  00232A  5182               	movf	___flmul@a& (0+255),w,b
  6485  00232C  037F               	mulwf	(___flmul@b+1)& (0+255),b
  6486  00232E  CFF3 F095          	movff	prodl,___flmul@temp
  6487  002332  CFF4 F096          	movff	prodh,___flmul@temp+1
  6488                           
  6489                           ; BSR set to: 0
  6490  002336  5195               	movf	___flmul@temp& (0+255),w,b
  6491  002338  278C               	addwf	___flmul@grs& (0+255),f,b
  6492  00233A  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6493  00233C  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6494  00233E  0E00               	movlw	0
  6495  002340  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6496  002342  0E00               	movlw	0
  6497  002344  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6498                           
  6499                           ; BSR set to: 0
  6500  002346  5183               	movf	(___flmul@a+1)& (0+255),w,b
  6501  002348  037E               	mulwf	___flmul@b& (0+255),b
  6502  00234A  CFF3 F095          	movff	prodl,___flmul@temp
  6503  00234E  CFF4 F096          	movff	prodh,___flmul@temp+1
  6504                           
  6505                           ; BSR set to: 0
  6506  002352  5195               	movf	___flmul@temp& (0+255),w,b
  6507  002354  278C               	addwf	___flmul@grs& (0+255),f,b
  6508  002356  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6509  002358  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6510  00235A  0E00               	movlw	0
  6511  00235C  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6512  00235E  0E00               	movlw	0
  6513  002360  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6514                           
  6515                           ; BSR set to: 0
  6516  002362  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  6517  002366  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  6518  00236A  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  6519  00236E  6B8C               	clrf	___flmul@grs& (0+255),b
  6520  002370  5182               	movf	___flmul@a& (0+255),w,b
  6521  002372  037E               	mulwf	___flmul@b& (0+255),b
  6522  002374  CFF3 F095          	movff	prodl,___flmul@temp
  6523  002378  CFF4 F096          	movff	prodh,___flmul@temp+1
  6524                           
  6525                           ; BSR set to: 0
  6526  00237C  5195               	movf	___flmul@temp& (0+255),w,b
  6527  00237E  278C               	addwf	___flmul@grs& (0+255),f,b
  6528  002380  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6529  002382  238D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6530  002384  0E00               	movlw	0
  6531  002386  238E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6532  002388  0E00               	movlw	0
  6533  00238A  238F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6534                           
  6535                           ; BSR set to: 0
  6536  00238C  5184               	movf	(___flmul@a+2)& (0+255),w,b
  6537  00238E  037F               	mulwf	(___flmul@b+1)& (0+255),b
  6538  002390  CFF3 F095          	movff	prodl,___flmul@temp
  6539  002394  CFF4 F096          	movff	prodh,___flmul@temp+1
  6540  002398  5195               	movf	___flmul@temp& (0+255),w,b
  6541  00239A  2791               	addwf	___flmul@prod& (0+255),f,b
  6542  00239C  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6543  00239E  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6544  0023A0  0E00               	movlw	0
  6545  0023A2  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6546  0023A4  0E00               	movlw	0
  6547  0023A6  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6548                           
  6549                           ; BSR set to: 0
  6550  0023A8  5183               	movf	(___flmul@a+1)& (0+255),w,b
  6551  0023AA  0380               	mulwf	(___flmul@b+2)& (0+255),b
  6552  0023AC  CFF3 F095          	movff	prodl,___flmul@temp
  6553  0023B0  CFF4 F096          	movff	prodh,___flmul@temp+1
  6554                           
  6555                           ; BSR set to: 0
  6556  0023B4  5195               	movf	___flmul@temp& (0+255),w,b
  6557  0023B6  2791               	addwf	___flmul@prod& (0+255),f,b
  6558  0023B8  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6559  0023BA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6560  0023BC  0E00               	movlw	0
  6561  0023BE  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6562  0023C0  0E00               	movlw	0
  6563  0023C2  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6564  0023C4  5184               	movf	(___flmul@a+2)& (0+255),w,b
  6565  0023C6  0380               	mulwf	(___flmul@b+2)& (0+255),b
  6566  0023C8  CFF3 F095          	movff	prodl,___flmul@temp
  6567  0023CC  CFF4 F096          	movff	prodh,___flmul@temp+1
  6568                           
  6569                           ; BSR set to: 0
  6570  0023D0  5195               	movf	___flmul@temp& (0+255),w,b
  6571  0023D2  6F86               	movwf	??___flmul& (0+255),b
  6572  0023D4  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6573  0023D6  6F87               	movwf	(??___flmul+1)& (0+255),b
  6574  0023D8  6B88               	clrf	(??___flmul+2)& (0+255),b
  6575  0023DA  6B89               	clrf	(??___flmul+3)& (0+255),b
  6576  0023DC  C088  F089         	movff	??___flmul+2,??___flmul+3
  6577  0023E0  C087  F088         	movff	??___flmul+1,??___flmul+2
  6578  0023E4  C086  F087         	movff	??___flmul,??___flmul+1
  6579  0023E8  6B86               	clrf	??___flmul& (0+255),b
  6580  0023EA  5186               	movf	??___flmul& (0+255),w,b
  6581  0023EC  2791               	addwf	___flmul@prod& (0+255),f,b
  6582  0023EE  5187               	movf	(??___flmul+1)& (0+255),w,b
  6583  0023F0  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6584  0023F2  5188               	movf	(??___flmul+2)& (0+255),w,b
  6585  0023F4  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6586  0023F6  5189               	movf	(??___flmul+3)& (0+255),w,b
  6587  0023F8  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6588                           
  6589                           ; BSR set to: 0
  6590  0023FA  C08C  F086         	movff	___flmul@grs,??___flmul
  6591  0023FE  C08D  F087         	movff	___flmul@grs+1,??___flmul+1
  6592  002402  C08E  F088         	movff	___flmul@grs+2,??___flmul+2
  6593  002406  C08F  F089         	movff	___flmul@grs+3,??___flmul+3
  6594  00240A  0E19               	movlw	25
  6595  00240C  D005               	goto	u7100
  6596  00240E                     u7105:
  6597  00240E  90D8               	bcf	status,0,c
  6598  002410  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  6599  002412  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  6600  002414  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  6601  002416  3386               	rrcf	??___flmul& (0+255),f,b
  6602  002418                     u7100:
  6603  002418  2EE8               	decfsz	wreg,f,c
  6604  00241A  D7F9               	goto	u7105
  6605  00241C  5186               	movf	??___flmul& (0+255),w,b
  6606  00241E  2791               	addwf	___flmul@prod& (0+255),f,b
  6607  002420  5187               	movf	(??___flmul+1)& (0+255),w,b
  6608  002422  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6609  002424  5188               	movf	(??___flmul+2)& (0+255),w,b
  6610  002426  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6611  002428  5189               	movf	(??___flmul+3)& (0+255),w,b
  6612  00242A  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  00242C  C08E  F08F         	movff	___flmul@grs+2,___flmul@grs+3
  6616  002430  C08D  F08E         	movff	___flmul@grs+1,___flmul@grs+2
  6617  002434  C08C  F08D         	movff	___flmul@grs,___flmul@grs+1
  6618  002438  6B8C               	clrf	___flmul@grs& (0+255),b
  6619                           
  6620                           ; BSR set to: 0
  6621  00243A  518B               	movf	___flmul@aexp& (0+255),w,b
  6622  00243C  C090  F086         	movff	___flmul@bexp,??___flmul
  6623  002440  6B87               	clrf	(??___flmul+1)& (0+255),b
  6624  002442  2786               	addwf	??___flmul& (0+255),f,b
  6625  002444  0E00               	movlw	0
  6626  002446  2387               	addwfc	(??___flmul+1)& (0+255),f,b
  6627  002448  0E82               	movlw	130
  6628  00244A  2586               	addwf	??___flmul& (0+255),w,b
  6629  00244C  6F95               	movwf	___flmul@temp& (0+255),b
  6630  00244E  0EFF               	movlw	255
  6631  002450  2187               	addwfc	(??___flmul+1)& (0+255),w,b
  6632  002452  6F96               	movwf	(___flmul@temp+1)& (0+255),b
  6633  002454  D00F               	goto	l5627
  6634  002456                     l5621:
  6635                           
  6636                           ; BSR set to: 0
  6637  002456  90D8               	bcf	status,0,c
  6638  002458  3791               	rlcf	___flmul@prod& (0+255),f,b
  6639  00245A  3792               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6640  00245C  3793               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6641  00245E  3794               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6642                           
  6643                           ; BSR set to: 0
  6644  002460  BF8F               	btfsc	(___flmul@grs+3)& (0+255),7,b
  6645                           
  6646                           ; BSR set to: 0
  6647  002462  8191               	bsf	___flmul@prod& (0+255),0,b
  6648                           
  6649                           ; BSR set to: 0
  6650  002464  90D8               	bcf	status,0,c
  6651  002466  378C               	rlcf	___flmul@grs& (0+255),f,b
  6652  002468  378D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6653  00246A  378E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6654  00246C  378F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6655  00246E  0795               	decf	___flmul@temp& (0+255),f,b
  6656  002470  A0D8               	btfss	status,0,c
  6657  002472  0796               	decf	(___flmul@temp+1)& (0+255),f,b
  6658  002474                     l5627:
  6659                           
  6660                           ; BSR set to: 0
  6661  002474  AF93               	btfss	(___flmul@prod+2)& (0+255),7,b
  6662  002476  D7EF               	goto	l5621
  6663                           
  6664                           ; BSR set to: 0
  6665  002478  0E00               	movlw	0
  6666  00247A  6F8B               	movwf	___flmul@aexp& (0+255),b
  6667                           
  6668                           ; BSR set to: 0
  6669  00247C  AF8F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6670  00247E  D017               	goto	l1064
  6671                           
  6672                           ; BSR set to: 0
  6673  002480  0EFF               	movlw	255
  6674  002482  158C               	andwf	___flmul@grs& (0+255),w,b
  6675  002484  6F86               	movwf	??___flmul& (0+255),b
  6676  002486  0EFF               	movlw	255
  6677  002488  158D               	andwf	(___flmul@grs+1)& (0+255),w,b
  6678  00248A  6F87               	movwf	(??___flmul+1)& (0+255),b
  6679  00248C  0EFF               	movlw	255
  6680  00248E  158E               	andwf	(___flmul@grs+2)& (0+255),w,b
  6681  002490  6F88               	movwf	(??___flmul+2)& (0+255),b
  6682  002492  0E7F               	movlw	127
  6683  002494  158F               	andwf	(___flmul@grs+3)& (0+255),w,b
  6684  002496  6F89               	movwf	(??___flmul+3)& (0+255),b
  6685  002498  5186               	movf	??___flmul& (0+255),w,b
  6686  00249A  1187               	iorwf	(??___flmul+1)& (0+255),w,b
  6687  00249C  1188               	iorwf	(??___flmul+2)& (0+255),w,b
  6688  00249E  1189               	iorwf	(??___flmul+3)& (0+255),w,b
  6689  0024A0  B4D8               	btfsc	status,2,c
  6690  0024A2  D003               	goto	l1065
  6691  0024A4                     u7140:
  6692                           
  6693                           ; BSR set to: 0
  6694  0024A4  0E01               	movlw	1
  6695  0024A6  6F8B               	movwf	___flmul@aexp& (0+255),b
  6696  0024A8  D002               	goto	l1064
  6697  0024AA                     l1065:
  6698                           
  6699                           ; BSR set to: 0
  6700  0024AA  B191               	btfsc	___flmul@prod& (0+255),0,b
  6701  0024AC  D7FB               	goto	u7140
  6702  0024AE                     l1064:
  6703                           
  6704                           ; BSR set to: 0
  6705  0024AE  518B               	movf	___flmul@aexp& (0+255),w,b
  6706  0024B0  B4D8               	btfsc	status,2,c
  6707  0024B2  D01F               	goto	l5647
  6708                           
  6709                           ; BSR set to: 0
  6710  0024B4  0E01               	movlw	1
  6711  0024B6  2791               	addwf	___flmul@prod& (0+255),f,b
  6712  0024B8  0E00               	movlw	0
  6713  0024BA  2392               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6714  0024BC  2393               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6715  0024BE  2394               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6716                           
  6717                           ; BSR set to: 0
  6718  0024C0  A194               	btfss	(___flmul@prod+3)& (0+255),0,b
  6719  0024C2  D017               	goto	l5647
  6720                           
  6721                           ; BSR set to: 0
  6722  0024C4  C091  F086         	movff	___flmul@prod,??___flmul
  6723  0024C8  C092  F087         	movff	___flmul@prod+1,??___flmul+1
  6724  0024CC  C093  F088         	movff	___flmul@prod+2,??___flmul+2
  6725  0024D0  C094  F089         	movff	___flmul@prod+3,??___flmul+3
  6726  0024D4  3589               	rlcf	(??___flmul+3)& (0+255),w,b
  6727  0024D6  3389               	rrcf	(??___flmul+3)& (0+255),f,b
  6728  0024D8  3388               	rrcf	(??___flmul+2)& (0+255),f,b
  6729  0024DA  3387               	rrcf	(??___flmul+1)& (0+255),f,b
  6730  0024DC  3386               	rrcf	??___flmul& (0+255),f,b
  6731  0024DE  C086  F091         	movff	??___flmul,___flmul@prod
  6732  0024E2  C087  F092         	movff	??___flmul+1,___flmul@prod+1
  6733  0024E6  C088  F093         	movff	??___flmul+2,___flmul@prod+2
  6734  0024EA  C089  F094         	movff	??___flmul+3,___flmul@prod+3
  6735                           
  6736                           ; BSR set to: 0
  6737  0024EE  4B95               	infsnz	___flmul@temp& (0+255),f,b
  6738  0024F0  2B96               	incf	(___flmul@temp+1)& (0+255),f,b
  6739  0024F2                     l5647:
  6740                           
  6741                           ; BSR set to: 0
  6742  0024F2  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6743  0024F4  D00D               	goto	l5651
  6744  0024F6  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6745  0024F8  E103               	bnz	u7180
  6746  0024FA  2995               	incf	___flmul@temp& (0+255),w,b
  6747  0024FC  A0D8               	btfss	status,0,c
  6748  0024FE  D008               	goto	l5651
  6749  002500                     u7180:
  6750                           
  6751                           ; BSR set to: 0
  6752  002500  0E00               	movlw	0
  6753  002502  6F91               	movwf	___flmul@prod& (0+255),b
  6754  002504  0E00               	movlw	0
  6755  002506  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  6756  002508  0E80               	movlw	128
  6757  00250A  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  6758  00250C  0E7F               	movlw	127
  6759  00250E  D020               	goto	L10
  6760  002510                     l5651:
  6761                           
  6762                           ; BSR set to: 0
  6763  002510  BF96               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6764  002512  D005               	goto	u7190
  6765  002514  5196               	movf	(___flmul@temp+1)& (0+255),w,b
  6766  002516  E10E               	bnz	l1072
  6767  002518  0595               	decf	___flmul@temp& (0+255),w,b
  6768  00251A  B0D8               	btfsc	status,0,c
  6769  00251C  D00B               	goto	l1072
  6770  00251E                     u7190:
  6771                           
  6772                           ; BSR set to: 0
  6773  00251E  0E00               	movlw	0
  6774  002520  6F91               	movwf	___flmul@prod& (0+255),b
  6775  002522  0E00               	movlw	0
  6776  002524  6F92               	movwf	(___flmul@prod+1)& (0+255),b
  6777  002526  0E00               	movlw	0
  6778  002528  6F93               	movwf	(___flmul@prod+2)& (0+255),b
  6779  00252A  0E00               	movlw	0
  6780  00252C  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6781  00252E  0E00               	movlw	0
  6782  002530  6F8A               	movwf	___flmul@sign& (0+255),b
  6783  002532  D00F               	goto	l5663
  6784  002534                     l1072:
  6785                           
  6786                           ; BSR set to: 0
  6787  002534  C095  F090         	movff	___flmul@temp,___flmul@bexp
  6788                           
  6789                           ; BSR set to: 0
  6790  002538  0EFF               	movlw	255
  6791  00253A  1791               	andwf	___flmul@prod& (0+255),f,b
  6792  00253C  0EFF               	movlw	255
  6793  00253E  1792               	andwf	(___flmul@prod+1)& (0+255),f,b
  6794  002540  0E7F               	movlw	127
  6795  002542  1793               	andwf	(___flmul@prod+2)& (0+255),f,b
  6796  002544  0E00               	movlw	0
  6797  002546  1794               	andwf	(___flmul@prod+3)& (0+255),f,b
  6798                           
  6799                           ; BSR set to: 0
  6800  002548  B190               	btfsc	___flmul@bexp& (0+255),0,b
  6801                           
  6802                           ; BSR set to: 0
  6803  00254A  8F93               	bsf	(___flmul@prod+2)& (0+255),7,b
  6804                           
  6805                           ; BSR set to: 0
  6806  00254C  90D8               	bcf	status,0,c
  6807  00254E  3190               	rrcf	___flmul@bexp& (0+255),w,b
  6808  002550                     L10:
  6809  002550  6F94               	movwf	(___flmul@prod+3)& (0+255),b
  6810  002552                     l5663:
  6811                           
  6812                           ; BSR set to: 0
  6813  002552  518A               	movf	___flmul@sign& (0+255),w,b
  6814  002554  1394               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 0
  6817  002556  C091  F07E         	movff	___flmul@prod,?___flmul
  6818  00255A  C092  F07F         	movff	___flmul@prod+1,?___flmul+1
  6819  00255E  C093  F080         	movff	___flmul@prod+2,?___flmul+2
  6820  002562  C094  F081         	movff	___flmul@prod+3,?___flmul+3
  6821                           
  6822                           ; BSR set to: 0
  6823  002566  0012               	return		;funcret
  6824  002568                     __end_of___flmul:
  6825                           	opt callstack 0
  6826                           
  6827 ;; *************** function ___flge *****************
  6828 ;; Defined at:
  6829 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  ff1             4   55[BANK0 ] unsigned char 
  6832 ;;  ff2             4   59[BANK0 ] unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;		None               void
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6844 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;Total ram usage:       12 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    4
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_efgtoa
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text19
  6859  0031DE                     __ptext19:
  6860                           	opt callstack 0
  6861  0031DE                     ___flge:
  6862                           	opt callstack 22
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;incstack = 0
  6866  0031DE  0E00               	movlw	0
  6867  0031E0  0100               	movlb	0	; () banked
  6868  0031E2  1597               	andwf	___flge@ff1& (0+255),w,b
  6869  0031E4  6F9F               	movwf	??___flge& (0+255),b
  6870  0031E6  0E00               	movlw	0
  6871  0031E8  1598               	andwf	(___flge@ff1+1)& (0+255),w,b
  6872  0031EA  6FA0               	movwf	(??___flge+1)& (0+255),b
  6873  0031EC  0E80               	movlw	128
  6874  0031EE  1599               	andwf	(___flge@ff1+2)& (0+255),w,b
  6875  0031F0  6FA1               	movwf	(??___flge+2)& (0+255),b
  6876  0031F2  0E7F               	movlw	127
  6877  0031F4  159A               	andwf	(___flge@ff1+3)& (0+255),w,b
  6878  0031F6  6FA2               	movwf	(??___flge+3)& (0+255),b
  6879  0031F8  519F               	movf	??___flge& (0+255),w,b
  6880  0031FA  11A0               	iorwf	(??___flge+1)& (0+255),w,b
  6881  0031FC  11A1               	iorwf	(??___flge+2)& (0+255),w,b
  6882  0031FE  11A2               	iorwf	(??___flge+3)& (0+255),w,b
  6883  003200  A4D8               	btfss	status,2,c
  6884  003202  D008               	goto	l5775
  6885                           
  6886                           ; BSR set to: 0
  6887  003204  0E00               	movlw	0
  6888  003206  6F97               	movwf	___flge@ff1& (0+255),b
  6889  003208  0E00               	movlw	0
  6890  00320A  6F98               	movwf	(___flge@ff1+1)& (0+255),b
  6891  00320C  0E00               	movlw	0
  6892  00320E  6F99               	movwf	(___flge@ff1+2)& (0+255),b
  6893  003210  0E00               	movlw	0
  6894  003212  6F9A               	movwf	(___flge@ff1+3)& (0+255),b
  6895  003214                     l5775:
  6896                           
  6897                           ; BSR set to: 0
  6898  003214  0E00               	movlw	0
  6899  003216  159B               	andwf	___flge@ff2& (0+255),w,b
  6900  003218  6F9F               	movwf	??___flge& (0+255),b
  6901  00321A  0E00               	movlw	0
  6902  00321C  159C               	andwf	(___flge@ff2+1)& (0+255),w,b
  6903  00321E  6FA0               	movwf	(??___flge+1)& (0+255),b
  6904  003220  0E80               	movlw	128
  6905  003222  159D               	andwf	(___flge@ff2+2)& (0+255),w,b
  6906  003224  6FA1               	movwf	(??___flge+2)& (0+255),b
  6907  003226  0E7F               	movlw	127
  6908  003228  159E               	andwf	(___flge@ff2+3)& (0+255),w,b
  6909  00322A  6FA2               	movwf	(??___flge+3)& (0+255),b
  6910  00322C  519F               	movf	??___flge& (0+255),w,b
  6911  00322E  11A0               	iorwf	(??___flge+1)& (0+255),w,b
  6912  003230  11A1               	iorwf	(??___flge+2)& (0+255),w,b
  6913  003232  11A2               	iorwf	(??___flge+3)& (0+255),w,b
  6914  003234  A4D8               	btfss	status,2,c
  6915  003236  D008               	goto	l5779
  6916                           
  6917                           ; BSR set to: 0
  6918  003238  0E00               	movlw	0
  6919  00323A  6F9B               	movwf	___flge@ff2& (0+255),b
  6920  00323C  0E00               	movlw	0
  6921  00323E  6F9C               	movwf	(___flge@ff2+1)& (0+255),b
  6922  003240  0E00               	movlw	0
  6923  003242  6F9D               	movwf	(___flge@ff2+2)& (0+255),b
  6924  003244  0E00               	movlw	0
  6925  003246  6F9E               	movwf	(___flge@ff2+3)& (0+255),b
  6926  003248                     l5779:
  6927                           
  6928                           ; BSR set to: 0
  6929  003248  AF9A               	btfss	(___flge@ff1+3)& (0+255),7,b
  6930  00324A  D009               	goto	l5783
  6931                           
  6932                           ; BSR set to: 0
  6933  00324C  6D97               	negf	___flge@ff1& (0+255),b
  6934  00324E  1F98               	comf	(___flge@ff1+1)& (0+255),f,b
  6935  003250  B0D8               	btfsc	status,0,c
  6936  003252  2B98               	incf	(___flge@ff1+1)& (0+255),f,b
  6937  003254  1F99               	comf	(___flge@ff1+2)& (0+255),f,b
  6938  003256  B0D8               	btfsc	status,0,c
  6939  003258  2B99               	incf	(___flge@ff1+2)& (0+255),f,b
  6940  00325A  0E80               	movlw	128
  6941  00325C  579A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6942  00325E                     l5783:
  6943                           
  6944                           ; BSR set to: 0
  6945  00325E  AF9E               	btfss	(___flge@ff2+3)& (0+255),7,b
  6946  003260  D009               	goto	l706
  6947                           
  6948                           ; BSR set to: 0
  6949  003262  6D9B               	negf	___flge@ff2& (0+255),b
  6950  003264  1F9C               	comf	(___flge@ff2+1)& (0+255),f,b
  6951  003266  B0D8               	btfsc	status,0,c
  6952  003268  2B9C               	incf	(___flge@ff2+1)& (0+255),f,b
  6953  00326A  1F9D               	comf	(___flge@ff2+2)& (0+255),f,b
  6954  00326C  B0D8               	btfsc	status,0,c
  6955  00326E  2B9D               	incf	(___flge@ff2+2)& (0+255),f,b
  6956  003270  0E80               	movlw	128
  6957  003272  579E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  6958  003274                     l706:
  6959                           
  6960                           ; BSR set to: 0
  6961  003274  0E00               	movlw	0
  6962  003276  1B97               	xorwf	___flge@ff1& (0+255),f,b
  6963  003278  0E00               	movlw	0
  6964  00327A  1B98               	xorwf	(___flge@ff1+1)& (0+255),f,b
  6965  00327C  0E00               	movlw	0
  6966  00327E  1B99               	xorwf	(___flge@ff1+2)& (0+255),f,b
  6967  003280  0E80               	movlw	128
  6968  003282  1B9A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  6969  003284  0E00               	movlw	0
  6970  003286  1B9B               	xorwf	___flge@ff2& (0+255),f,b
  6971  003288  0E00               	movlw	0
  6972  00328A  1B9C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  6973  00328C  0E00               	movlw	0
  6974  00328E  1B9D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  6975  003290  0E80               	movlw	128
  6976  003292  1B9E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  6977  003294  519B               	movf	___flge@ff2& (0+255),w,b
  6978  003296  5D97               	subwf	___flge@ff1& (0+255),w,b
  6979  003298  519C               	movf	(___flge@ff2+1)& (0+255),w,b
  6980  00329A  5998               	subwfb	(___flge@ff1+1)& (0+255),w,b
  6981  00329C  519D               	movf	(___flge@ff2+2)& (0+255),w,b
  6982  00329E  5999               	subwfb	(___flge@ff1+2)& (0+255),w,b
  6983  0032A0  519E               	movf	(___flge@ff2+3)& (0+255),w,b
  6984  0032A2  599A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  6985  0032A4  B0D8               	btfsc	status,0,c
  6986  0032A6  D002               	goto	l5789
  6987                           
  6988                           ; BSR set to: 0
  6989  0032A8  90D8               	bcf	status,0,c
  6990  0032AA  0012               	return	
  6991  0032AC                     l5789:
  6992                           
  6993                           ; BSR set to: 0
  6994  0032AC  80D8               	bsf	status,0,c
  6995                           
  6996                           ; BSR set to: 0
  6997  0032AE  0012               	return		;funcret
  6998  0032B0                     __end_of___flge:
  6999                           	opt callstack 0
  7000                           
  7001 ;; *************** function ___fleq *****************
  7002 ;; Defined at:
  7003 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  ff1             4   16[BANK0 ] unsigned char 
  7006 ;;  ff2             4   20[BANK0 ] unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;		None               void
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7018 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;Total ram usage:       12 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:    4
  7025 ;; This function calls:
  7026 ;;		Nothing
  7027 ;; This function is called by:
  7028 ;;		_efgtoa
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text20
  7033  0038DA                     __ptext20:
  7034                           	opt callstack 0
  7035  0038DA                     ___fleq:
  7036                           	opt callstack 22
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;incstack = 0
  7040  0038DA  0E00               	movlw	0
  7041  0038DC  0100               	movlb	0	; () banked
  7042  0038DE  1570               	andwf	___fleq@ff1& (0+255),w,b
  7043  0038E0  6F78               	movwf	??___fleq& (0+255),b
  7044  0038E2  0E00               	movlw	0
  7045  0038E4  1571               	andwf	(___fleq@ff1+1)& (0+255),w,b
  7046  0038E6  6F79               	movwf	(??___fleq+1)& (0+255),b
  7047  0038E8  0E80               	movlw	128
  7048  0038EA  1572               	andwf	(___fleq@ff1+2)& (0+255),w,b
  7049  0038EC  6F7A               	movwf	(??___fleq+2)& (0+255),b
  7050  0038EE  0E7F               	movlw	127
  7051  0038F0  1573               	andwf	(___fleq@ff1+3)& (0+255),w,b
  7052  0038F2  6F7B               	movwf	(??___fleq+3)& (0+255),b
  7053  0038F4  5178               	movf	??___fleq& (0+255),w,b
  7054  0038F6  1179               	iorwf	(??___fleq+1)& (0+255),w,b
  7055  0038F8  117A               	iorwf	(??___fleq+2)& (0+255),w,b
  7056  0038FA  117B               	iorwf	(??___fleq+3)& (0+255),w,b
  7057  0038FC  A4D8               	btfss	status,2,c
  7058  0038FE  D008               	goto	l5759
  7059                           
  7060                           ; BSR set to: 0
  7061  003900  0E00               	movlw	0
  7062  003902  6F70               	movwf	___fleq@ff1& (0+255),b
  7063  003904  0E00               	movlw	0
  7064  003906  6F71               	movwf	(___fleq@ff1+1)& (0+255),b
  7065  003908  0E00               	movlw	0
  7066  00390A  6F72               	movwf	(___fleq@ff1+2)& (0+255),b
  7067  00390C  0E00               	movlw	0
  7068  00390E  6F73               	movwf	(___fleq@ff1+3)& (0+255),b
  7069  003910                     l5759:
  7070                           
  7071                           ; BSR set to: 0
  7072  003910  0E00               	movlw	0
  7073  003912  1574               	andwf	___fleq@ff2& (0+255),w,b
  7074  003914  6F78               	movwf	??___fleq& (0+255),b
  7075  003916  0E00               	movlw	0
  7076  003918  1575               	andwf	(___fleq@ff2+1)& (0+255),w,b
  7077  00391A  6F79               	movwf	(??___fleq+1)& (0+255),b
  7078  00391C  0E80               	movlw	128
  7079  00391E  1576               	andwf	(___fleq@ff2+2)& (0+255),w,b
  7080  003920  6F7A               	movwf	(??___fleq+2)& (0+255),b
  7081  003922  0E7F               	movlw	127
  7082  003924  1577               	andwf	(___fleq@ff2+3)& (0+255),w,b
  7083  003926  6F7B               	movwf	(??___fleq+3)& (0+255),b
  7084  003928  5178               	movf	??___fleq& (0+255),w,b
  7085  00392A  1179               	iorwf	(??___fleq+1)& (0+255),w,b
  7086  00392C  117A               	iorwf	(??___fleq+2)& (0+255),w,b
  7087  00392E  117B               	iorwf	(??___fleq+3)& (0+255),w,b
  7088  003930  A4D8               	btfss	status,2,c
  7089  003932  D008               	goto	l5763
  7090                           
  7091                           ; BSR set to: 0
  7092  003934  0E00               	movlw	0
  7093  003936  6F74               	movwf	___fleq@ff2& (0+255),b
  7094  003938  0E00               	movlw	0
  7095  00393A  6F75               	movwf	(___fleq@ff2+1)& (0+255),b
  7096  00393C  0E00               	movlw	0
  7097  00393E  6F76               	movwf	(___fleq@ff2+2)& (0+255),b
  7098  003940  0E00               	movlw	0
  7099  003942  6F77               	movwf	(___fleq@ff2+3)& (0+255),b
  7100  003944                     l5763:
  7101                           
  7102                           ; BSR set to: 0
  7103  003944  5174               	movf	___fleq@ff2& (0+255),w,b
  7104  003946  1970               	xorwf	___fleq@ff1& (0+255),w,b
  7105  003948  E10A               	bnz	u7350
  7106  00394A  5175               	movf	(___fleq@ff2+1)& (0+255),w,b
  7107  00394C  1971               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  7108  00394E  E107               	bnz	u7350
  7109  003950  5176               	movf	(___fleq@ff2+2)& (0+255),w,b
  7110  003952  1972               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  7111  003954  E104               	bnz	u7350
  7112  003956  5177               	movf	(___fleq@ff2+3)& (0+255),w,b
  7113  003958  1973               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  7114  00395A  B4D8               	btfsc	status,2,c
  7115  00395C  D002               	goto	l5767
  7116  00395E                     u7350:
  7117                           
  7118                           ; BSR set to: 0
  7119  00395E  90D8               	bcf	status,0,c
  7120  003960  0012               	return	
  7121  003962                     l5767:
  7122                           
  7123                           ; BSR set to: 0
  7124  003962  80D8               	bsf	status,0,c
  7125                           
  7126                           ; BSR set to: 0
  7127  003964  0012               	return		;funcret
  7128  003966                     __end_of___fleq:
  7129                           	opt callstack 0
  7130                           
  7131 ;; *************** function ___fldiv *****************
  7132 ;; Defined at:
  7133 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  b               4   30[BANK0 ] unsigned char 
  7136 ;;  a               4   34[BANK0 ] unsigned char 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  grs             4   49[BANK0 ] unsigned long 
  7139 ;;  rem             4   42[BANK0 ] unsigned long 
  7140 ;;  new_exp         2   47[BANK0 ] short 
  7141 ;;  aexp            1   54[BANK0 ] unsigned char 
  7142 ;;  bexp            1   53[BANK0 ] unsigned char 
  7143 ;;  sign            1   46[BANK0 ] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  4   30[BANK0 ] unsigned char 
  7146 ;; Registers used:
  7147 ;;		wreg, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7153 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7154 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7155 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;Total ram usage:       25 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    4
  7160 ;; This function calls:
  7161 ;;		Nothing
  7162 ;; This function is called by:
  7163 ;;		_main
  7164 ;;		_efgtoa
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text21
  7169  002876                     __ptext21:
  7170                           	opt callstack 0
  7171  002876                     ___fldiv:
  7172                           	opt callstack 22
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;incstack = 0
  7176  002876  0100               	movlb	0	; () banked
  7177  002878  5181               	movf	(___fldiv@b+3)& (0+255),w,b
  7178  00287A  0B80               	andlw	128
  7179  00287C  6F8E               	movwf	___fldiv@sign& (0+255),b
  7180  00287E  5181               	movf	(___fldiv@b+3)& (0+255),w,b
  7181  002880  2581               	addwf	(___fldiv@b+3)& (0+255),w,b
  7182  002882  6F95               	movwf	___fldiv@bexp& (0+255),b
  7183                           
  7184                           ; BSR set to: 0
  7185  002884  BF80               	btfsc	(___fldiv@b+2)& (0+255),7,b
  7186                           
  7187                           ; BSR set to: 0
  7188  002886  8195               	bsf	___fldiv@bexp& (0+255),0,b
  7189                           
  7190                           ; BSR set to: 0
  7191  002888  5195               	movf	___fldiv@bexp& (0+255),w,b
  7192  00288A  B4D8               	btfsc	status,2,c
  7193  00288C  D00D               	goto	l5417
  7194                           
  7195                           ; BSR set to: 0
  7196  00288E  2995               	incf	___fldiv@bexp& (0+255),w,b
  7197  002890  A4D8               	btfss	status,2,c
  7198  002892  D008               	goto	l5413
  7199                           
  7200                           ; BSR set to: 0
  7201  002894  0E00               	movlw	0
  7202  002896  6F7E               	movwf	___fldiv@b& (0+255),b
  7203  002898  0E00               	movlw	0
  7204  00289A  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
  7205  00289C  0E00               	movlw	0
  7206  00289E  6F80               	movwf	(___fldiv@b+2)& (0+255),b
  7207  0028A0  0E00               	movlw	0
  7208  0028A2  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7209  0028A4                     l5413:
  7210                           
  7211                           ; BSR set to: 0
  7212  0028A4  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
  7213  0028A6  D006               	goto	L11
  7214  0028A8                     l5417:
  7215                           
  7216                           ; BSR set to: 0
  7217  0028A8  0E00               	movlw	0
  7218  0028AA  6F7E               	movwf	___fldiv@b& (0+255),b
  7219  0028AC  0E00               	movlw	0
  7220  0028AE  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
  7221  0028B0  0E00               	movlw	0
  7222  0028B2  6F80               	movwf	(___fldiv@b+2)& (0+255),b
  7223  0028B4                     L11:
  7224  0028B4  0E00               	movlw	0
  7225  0028B6  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7226                           
  7227                           ; BSR set to: 0
  7228  0028B8  5185               	movf	(___fldiv@a+3)& (0+255),w,b
  7229  0028BA  0B80               	andlw	128
  7230  0028BC  1B8E               	xorwf	___fldiv@sign& (0+255),f,b
  7231                           
  7232                           ; BSR set to: 0
  7233  0028BE  5185               	movf	(___fldiv@a+3)& (0+255),w,b
  7234  0028C0  2585               	addwf	(___fldiv@a+3)& (0+255),w,b
  7235  0028C2  6F96               	movwf	___fldiv@aexp& (0+255),b
  7236                           
  7237                           ; BSR set to: 0
  7238  0028C4  BF84               	btfsc	(___fldiv@a+2)& (0+255),7,b
  7239                           
  7240                           ; BSR set to: 0
  7241  0028C6  8196               	bsf	___fldiv@aexp& (0+255),0,b
  7242                           
  7243                           ; BSR set to: 0
  7244  0028C8  5196               	movf	___fldiv@aexp& (0+255),w,b
  7245  0028CA  B4D8               	btfsc	status,2,c
  7246  0028CC  D00D               	goto	l5437
  7247                           
  7248                           ; BSR set to: 0
  7249  0028CE  2996               	incf	___fldiv@aexp& (0+255),w,b
  7250  0028D0  A4D8               	btfss	status,2,c
  7251  0028D2  D008               	goto	l5433
  7252                           
  7253                           ; BSR set to: 0
  7254  0028D4  0E00               	movlw	0
  7255  0028D6  6F82               	movwf	___fldiv@a& (0+255),b
  7256  0028D8  0E00               	movlw	0
  7257  0028DA  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  7258  0028DC  0E00               	movlw	0
  7259  0028DE  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  7260  0028E0  0E00               	movlw	0
  7261  0028E2  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  7262  0028E4                     l5433:
  7263                           
  7264                           ; BSR set to: 0
  7265  0028E4  8F84               	bsf	(___fldiv@a+2)& (0+255),7,b
  7266  0028E6  D006               	goto	L12
  7267  0028E8                     l5437:
  7268                           
  7269                           ; BSR set to: 0
  7270  0028E8  0E00               	movlw	0
  7271  0028EA  6F82               	movwf	___fldiv@a& (0+255),b
  7272  0028EC  0E00               	movlw	0
  7273  0028EE  6F83               	movwf	(___fldiv@a+1)& (0+255),b
  7274  0028F0  0E00               	movlw	0
  7275  0028F2  6F84               	movwf	(___fldiv@a+2)& (0+255),b
  7276  0028F4                     L12:
  7277  0028F4  0E00               	movlw	0
  7278  0028F6  6F85               	movwf	(___fldiv@a+3)& (0+255),b
  7279                           
  7280                           ; BSR set to: 0
  7281  0028F8  5182               	movf	___fldiv@a& (0+255),w,b
  7282  0028FA  1183               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7283  0028FC  1184               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7284  0028FE  1185               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7285  002900  A4D8               	btfss	status,2,c
  7286  002902  D017               	goto	l5451
  7287                           
  7288                           ; BSR set to: 0
  7289  002904  0E00               	movlw	0
  7290  002906  6F7E               	movwf	___fldiv@b& (0+255),b
  7291  002908  0E00               	movlw	0
  7292  00290A  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
  7293  00290C  0E00               	movlw	0
  7294  00290E  6F80               	movwf	(___fldiv@b+2)& (0+255),b
  7295  002910  0E00               	movlw	0
  7296  002912  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7297                           
  7298                           ; BSR set to: 0
  7299  002914  0E80               	movlw	128
  7300  002916  1380               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7301  002918  0E7F               	movlw	127
  7302  00291A  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7303  00291C                     l5445:
  7304                           
  7305                           ; BSR set to: 0
  7306  00291C  518E               	movf	___fldiv@sign& (0+255),w,b
  7307  00291E  1381               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7308                           
  7309                           ; BSR set to: 0
  7310  002920  C07E  F07E         	movff	___fldiv@b,?___fldiv
  7311  002924  C07F  F07F         	movff	___fldiv@b+1,?___fldiv+1
  7312  002928  C080  F080         	movff	___fldiv@b+2,?___fldiv+2
  7313  00292C  C081  F081         	movff	___fldiv@b+3,?___fldiv+3
  7314  002930  0012               	return	
  7315  002932                     l5451:
  7316                           
  7317                           ; BSR set to: 0
  7318  002932  5195               	movf	___fldiv@bexp& (0+255),w,b
  7319  002934  A4D8               	btfss	status,2,c
  7320  002936  D009               	goto	l5459
  7321                           
  7322                           ; BSR set to: 0
  7323                           
  7324                           ; BSR set to: 0
  7325  002938  0E00               	movlw	0
  7326  00293A  6F7E               	movwf	?___fldiv& (0+255),b
  7327  00293C  0E00               	movlw	0
  7328  00293E  6F7F               	movwf	(?___fldiv+1)& (0+255),b
  7329  002940  0E00               	movlw	0
  7330  002942  6F80               	movwf	(?___fldiv+2)& (0+255),b
  7331  002944  0E00               	movlw	0
  7332  002946  6F81               	movwf	(?___fldiv+3)& (0+255),b
  7333  002948  0012               	return	
  7334  00294A                     l5459:
  7335                           
  7336                           ; BSR set to: 0
  7337  00294A  5196               	movf	___fldiv@aexp& (0+255),w,b
  7338  00294C  C095  F086         	movff	___fldiv@bexp,??___fldiv
  7339  002950  6B87               	clrf	(??___fldiv+1)& (0+255),b
  7340  002952  5F86               	subwf	??___fldiv& (0+255),f,b
  7341  002954  0E00               	movlw	0
  7342  002956  5B87               	subwfb	(??___fldiv+1)& (0+255),f,b
  7343  002958  0E7F               	movlw	127
  7344  00295A  2586               	addwf	??___fldiv& (0+255),w,b
  7345  00295C  6F8F               	movwf	___fldiv@new_exp& (0+255),b
  7346  00295E  0E00               	movlw	0
  7347  002960  2187               	addwfc	(??___fldiv+1)& (0+255),w,b
  7348  002962  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7349                           
  7350                           ; BSR set to: 0
  7351  002964  C07E  F08A         	movff	___fldiv@b,___fldiv@rem
  7352  002968  C07F  F08B         	movff	___fldiv@b+1,___fldiv@rem+1
  7353  00296C  C080  F08C         	movff	___fldiv@b+2,___fldiv@rem+2
  7354  002970  C081  F08D         	movff	___fldiv@b+3,___fldiv@rem+3
  7355                           
  7356                           ; BSR set to: 0
  7357  002974  0E00               	movlw	0
  7358  002976  6F7E               	movwf	___fldiv@b& (0+255),b
  7359  002978  0E00               	movlw	0
  7360  00297A  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
  7361  00297C  0E00               	movlw	0
  7362  00297E  6F80               	movwf	(___fldiv@b+2)& (0+255),b
  7363  002980  0E00               	movlw	0
  7364  002982  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7365                           
  7366                           ; BSR set to: 0
  7367  002984  0E00               	movlw	0
  7368  002986  6F91               	movwf	___fldiv@grs& (0+255),b
  7369  002988  0E00               	movlw	0
  7370  00298A  6F92               	movwf	(___fldiv@grs+1)& (0+255),b
  7371  00298C  0E00               	movlw	0
  7372  00298E  6F93               	movwf	(___fldiv@grs+2)& (0+255),b
  7373  002990  0E00               	movlw	0
  7374  002992  6F94               	movwf	(___fldiv@grs+3)& (0+255),b
  7375                           
  7376                           ; BSR set to: 0
  7377  002994  0E00               	movlw	0
  7378  002996  6F96               	movwf	___fldiv@aexp& (0+255),b
  7379  002998  D028               	goto	l1025
  7380  00299A                     l5469:
  7381                           
  7382                           ; BSR set to: 0
  7383  00299A  5196               	movf	___fldiv@aexp& (0+255),w,b
  7384  00299C  B4D8               	btfsc	status,2,c
  7385  00299E  D011               	goto	l5477
  7386                           
  7387                           ; BSR set to: 0
  7388  0029A0  90D8               	bcf	status,0,c
  7389  0029A2  378A               	rlcf	___fldiv@rem& (0+255),f,b
  7390  0029A4  378B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7391  0029A6  378C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7392  0029A8  378D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7393  0029AA  90D8               	bcf	status,0,c
  7394  0029AC  377E               	rlcf	___fldiv@b& (0+255),f,b
  7395  0029AE  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7396  0029B0  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7397  0029B2  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7398                           
  7399                           ; BSR set to: 0
  7400  0029B4  BF94               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7401                           
  7402                           ; BSR set to: 0
  7403  0029B6  817E               	bsf	___fldiv@b& (0+255),0,b
  7404                           
  7405                           ; BSR set to: 0
  7406  0029B8  90D8               	bcf	status,0,c
  7407  0029BA  3791               	rlcf	___fldiv@grs& (0+255),f,b
  7408  0029BC  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7409  0029BE  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7410  0029C0  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7411  0029C2                     l5477:
  7412                           
  7413                           ; BSR set to: 0
  7414  0029C2  5182               	movf	___fldiv@a& (0+255),w,b
  7415  0029C4  5D8A               	subwf	___fldiv@rem& (0+255),w,b
  7416  0029C6  5183               	movf	(___fldiv@a+1)& (0+255),w,b
  7417  0029C8  598B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7418  0029CA  5184               	movf	(___fldiv@a+2)& (0+255),w,b
  7419  0029CC  598C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7420  0029CE  5185               	movf	(___fldiv@a+3)& (0+255),w,b
  7421  0029D0  598D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7422  0029D2  A0D8               	btfss	status,0,c
  7423  0029D4  D009               	goto	l5483
  7424                           
  7425                           ; BSR set to: 0
  7426  0029D6  8D94               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7427                           
  7428                           ; BSR set to: 0
  7429  0029D8  5182               	movf	___fldiv@a& (0+255),w,b
  7430  0029DA  5F8A               	subwf	___fldiv@rem& (0+255),f,b
  7431  0029DC  5183               	movf	(___fldiv@a+1)& (0+255),w,b
  7432  0029DE  5B8B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7433  0029E0  5184               	movf	(___fldiv@a+2)& (0+255),w,b
  7434  0029E2  5B8C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7435  0029E4  5185               	movf	(___fldiv@a+3)& (0+255),w,b
  7436  0029E6  5B8D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7437  0029E8                     l5483:
  7438                           
  7439                           ; BSR set to: 0
  7440  0029E8  2B96               	incf	___fldiv@aexp& (0+255),f,b
  7441  0029EA                     l1025:
  7442                           
  7443                           ; BSR set to: 0
  7444  0029EA  0E19               	movlw	25
  7445  0029EC  6596               	cpfsgt	___fldiv@aexp& (0+255),b
  7446  0029EE  D7D5               	goto	l5469
  7447                           
  7448                           ; BSR set to: 0
  7449  0029F0  518A               	movf	___fldiv@rem& (0+255),w,b
  7450  0029F2  118B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7451  0029F4  118C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7452  0029F6  118D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7453  0029F8  B4D8               	btfsc	status,2,c
  7454  0029FA  D011               	goto	l5495
  7455                           
  7456                           ; BSR set to: 0
  7457  0029FC  8191               	bsf	___fldiv@grs& (0+255),0,b
  7458  0029FE  D00F               	goto	l5495
  7459  002A00                     l5489:
  7460                           
  7461                           ; BSR set to: 0
  7462  002A00  90D8               	bcf	status,0,c
  7463  002A02  377E               	rlcf	___fldiv@b& (0+255),f,b
  7464  002A04  377F               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7465  002A06  3780               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7466  002A08  3781               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7467                           
  7468                           ; BSR set to: 0
  7469  002A0A  BF94               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7470                           
  7471                           ; BSR set to: 0
  7472  002A0C  817E               	bsf	___fldiv@b& (0+255),0,b
  7473                           
  7474                           ; BSR set to: 0
  7475  002A0E  90D8               	bcf	status,0,c
  7476  002A10  3791               	rlcf	___fldiv@grs& (0+255),f,b
  7477  002A12  3792               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7478  002A14  3793               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7479  002A16  3794               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7480  002A18  078F               	decf	___fldiv@new_exp& (0+255),f,b
  7481  002A1A  A0D8               	btfss	status,0,c
  7482  002A1C  0790               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7483  002A1E                     l5495:
  7484                           
  7485                           ; BSR set to: 0
  7486  002A1E  AF80               	btfss	(___fldiv@b+2)& (0+255),7,b
  7487  002A20  D7EF               	goto	l5489
  7488                           
  7489                           ; BSR set to: 0
  7490  002A22  0E00               	movlw	0
  7491  002A24  6F96               	movwf	___fldiv@aexp& (0+255),b
  7492                           
  7493                           ; BSR set to: 0
  7494  002A26  AF94               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7495  002A28  D017               	goto	l1036
  7496                           
  7497                           ; BSR set to: 0
  7498  002A2A  0EFF               	movlw	255
  7499  002A2C  1591               	andwf	___fldiv@grs& (0+255),w,b
  7500  002A2E  6F86               	movwf	??___fldiv& (0+255),b
  7501  002A30  0EFF               	movlw	255
  7502  002A32  1592               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7503  002A34  6F87               	movwf	(??___fldiv+1)& (0+255),b
  7504  002A36  0EFF               	movlw	255
  7505  002A38  1593               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7506  002A3A  6F88               	movwf	(??___fldiv+2)& (0+255),b
  7507  002A3C  0E7F               	movlw	127
  7508  002A3E  1594               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7509  002A40  6F89               	movwf	(??___fldiv+3)& (0+255),b
  7510  002A42  5186               	movf	??___fldiv& (0+255),w,b
  7511  002A44  1187               	iorwf	(??___fldiv+1)& (0+255),w,b
  7512  002A46  1188               	iorwf	(??___fldiv+2)& (0+255),w,b
  7513  002A48  1189               	iorwf	(??___fldiv+3)& (0+255),w,b
  7514  002A4A  B4D8               	btfsc	status,2,c
  7515  002A4C  D003               	goto	l1037
  7516  002A4E                     u6950:
  7517                           
  7518                           ; BSR set to: 0
  7519  002A4E  0E01               	movlw	1
  7520  002A50  6F96               	movwf	___fldiv@aexp& (0+255),b
  7521  002A52  D002               	goto	l1036
  7522  002A54                     l1037:
  7523                           
  7524                           ; BSR set to: 0
  7525  002A54  B17E               	btfsc	___fldiv@b& (0+255),0,b
  7526  002A56  D7FB               	goto	u6950
  7527  002A58                     l1036:
  7528                           
  7529                           ; BSR set to: 0
  7530  002A58  5196               	movf	___fldiv@aexp& (0+255),w,b
  7531  002A5A  B4D8               	btfsc	status,2,c
  7532  002A5C  D01F               	goto	l5515
  7533                           
  7534                           ; BSR set to: 0
  7535  002A5E  0E01               	movlw	1
  7536  002A60  277E               	addwf	___fldiv@b& (0+255),f,b
  7537  002A62  0E00               	movlw	0
  7538  002A64  237F               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7539  002A66  2380               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7540  002A68  2381               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7541                           
  7542                           ; BSR set to: 0
  7543  002A6A  A181               	btfss	(___fldiv@b+3)& (0+255),0,b
  7544  002A6C  D017               	goto	l5515
  7545                           
  7546                           ; BSR set to: 0
  7547  002A6E  C07E  F086         	movff	___fldiv@b,??___fldiv
  7548  002A72  C07F  F087         	movff	___fldiv@b+1,??___fldiv+1
  7549  002A76  C080  F088         	movff	___fldiv@b+2,??___fldiv+2
  7550  002A7A  C081  F089         	movff	___fldiv@b+3,??___fldiv+3
  7551  002A7E  3589               	rlcf	(??___fldiv+3)& (0+255),w,b
  7552  002A80  3389               	rrcf	(??___fldiv+3)& (0+255),f,b
  7553  002A82  3388               	rrcf	(??___fldiv+2)& (0+255),f,b
  7554  002A84  3387               	rrcf	(??___fldiv+1)& (0+255),f,b
  7555  002A86  3386               	rrcf	??___fldiv& (0+255),f,b
  7556  002A88  C086  F07E         	movff	??___fldiv,___fldiv@b
  7557  002A8C  C087  F07F         	movff	??___fldiv+1,___fldiv@b+1
  7558  002A90  C088  F080         	movff	??___fldiv+2,___fldiv@b+2
  7559  002A94  C089  F081         	movff	??___fldiv+3,___fldiv@b+3
  7560                           
  7561                           ; BSR set to: 0
  7562  002A98  4B8F               	infsnz	___fldiv@new_exp& (0+255),f,b
  7563  002A9A  2B90               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7564  002A9C                     l5515:
  7565                           
  7566                           ; BSR set to: 0
  7567  002A9C  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7568  002A9E  D010               	goto	l5519
  7569  002AA0  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7570  002AA2  E103               	bnz	u6990
  7571  002AA4  298F               	incf	___fldiv@new_exp& (0+255),w,b
  7572  002AA6  A0D8               	btfss	status,0,c
  7573  002AA8  D00B               	goto	l5519
  7574  002AAA                     u6990:
  7575                           
  7576                           ; BSR set to: 0
  7577  002AAA  0E00               	movlw	0
  7578  002AAC  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7579  002AAE  698F               	setf	___fldiv@new_exp& (0+255),b
  7580  002AB0  0E00               	movlw	0
  7581  002AB2  6F7E               	movwf	___fldiv@b& (0+255),b
  7582  002AB4  0E00               	movlw	0
  7583  002AB6  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
  7584  002AB8  0E00               	movlw	0
  7585  002ABA  6F80               	movwf	(___fldiv@b+2)& (0+255),b
  7586  002ABC  0E00               	movlw	0
  7587  002ABE  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7588  002AC0                     l5519:
  7589                           
  7590                           ; BSR set to: 0
  7591  002AC0  BF90               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7592  002AC2  D005               	goto	u7000
  7593  002AC4  5190               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7594  002AC6  E111               	bnz	l5523
  7595  002AC8  058F               	decf	___fldiv@new_exp& (0+255),w,b
  7596  002ACA  B0D8               	btfsc	status,0,c
  7597  002ACC  D00E               	goto	l5523
  7598  002ACE                     u7000:
  7599                           
  7600                           ; BSR set to: 0
  7601  002ACE  0E00               	movlw	0
  7602  002AD0  6F90               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7603  002AD2  0E00               	movlw	0
  7604  002AD4  6F8F               	movwf	___fldiv@new_exp& (0+255),b
  7605  002AD6  0E00               	movlw	0
  7606  002AD8  6F7E               	movwf	___fldiv@b& (0+255),b
  7607  002ADA  0E00               	movlw	0
  7608  002ADC  6F7F               	movwf	(___fldiv@b+1)& (0+255),b
  7609  002ADE  0E00               	movlw	0
  7610  002AE0  6F80               	movwf	(___fldiv@b+2)& (0+255),b
  7611  002AE2  0E00               	movlw	0
  7612  002AE4  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7613  002AE6  0E00               	movlw	0
  7614  002AE8  6F8E               	movwf	___fldiv@sign& (0+255),b
  7615  002AEA                     l5523:
  7616                           
  7617                           ; BSR set to: 0
  7618  002AEA  C08F  F095         	movff	___fldiv@new_exp,___fldiv@bexp
  7619                           
  7620                           ; BSR set to: 0
  7621  002AEE  A195               	btfss	___fldiv@bexp& (0+255),0,b
  7622  002AF0  D002               	goto	l5529
  7623                           
  7624                           ; BSR set to: 0
  7625  002AF2  8F80               	bsf	(___fldiv@b+2)& (0+255),7,b
  7626  002AF4  D001               	goto	l5531
  7627  002AF6                     l5529:
  7628                           
  7629                           ; BSR set to: 0
  7630  002AF6  9F80               	bcf	(___fldiv@b+2)& (0+255),7,b
  7631  002AF8                     l5531:
  7632                           
  7633                           ; BSR set to: 0
  7634  002AF8  90D8               	bcf	status,0,c
  7635  002AFA  3195               	rrcf	___fldiv@bexp& (0+255),w,b
  7636  002AFC  6F81               	movwf	(___fldiv@b+3)& (0+255),b
  7637  002AFE  D70E               	goto	l5445
  7638  002B00                     __end_of___fldiv:
  7639                           	opt callstack 0
  7640                           
  7641 ;; *************** function ___awmod *****************
  7642 ;; Defined at:
  7643 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  dividend        2   16[BANK0 ] int 
  7646 ;;  divisor         2   18[BANK0 ] int 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  sign            1   21[BANK0 ] unsigned char 
  7649 ;;  counter         1   20[BANK0 ] unsigned char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  2   16[BANK0 ] int 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7662 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;Total ram usage:        6 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    4
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_efgtoa
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text22
  7674  003A70                     __ptext22:
  7675                           	opt callstack 0
  7676  003A70                     ___awmod:
  7677                           	opt callstack 22
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;incstack = 0
  7681  003A70  0E00               	movlw	0
  7682  003A72  0100               	movlb	0	; () banked
  7683  003A74  6F75               	movwf	___awmod@sign& (0+255),b
  7684                           
  7685                           ; BSR set to: 0
  7686  003A76  AF71               	btfss	(___awmod@dividend+1)& (0+255),7,b
  7687  003A78  D006               	goto	l5727
  7688                           
  7689                           ; BSR set to: 0
  7690  003A7A  6D70               	negf	___awmod@dividend& (0+255),b
  7691  003A7C  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  7692  003A7E  B0D8               	btfsc	status,0,c
  7693  003A80  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  7694                           
  7695                           ; BSR set to: 0
  7696  003A82  0E01               	movlw	1
  7697  003A84  6F75               	movwf	___awmod@sign& (0+255),b
  7698  003A86                     l5727:
  7699                           
  7700                           ; BSR set to: 0
  7701  003A86  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7702  003A88  D004               	goto	l5731
  7703                           
  7704                           ; BSR set to: 0
  7705  003A8A  6D72               	negf	___awmod@divisor& (0+255),b
  7706  003A8C  1F73               	comf	(___awmod@divisor+1)& (0+255),f,b
  7707  003A8E  B0D8               	btfsc	status,0,c
  7708  003A90  2B73               	incf	(___awmod@divisor+1)& (0+255),f,b
  7709  003A92                     l5731:
  7710                           
  7711                           ; BSR set to: 0
  7712  003A92  5172               	movf	___awmod@divisor& (0+255),w,b
  7713  003A94  1173               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  7714  003A96  B4D8               	btfsc	status,2,c
  7715  003A98  D018               	goto	l5747
  7716                           
  7717                           ; BSR set to: 0
  7718  003A9A  0E01               	movlw	1
  7719  003A9C  6F74               	movwf	___awmod@counter& (0+255),b
  7720  003A9E  D004               	goto	l5737
  7721  003AA0                     l5735:
  7722                           
  7723                           ; BSR set to: 0
  7724  003AA0  90D8               	bcf	status,0,c
  7725  003AA2  3772               	rlcf	___awmod@divisor& (0+255),f,b
  7726  003AA4  3773               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  7727  003AA6  2B74               	incf	___awmod@counter& (0+255),f,b
  7728  003AA8                     l5737:
  7729                           
  7730                           ; BSR set to: 0
  7731  003AA8  AF73               	btfss	(___awmod@divisor+1)& (0+255),7,b
  7732  003AAA  D7FA               	goto	l5735
  7733  003AAC                     u7300:
  7734                           
  7735                           ; BSR set to: 0
  7736  003AAC  5172               	movf	___awmod@divisor& (0+255),w,b
  7737  003AAE  5D70               	subwf	___awmod@dividend& (0+255),w,b
  7738  003AB0  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  7739  003AB2  5971               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  7740  003AB4  A0D8               	btfss	status,0,c
  7741  003AB6  D004               	goto	l5743
  7742                           
  7743                           ; BSR set to: 0
  7744  003AB8  5172               	movf	___awmod@divisor& (0+255),w,b
  7745  003ABA  5F70               	subwf	___awmod@dividend& (0+255),f,b
  7746  003ABC  5173               	movf	(___awmod@divisor+1)& (0+255),w,b
  7747  003ABE  5B71               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  7748  003AC0                     l5743:
  7749                           
  7750                           ; BSR set to: 0
  7751  003AC0  90D8               	bcf	status,0,c
  7752  003AC2  3373               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  7753  003AC4  3372               	rrcf	___awmod@divisor& (0+255),f,b
  7754                           
  7755                           ; BSR set to: 0
  7756  003AC6  2F74               	decfsz	___awmod@counter& (0+255),f,b
  7757  003AC8  D7F1               	goto	u7300
  7758  003ACA                     l5747:
  7759                           
  7760                           ; BSR set to: 0
  7761  003ACA  5175               	movf	___awmod@sign& (0+255),w,b
  7762  003ACC  B4D8               	btfsc	status,2,c
  7763  003ACE  D004               	goto	l5751
  7764                           
  7765                           ; BSR set to: 0
  7766  003AD0  6D70               	negf	___awmod@dividend& (0+255),b
  7767  003AD2  1F71               	comf	(___awmod@dividend+1)& (0+255),f,b
  7768  003AD4  B0D8               	btfsc	status,0,c
  7769  003AD6  2B71               	incf	(___awmod@dividend+1)& (0+255),f,b
  7770  003AD8                     l5751:
  7771                           
  7772                           ; BSR set to: 0
  7773  003AD8  C070  F070         	movff	___awmod@dividend,?___awmod
  7774  003ADC  C071  F071         	movff	___awmod@dividend+1,?___awmod+1
  7775                           
  7776                           ; BSR set to: 0
  7777  003AE0  0012               	return		;funcret
  7778  003AE2                     __end_of___awmod:
  7779                           	opt callstack 0
  7780                           
  7781 ;; *************** function ___awdiv *****************
  7782 ;; Defined at:
  7783 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  dividend        2   16[BANK0 ] int 
  7786 ;;  divisor         2   18[BANK0 ] int 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  quotient        2   22[BANK0 ] int 
  7789 ;;  sign            1   21[BANK0 ] unsigned char 
  7790 ;;  counter         1   20[BANK0 ] unsigned char 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  2   16[BANK0 ] int 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7800 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;Total ram usage:        8 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    4
  7807 ;; This function calls:
  7808 ;;		Nothing
  7809 ;; This function is called by:
  7810 ;;		_efgtoa
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text23
  7815  003966                     __ptext23:
  7816                           	opt callstack 0
  7817  003966                     ___awdiv:
  7818                           	opt callstack 22
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;incstack = 0
  7822  003966  0E00               	movlw	0
  7823  003968  0100               	movlb	0	; () banked
  7824  00396A  6F75               	movwf	___awdiv@sign& (0+255),b
  7825                           
  7826                           ; BSR set to: 0
  7827  00396C  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7828  00396E  D006               	goto	l5683
  7829                           
  7830                           ; BSR set to: 0
  7831  003970  6D72               	negf	___awdiv@divisor& (0+255),b
  7832  003972  1F73               	comf	(___awdiv@divisor+1)& (0+255),f,b
  7833  003974  B0D8               	btfsc	status,0,c
  7834  003976  2B73               	incf	(___awdiv@divisor+1)& (0+255),f,b
  7835                           
  7836                           ; BSR set to: 0
  7837  003978  0E01               	movlw	1
  7838  00397A  6F75               	movwf	___awdiv@sign& (0+255),b
  7839  00397C                     l5683:
  7840                           
  7841                           ; BSR set to: 0
  7842  00397C  AF71               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  7843  00397E  D006               	goto	l5689
  7844                           
  7845                           ; BSR set to: 0
  7846  003980  6D70               	negf	___awdiv@dividend& (0+255),b
  7847  003982  1F71               	comf	(___awdiv@dividend+1)& (0+255),f,b
  7848  003984  B0D8               	btfsc	status,0,c
  7849  003986  2B71               	incf	(___awdiv@dividend+1)& (0+255),f,b
  7850                           
  7851                           ; BSR set to: 0
  7852  003988  0E01               	movlw	1
  7853  00398A  1B75               	xorwf	___awdiv@sign& (0+255),f,b
  7854  00398C                     l5689:
  7855                           
  7856                           ; BSR set to: 0
  7857  00398C  0E00               	movlw	0
  7858  00398E  6F77               	movwf	(___awdiv@quotient+1)& (0+255),b
  7859  003990  0E00               	movlw	0
  7860  003992  6F76               	movwf	___awdiv@quotient& (0+255),b
  7861                           
  7862                           ; BSR set to: 0
  7863  003994  5172               	movf	___awdiv@divisor& (0+255),w,b
  7864  003996  1173               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  7865  003998  B4D8               	btfsc	status,2,c
  7866  00399A  D01C               	goto	l5711
  7867                           
  7868                           ; BSR set to: 0
  7869  00399C  0E01               	movlw	1
  7870  00399E  6F74               	movwf	___awdiv@counter& (0+255),b
  7871  0039A0  D004               	goto	l5697
  7872  0039A2                     l5695:
  7873                           
  7874                           ; BSR set to: 0
  7875  0039A2  90D8               	bcf	status,0,c
  7876  0039A4  3772               	rlcf	___awdiv@divisor& (0+255),f,b
  7877  0039A6  3773               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  7878  0039A8  2B74               	incf	___awdiv@counter& (0+255),f,b
  7879  0039AA                     l5697:
  7880                           
  7881                           ; BSR set to: 0
  7882  0039AA  AF73               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  7883  0039AC  D7FA               	goto	l5695
  7884  0039AE                     u7240:
  7885                           
  7886                           ; BSR set to: 0
  7887  0039AE  90D8               	bcf	status,0,c
  7888  0039B0  3776               	rlcf	___awdiv@quotient& (0+255),f,b
  7889  0039B2  3777               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  7890                           
  7891                           ; BSR set to: 0
  7892  0039B4  5172               	movf	___awdiv@divisor& (0+255),w,b
  7893  0039B6  5D70               	subwf	___awdiv@dividend& (0+255),w,b
  7894  0039B8  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7895  0039BA  5971               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  7896  0039BC  A0D8               	btfss	status,0,c
  7897  0039BE  D005               	goto	l5707
  7898                           
  7899                           ; BSR set to: 0
  7900  0039C0  5172               	movf	___awdiv@divisor& (0+255),w,b
  7901  0039C2  5F70               	subwf	___awdiv@dividend& (0+255),f,b
  7902  0039C4  5173               	movf	(___awdiv@divisor+1)& (0+255),w,b
  7903  0039C6  5B71               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  7904                           
  7905                           ; BSR set to: 0
  7906  0039C8  8176               	bsf	___awdiv@quotient& (0+255),0,b
  7907  0039CA                     l5707:
  7908                           
  7909                           ; BSR set to: 0
  7910  0039CA  90D8               	bcf	status,0,c
  7911  0039CC  3373               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  7912  0039CE  3372               	rrcf	___awdiv@divisor& (0+255),f,b
  7913                           
  7914                           ; BSR set to: 0
  7915  0039D0  2F74               	decfsz	___awdiv@counter& (0+255),f,b
  7916  0039D2  D7ED               	goto	u7240
  7917  0039D4                     l5711:
  7918                           
  7919                           ; BSR set to: 0
  7920  0039D4  5175               	movf	___awdiv@sign& (0+255),w,b
  7921  0039D6  B4D8               	btfsc	status,2,c
  7922  0039D8  D004               	goto	l5715
  7923                           
  7924                           ; BSR set to: 0
  7925  0039DA  6D76               	negf	___awdiv@quotient& (0+255),b
  7926  0039DC  1F77               	comf	(___awdiv@quotient+1)& (0+255),f,b
  7927  0039DE  B0D8               	btfsc	status,0,c
  7928  0039E0  2B77               	incf	(___awdiv@quotient+1)& (0+255),f,b
  7929  0039E2                     l5715:
  7930                           
  7931                           ; BSR set to: 0
  7932  0039E2  C076  F070         	movff	___awdiv@quotient,?___awdiv
  7933  0039E6  C077  F071         	movff	___awdiv@quotient+1,?___awdiv+1
  7934                           
  7935                           ; BSR set to: 0
  7936  0039EA  0012               	return		;funcret
  7937  0039EC                     __end_of___awdiv:
  7938                           	opt callstack 0
  7939                           
  7940 ;; *************** function _atoi *****************
  7941 ;; Defined at:
  7942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  s               2   23[BANK0 ] PTR const unsigned char 
  7945 ;;		 -> STR_2(5), STR_1(5), 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  n               2   36[BANK0 ] int 
  7948 ;;  neg             2   29[BANK0 ] int 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  2   23[BANK0 ] int 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7961 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7962 ;;Total ram usage:       15 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    5
  7965 ;; This function calls:
  7966 ;;		___wmul
  7967 ;;		_isdigit
  7968 ;;		_isspace
  7969 ;; This function is called by:
  7970 ;;		_vfpfcnvrt
  7971 ;; This function uses a non-reentrant model
  7972 ;;
  7973                           
  7974                           	psect	text24
  7975  002F42                     __ptext24:
  7976                           	opt callstack 0
  7977  002F42                     _atoi:
  7978                           	opt callstack 22
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;incstack = 0
  7982  002F42  0E00               	movlw	0
  7983  002F44  0100               	movlb	0	; () banked
  7984  002F46  6F85               	movwf	(atoi@n+1)& (0+255),b
  7985  002F48  0E00               	movlw	0
  7986  002F4A  6F84               	movwf	atoi@n& (0+255),b
  7987  002F4C  0E00               	movlw	0
  7988  002F4E  6F7E               	movwf	(atoi@neg+1)& (0+255),b
  7989  002F50  0E00               	movlw	0
  7990  002F52  6F7D               	movwf	atoi@neg& (0+255),b
  7991  002F54  D002               	goto	l6159
  7992  002F56                     l6157:
  7993                           
  7994                           ; BSR set to: 0
  7995  002F56  4B77               	infsnz	atoi@s& (0+255),f,b
  7996  002F58  2B78               	incf	(atoi@s+1)& (0+255),f,b
  7997  002F5A                     l6159:
  7998                           
  7999                           ; BSR set to: 0
  8000  002F5A  0E01               	movlw	1
  8001  002F5C  6F83               	movwf	_atoi$1874& (0+255),b
  8002                           
  8003                           ; BSR set to: 0
  8004  002F5E  C077  FFF6         	movff	atoi@s,tblptrl
  8005  002F62  C078  FFF7         	movff	atoi@s+1,tblptrh
  8006  002F66                     	if	0	;tblptru may be non-zero
  8007  002F66                     	endif
  8008  002F66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8009  002F66  0E00               	movlw	low (__mediumconst shr (0+16))
  8010  002F68  6EF8               	movwf	tblptru,c
  8011  002F6A                     	endif
  8012  002F6A  0008               	tblrd		*
  8013  002F6C  50F5               	movf	tablat,w,c
  8014  002F6E  0A20               	xorlw	32
  8015  002F70  B4D8               	btfsc	status,2,c
  8016  002F72  D01A               	goto	l6167
  8017                           
  8018                           ; BSR set to: 0
  8019  002F74  0EF7               	movlw	247
  8020  002F76  6F79               	movwf	??_atoi& (0+255),b
  8021  002F78  0EFF               	movlw	255
  8022  002F7A  6F7A               	movwf	(??_atoi+1)& (0+255),b
  8023  002F7C  C077  FFF6         	movff	atoi@s,tblptrl
  8024  002F80  C078  FFF7         	movff	atoi@s+1,tblptrh
  8025  002F84                     	if	0	;tblptru may be non-zero
  8026  002F84                     	endif
  8027  002F84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8028  002F84  0E00               	movlw	low (__mediumconst shr (0+16))
  8029  002F86  6EF8               	movwf	tblptru,c
  8030  002F88                     	endif
  8031  002F88  0008               	tblrd		*
  8032  002F8A  50F5               	movf	tablat,w,c
  8033  002F8C  6F7B               	movwf	(??_atoi+2)& (0+255),b
  8034  002F8E  6B7C               	clrf	(??_atoi+3)& (0+255),b
  8035  002F90  5179               	movf	??_atoi& (0+255),w,b
  8036  002F92  277B               	addwf	(??_atoi+2)& (0+255),f,b
  8037  002F94  517A               	movf	(??_atoi+1)& (0+255),w,b
  8038  002F96  237C               	addwfc	(??_atoi+3)& (0+255),f,b
  8039  002F98  517C               	movf	(??_atoi+3)& (0+255),w,b
  8040  002F9A  E104               	bnz	u8040
  8041  002F9C  0E05               	movlw	5
  8042  002F9E  5D7B               	subwf	(??_atoi+2)& (0+255),w,b
  8043  002FA0  A0D8               	btfss	status,0,c
  8044  002FA2  D002               	goto	l6167
  8045  002FA4                     u8040:
  8046                           
  8047                           ; BSR set to: 0
  8048  002FA4  0E00               	movlw	0
  8049  002FA6  6F83               	movwf	_atoi$1874& (0+255),b
  8050  002FA8                     l6167:
  8051                           
  8052                           ; BSR set to: 0
  8053  002FA8  C083  F07F         	movff	_atoi$1874,_atoi$1873
  8054  002FAC  6B80               	clrf	(_atoi$1873+1)& (0+255),b
  8055                           
  8056                           ; BSR set to: 0
  8057  002FAE  517F               	movf	_atoi$1873& (0+255),w,b
  8058  002FB0  1180               	iorwf	(_atoi$1873+1)& (0+255),w,b
  8059  002FB2  B4D8               	btfsc	status,2,c
  8060  002FB4  D008               	goto	l6177
  8061  002FB6  D7CF               	goto	l6157
  8062  002FB8                     l6173:
  8063                           
  8064                           ; BSR set to: 0
  8065  002FB8  0E00               	movlw	0
  8066  002FBA  6F7E               	movwf	(atoi@neg+1)& (0+255),b
  8067  002FBC  0E01               	movlw	1
  8068  002FBE  6F7D               	movwf	atoi@neg& (0+255),b
  8069  002FC0                     l6175:
  8070                           
  8071                           ; BSR set to: 0
  8072  002FC0  4B77               	infsnz	atoi@s& (0+255),f,b
  8073  002FC2  2B78               	incf	(atoi@s+1)& (0+255),f,b
  8074  002FC4  D033               	goto	l6183
  8075  002FC6                     l6177:
  8076                           
  8077                           ; BSR set to: 0
  8078  002FC6  C077  FFF6         	movff	atoi@s,tblptrl
  8079  002FCA  C078  FFF7         	movff	atoi@s+1,tblptrh
  8080  002FCE                     	if	0	;tblptru may be non-zero
  8081  002FCE                     	endif
  8082  002FCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8083  002FCE  0E00               	movlw	low (__mediumconst shr (0+16))
  8084  002FD0  6EF8               	movwf	tblptru,c
  8085  002FD2                     	endif
  8086  002FD2  0008               	tblrd		*
  8087  002FD4  50F5               	movf	tablat,w,c
  8088  002FD6  6F79               	movwf	??_atoi& (0+255),b
  8089  002FD8  6B7A               	clrf	(??_atoi+1)& (0+255),b
  8090                           
  8091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8092                           ; Switch size 1, requested type "simple"
  8093                           ; Number of cases is 1, Range of values is 0 to 0
  8094                           ; switch strategies available:
  8095                           ; Name         Instructions Cycles
  8096                           ; simple_byte            4     3 (average)
  8097                           ;	Chosen strategy is simple_byte
  8098  002FDA  517A               	movf	(??_atoi+1)& (0+255),w,b
  8099  002FDC  0A00               	xorlw	0	; case 0
  8100  002FDE  A4D8               	btfss	status,2,c
  8101  002FE0  D025               	goto	l6183
  8102                           
  8103                           ; BSR set to: 0
  8104                           ; Switch size 1, requested type "simple"
  8105                           ; Number of cases is 2, Range of values is 43 to 45
  8106                           ; switch strategies available:
  8107                           ; Name         Instructions Cycles
  8108                           ; simple_byte            7     4 (average)
  8109                           ;	Chosen strategy is simple_byte
  8110  002FE2  5179               	movf	??_atoi& (0+255),w,b
  8111  002FE4  0A2B               	xorlw	43	; case 43
  8112  002FE6  B4D8               	btfsc	status,2,c
  8113  002FE8  D7EB               	goto	l6175
  8114  002FEA  0A06               	xorlw	6	; case 45
  8115  002FEC  B4D8               	btfsc	status,2,c
  8116  002FEE  D7E4               	goto	l6173
  8117  002FF0  D01D               	goto	l6183
  8118  002FF2                     l6179:
  8119                           
  8120                           ; BSR set to: 0
  8121  002FF2  C084  F070         	movff	atoi@n,___wmul@multiplier
  8122  002FF6  C085  F071         	movff	atoi@n+1,___wmul@multiplier+1
  8123  002FFA  0E00               	movlw	0
  8124  002FFC  6F73               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8125  002FFE  0E0A               	movlw	10
  8126  003000  6F72               	movwf	___wmul@multiplicand& (0+255),b
  8127  003002  EC35  F020         	call	___wmul	;wreg free
  8128  003006  C077  FFF6         	movff	atoi@s,tblptrl
  8129  00300A  C078  FFF7         	movff	atoi@s+1,tblptrh
  8130  00300E                     	if	0	;tblptru may be non-zero
  8131  00300E                     	endif
  8132  00300E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8133  00300E  0E00               	movlw	low (__mediumconst shr (0+16))
  8134  003010  6EF8               	movwf	tblptru,c
  8135  003012                     	endif
  8136  003012  0008               	tblrd		*
  8137  003014  50F5               	movf	tablat,w,c
  8138  003016  0100               	movlb	0	; () banked
  8139  003018  5F70               	subwf	?___wmul& (0+255),f,b
  8140  00301A  0E00               	movlw	0
  8141  00301C  5B71               	subwfb	(?___wmul+1)& (0+255),f,b
  8142  00301E  0E30               	movlw	48
  8143  003020  2570               	addwf	?___wmul& (0+255),w,b
  8144  003022  6F84               	movwf	atoi@n& (0+255),b
  8145  003024  0E00               	movlw	0
  8146  003026  2171               	addwfc	(?___wmul+1)& (0+255),w,b
  8147  003028  6F85               	movwf	(atoi@n+1)& (0+255),b
  8148  00302A  D7CA               	goto	l6175
  8149  00302C                     l6183:
  8150                           
  8151                           ; BSR set to: 0
  8152  00302C  0ED0               	movlw	208
  8153  00302E  6F79               	movwf	??_atoi& (0+255),b
  8154  003030  0EFF               	movlw	255
  8155  003032  6F7A               	movwf	(??_atoi+1)& (0+255),b
  8156  003034  C077  FFF6         	movff	atoi@s,tblptrl
  8157  003038  C078  FFF7         	movff	atoi@s+1,tblptrh
  8158  00303C                     	if	0	;tblptru may be non-zero
  8159  00303C                     	endif
  8160  00303C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8161  00303C  0E00               	movlw	low (__mediumconst shr (0+16))
  8162  00303E  6EF8               	movwf	tblptru,c
  8163  003040                     	endif
  8164  003040  0008               	tblrd		*
  8165  003042  50F5               	movf	tablat,w,c
  8166  003044  6F7B               	movwf	(??_atoi+2)& (0+255),b
  8167  003046  6B7C               	clrf	(??_atoi+3)& (0+255),b
  8168  003048  5179               	movf	??_atoi& (0+255),w,b
  8169  00304A  277B               	addwf	(??_atoi+2)& (0+255),f,b
  8170  00304C  517A               	movf	(??_atoi+1)& (0+255),w,b
  8171  00304E  237C               	addwfc	(??_atoi+3)& (0+255),f,b
  8172  003050  517C               	movf	(??_atoi+3)& (0+255),w,b
  8173  003052  E106               	bnz	u8060
  8174  003054  0E0A               	movlw	10
  8175  003056  5D7B               	subwf	(??_atoi+2)& (0+255),w,b
  8176  003058  B0D8               	btfsc	status,0,c
  8177  00305A  D002               	goto	u8060
  8178  00305C  0E01               	movlw	1
  8179  00305E  D001               	goto	u8070
  8180  003060                     u8060:
  8181  003060  0E00               	movlw	0
  8182  003062                     u8070:
  8183  003062  6F81               	movwf	_atoi$1875& (0+255),b
  8184  003064  6B82               	clrf	(_atoi$1875+1)& (0+255),b
  8185                           
  8186                           ; BSR set to: 0
  8187  003066  5181               	movf	_atoi$1875& (0+255),w,b
  8188  003068  1182               	iorwf	(_atoi$1875+1)& (0+255),w,b
  8189  00306A  A4D8               	btfss	status,2,c
  8190  00306C  D7C2               	goto	l6179
  8191                           
  8192                           ; BSR set to: 0
  8193  00306E  517D               	movf	atoi@neg& (0+255),w,b
  8194  003070  117E               	iorwf	(atoi@neg+1)& (0+255),w,b
  8195  003072  A4D8               	btfss	status,2,c
  8196  003074  D00D               	goto	l1151
  8197                           
  8198                           ; BSR set to: 0
  8199  003076  C084  F079         	movff	atoi@n,??_atoi
  8200  00307A  C085  F07A         	movff	atoi@n+1,??_atoi+1
  8201  00307E  1F79               	comf	??_atoi& (0+255),f,b
  8202  003080  1F7A               	comf	(??_atoi+1)& (0+255),f,b
  8203  003082  4B79               	infsnz	??_atoi& (0+255),f,b
  8204  003084  2B7A               	incf	(??_atoi+1)& (0+255),f,b
  8205  003086  C079  F077         	movff	??_atoi,?_atoi
  8206  00308A  C07A  F078         	movff	??_atoi+1,?_atoi+1
  8207  00308E  0012               	return	
  8208  003090                     l1151:
  8209                           
  8210                           ; BSR set to: 0
  8211  003090  C084  F077         	movff	atoi@n,?_atoi
  8212  003094  C085  F078         	movff	atoi@n+1,?_atoi+1
  8213                           
  8214                           ; BSR set to: 0
  8215  003098  0012               	return		;funcret
  8216  00309A                     __end_of_atoi:
  8217                           	opt callstack 0
  8218                           
  8219 ;; *************** function _isspace *****************
  8220 ;; Defined at:
  8221 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  c               2   16[BANK0 ] int 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  2   16[BANK0 ] int 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;Total ram usage:        7 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    4
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_atoi
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text25
  8250  003F22                     __ptext25:
  8251                           	opt callstack 0
  8252  003F22                     _isspace:
  8253                           	opt callstack 22
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;incstack = 0
  8257  003F22  0E01               	movlw	1
  8258  003F24  0100               	movlb	0	; () banked
  8259  003F26  6F76               	movwf	_isspace$1904& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262  003F28  0E20               	movlw	32
  8263  003F2A  1970               	xorwf	isspace@c& (0+255),w,b
  8264  003F2C  1171               	iorwf	(isspace@c+1)& (0+255),w,b
  8265  003F2E  B4D8               	btfsc	status,2,c
  8266  003F30  D014               	goto	l5853
  8267                           
  8268                           ; BSR set to: 0
  8269  003F32  0EF7               	movlw	247
  8270  003F34  6F72               	movwf	??_isspace& (0+255),b
  8271  003F36  0EFF               	movlw	255
  8272  003F38  6F73               	movwf	(??_isspace+1)& (0+255),b
  8273  003F3A  C070  F074         	movff	isspace@c,??_isspace+2
  8274  003F3E  C071  F075         	movff	isspace@c+1,??_isspace+3
  8275  003F42  5172               	movf	??_isspace& (0+255),w,b
  8276  003F44  2774               	addwf	(??_isspace+2)& (0+255),f,b
  8277  003F46  5173               	movf	(??_isspace+1)& (0+255),w,b
  8278  003F48  2375               	addwfc	(??_isspace+3)& (0+255),f,b
  8279  003F4A  5175               	movf	(??_isspace+3)& (0+255),w,b
  8280  003F4C  E104               	bnz	u7500
  8281  003F4E  0E05               	movlw	5
  8282  003F50  5D74               	subwf	(??_isspace+2)& (0+255),w,b
  8283  003F52  A0D8               	btfss	status,0,c
  8284  003F54  D002               	goto	l5853
  8285  003F56                     u7500:
  8286                           
  8287                           ; BSR set to: 0
  8288  003F56  0E00               	movlw	0
  8289  003F58  6F76               	movwf	_isspace$1904& (0+255),b
  8290  003F5A                     l5853:
  8291                           
  8292                           ; BSR set to: 0
  8293  003F5A  C076  F070         	movff	_isspace$1904,?_isspace
  8294  003F5E  6B71               	clrf	(?_isspace+1)& (0+255),b
  8295                           
  8296                           ; BSR set to: 0
  8297  003F60  0012               	return		;funcret
  8298  003F62                     __end_of_isspace:
  8299                           	opt callstack 0
  8300                           
  8301 ;; *************** function _isdigit *****************
  8302 ;; Defined at:
  8303 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  c               2   16[BANK0 ] int 
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  2   16[BANK0 ] int 
  8310 ;; Registers used:
  8311 ;;		wreg, status,2, status,0
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8319 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;Total ram usage:        6 bytes
  8322 ;; Hardware stack levels used:    1
  8323 ;; Hardware stack levels required when called:    4
  8324 ;; This function calls:
  8325 ;;		Nothing
  8326 ;; This function is called by:
  8327 ;;		_vfpfcnvrt
  8328 ;;		_atoi
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           	psect	text26
  8333  004008                     __ptext26:
  8334                           	opt callstack 0
  8335  004008                     _isdigit:
  8336                           	opt callstack 23
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;incstack = 0
  8340  004008  0ED0               	movlw	208
  8341  00400A  0100               	movlb	0	; () banked
  8342  00400C  6F72               	movwf	??_isdigit& (0+255),b
  8343  00400E  0EFF               	movlw	255
  8344  004010  6F73               	movwf	(??_isdigit+1)& (0+255),b
  8345  004012  C070  F074         	movff	isdigit@c,??_isdigit+2
  8346  004016  C071  F075         	movff	isdigit@c+1,??_isdigit+3
  8347  00401A  5172               	movf	??_isdigit& (0+255),w,b
  8348  00401C  2774               	addwf	(??_isdigit+2)& (0+255),f,b
  8349  00401E  5173               	movf	(??_isdigit+1)& (0+255),w,b
  8350  004020  2375               	addwfc	(??_isdigit+3)& (0+255),f,b
  8351  004022  5175               	movf	(??_isdigit+3)& (0+255),w,b
  8352  004024  E106               	bnz	u6770
  8353  004026  0E0A               	movlw	10
  8354  004028  5D74               	subwf	(??_isdigit+2)& (0+255),w,b
  8355  00402A  B0D8               	btfsc	status,0,c
  8356  00402C  D002               	goto	u6770
  8357  00402E  0E01               	movlw	1
  8358  004030  D001               	goto	u6780
  8359  004032                     u6770:
  8360  004032  0E00               	movlw	0
  8361  004034                     u6780:
  8362  004034  6F70               	movwf	?_isdigit& (0+255),b
  8363  004036  6B71               	clrf	(?_isdigit+1)& (0+255),b
  8364                           
  8365                           ; BSR set to: 0
  8366  004038  0012               	return		;funcret
  8367  00403A                     __end_of_isdigit:
  8368                           	opt callstack 0
  8369                           
  8370 ;; *************** function ___wmul *****************
  8371 ;; Defined at:
  8372 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  multiplier      2   16[BANK0 ] unsigned int 
  8375 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  product         2   20[BANK0 ] unsigned int 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  2   16[BANK0 ] unsigned int 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, prodl, prodh
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8391 ;;Total ram usage:        6 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    4
  8394 ;; This function calls:
  8395 ;;		Nothing
  8396 ;; This function is called by:
  8397 ;;		_atoi
  8398 ;; This function uses a non-reentrant model
  8399 ;;
  8400                           
  8401                           	psect	text27
  8402  00406A                     __ptext27:
  8403                           	opt callstack 0
  8404  00406A                     ___wmul:
  8405                           	opt callstack 22
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;incstack = 0
  8409  00406A  0100               	movlb	0	; () banked
  8410  00406C  5170               	movf	___wmul@multiplier& (0+255),w,b
  8411  00406E  0372               	mulwf	___wmul@multiplicand& (0+255),b
  8412  004070  CFF3 F074          	movff	prodl,___wmul@product
  8413  004074  CFF4 F075          	movff	prodh,___wmul@product+1
  8414  004078  5170               	movf	___wmul@multiplier& (0+255),w,b
  8415  00407A  0373               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8416  00407C  50F3               	movf	prodl,w,c
  8417  00407E  2775               	addwf	(___wmul@product+1)& (0+255),f,b
  8418  004080  5171               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8419  004082  0372               	mulwf	___wmul@multiplicand& (0+255),b
  8420  004084  50F3               	movf	prodl,w,c
  8421  004086  2775               	addwf	(___wmul@product+1)& (0+255),f,b
  8422                           
  8423                           ; BSR set to: 0
  8424  004088  C074  F070         	movff	___wmul@product,?___wmul
  8425  00408C  C075  F071         	movff	___wmul@product+1,?___wmul+1
  8426                           
  8427                           ; BSR set to: 0
  8428  004090  0012               	return		;funcret
  8429  004092                     __end_of___wmul:
  8430                           	opt callstack 0
  8431                           
  8432 ;; *************** function _checkCommand *****************
  8433 ;; Defined at:
  8434 ;;		line 365 in file "George_Wyatt_Lab6.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  cmd             2   38[BANK0 ] PTR const unsigned char 
  8437 ;;		 -> commandString(10), 
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8453 ;;Total ram usage:        2 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    7
  8456 ;; This function calls:
  8457 ;;		_dispPot
  8458 ;;		_dispTemp
  8459 ;;		_sendChars
  8460 ;;		_strcmp
  8461 ;; This function is called by:
  8462 ;;		_main
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text28
  8467  003CC6                     __ptext28:
  8468                           	opt callstack 0
  8469  003CC6                     _checkCommand:
  8470                           	opt callstack 23
  8471                           
  8472                           ;George_Wyatt_Lab6.c: 366:     if(!strcmp(cmd,"TEMP")){
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;incstack = 0
  8476  003CC6  C086  F070         	movff	checkCommand@cmd,strcmp@l
  8477  003CCA  C087  F071         	movff	checkCommand@cmd+1,strcmp@l+1
  8478  003CCE  0E30               	movlw	low STR_3
  8479  003CD0  0100               	movlb	0	; () banked
  8480  003CD2  6F72               	movwf	strcmp@r& (0+255),b
  8481  003CD4  0E10               	movlw	high STR_3
  8482  003CD6  6F73               	movwf	(strcmp@r+1)& (0+255),b
  8483  003CD8  ECD8  F01D         	call	_strcmp	;wreg free
  8484  003CDC  0100               	movlb	0	; () banked
  8485  003CDE  5170               	movf	?_strcmp& (0+255),w,b
  8486  003CE0  1171               	iorwf	(?_strcmp+1)& (0+255),w,b
  8487  003CE2  A4D8               	btfss	status,2,c
  8488  003CE4  D003               	goto	l6731
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;George_Wyatt_Lab6.c: 367:         dispTemp();
  8492  003CE6  EC4D  F01F         	call	_dispTemp	;wreg free
  8493  003CEA  0012               	return	
  8494  003CEC                     l6731:
  8495                           
  8496                           ; BSR set to: 0
  8497                           ;George_Wyatt_Lab6.c: 370:         if(!strcmp(cmd,"POT")){
  8498  003CEC  C086  F070         	movff	checkCommand@cmd,strcmp@l
  8499  003CF0  C087  F071         	movff	checkCommand@cmd+1,strcmp@l+1
  8500  003CF4  0E4F               	movlw	low STR_5
  8501  003CF6  6F72               	movwf	strcmp@r& (0+255),b
  8502  003CF8  0E10               	movlw	high STR_5
  8503  003CFA  6F73               	movwf	(strcmp@r+1)& (0+255),b
  8504  003CFC  ECD8  F01D         	call	_strcmp	;wreg free
  8505  003D00  0100               	movlb	0	; () banked
  8506  003D02  5170               	movf	?_strcmp& (0+255),w,b
  8507  003D04  1171               	iorwf	(?_strcmp+1)& (0+255),w,b
  8508  003D06  A4D8               	btfss	status,2,c
  8509  003D08  D003               	goto	l6737
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;George_Wyatt_Lab6.c: 371:             dispPot();
  8513  003D0A  EC6F  F01F         	call	_dispPot	;wreg free
  8514  003D0E  0012               	return	
  8515  003D10                     l6737:
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;George_Wyatt_Lab6.c: 374:     sendChars("NOT A VALID COMMAND!");
  8519  003D10  0E1B               	movlw	low STR_7
  8520  003D12  6F74               	movwf	sendChars@letters& (0+255),b
  8521  003D14  0E10               	movlw	high STR_7
  8522  003D16  6F75               	movwf	(sendChars@letters+1)& (0+255),b
  8523  003D18  EC71  F01D         	call	_sendChars	;wreg free
  8524  003D1C  0012               	return		;funcret
  8525  003D1E                     __end_of_checkCommand:
  8526                           	opt callstack 0
  8527                           
  8528 ;; *************** function _strcmp *****************
  8529 ;; Defined at:
  8530 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcmp.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;  l               2   16[BANK0 ] PTR const unsigned char 
  8533 ;;		 -> commandString(10), 
  8534 ;;  r               2   18[BANK0 ] PTR const unsigned char 
  8535 ;;		 -> STR_6(4), STR_4(5), 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  2   16[BANK0 ] int 
  8540 ;; Registers used:
  8541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8547 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;Total ram usage:        5 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; Hardware stack levels required when called:    4
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_checkCommand
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text29
  8562  003BB0                     __ptext29:
  8563                           	opt callstack 0
  8564  003BB0                     _strcmp:
  8565                           	opt callstack 25
  8566                           
  8567                           ;incstack = 0
  8568  003BB0  D004               	goto	l6391
  8569  003BB2                     l6389:
  8570                           
  8571                           ; BSR set to: 0
  8572  003BB2  4B70               	infsnz	strcmp@l& (0+255),f,b
  8573  003BB4  2B71               	incf	(strcmp@l+1)& (0+255),f,b
  8574  003BB6  4B72               	infsnz	strcmp@r& (0+255),f,b
  8575  003BB8  2B73               	incf	(strcmp@r+1)& (0+255),f,b
  8576  003BBA                     l6391:
  8577  003BBA  C070  FFD9         	movff	strcmp@l,fsr2l
  8578  003BBE  C071  FFDA         	movff	strcmp@l+1,fsr2h
  8579  003BC2  50DF               	movf	indf2,w,c
  8580  003BC4  0100               	movlb	0	; () banked
  8581  003BC6  6F74               	movwf	??_strcmp& (0+255),b
  8582  003BC8  C072  FFF6         	movff	strcmp@r,tblptrl
  8583  003BCC  C073  FFF7         	movff	strcmp@r+1,tblptrh
  8584  003BD0                     	if	0	;tblptru may be non-zero
  8585  003BD0                     	endif
  8586  003BD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8587  003BD0  0E00               	movlw	low (__mediumconst shr (0+16))
  8588  003BD2  6EF8               	movwf	tblptru,c
  8589  003BD4                     	endif
  8590  003BD4  0008               	tblrd		*
  8591  003BD6  50F5               	movf	tablat,w,c
  8592  003BD8  1974               	xorwf	??_strcmp& (0+255),w,b
  8593  003BDA  A4D8               	btfss	status,2,c
  8594  003BDC  D007               	goto	u8370
  8595                           
  8596                           ; BSR set to: 0
  8597  003BDE  C070  FFD9         	movff	strcmp@l,fsr2l
  8598  003BE2  C071  FFDA         	movff	strcmp@l+1,fsr2h
  8599  003BE6  50DF               	movf	indf2,w,c
  8600  003BE8  A4D8               	btfss	status,2,c
  8601  003BEA  D7E3               	goto	l6389
  8602  003BEC                     u8370:
  8603                           
  8604                           ; BSR set to: 0
  8605  003BEC  C070  FFD9         	movff	strcmp@l,fsr2l
  8606  003BF0  C071  FFDA         	movff	strcmp@l+1,fsr2h
  8607  003BF4  50DF               	movf	indf2,w,c
  8608  003BF6  6F74               	movwf	??_strcmp& (0+255),b
  8609  003BF8  C072  FFF6         	movff	strcmp@r,tblptrl
  8610  003BFC  C073  FFF7         	movff	strcmp@r+1,tblptrh
  8611  003C00                     	if	0	;tblptru may be non-zero
  8612  003C00                     	endif
  8613  003C00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8614  003C00  0E00               	movlw	low (__mediumconst shr (0+16))
  8615  003C02  6EF8               	movwf	tblptru,c
  8616  003C04                     	endif
  8617  003C04  0008               	tblrd		*
  8618  003C06  50F5               	movf	tablat,w,c
  8619  003C08  5D74               	subwf	??_strcmp& (0+255),w,b
  8620  003C0A  6F70               	movwf	?_strcmp& (0+255),b
  8621  003C0C  6B71               	clrf	(?_strcmp+1)& (0+255),b
  8622  003C0E  A0D8               	btfss	status,0,c
  8623  003C10  0771               	decf	(?_strcmp+1)& (0+255),f,b
  8624                           
  8625                           ; BSR set to: 0
  8626  003C12  0012               	return		;funcret
  8627  003C14                     __end_of_strcmp:
  8628                           	opt callstack 0
  8629                           
  8630 ;; *************** function _dispTemp *****************
  8631 ;; Defined at:
  8632 ;;		line 377 in file "George_Wyatt_Lab6.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;		None
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  i               2   36[BANK0 ] int 
  8637 ;;  temp           10   26[BANK0 ] unsigned char [10]
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8648 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;Total ram usage:       12 bytes
  8652 ;; Hardware stack levels used:    1
  8653 ;; Hardware stack levels required when called:    6
  8654 ;; This function calls:
  8655 ;;		_sendChars
  8656 ;; This function is called by:
  8657 ;;		_checkCommand
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text30
  8662  003E9A                     __ptext30:
  8663                           	opt callstack 0
  8664  003E9A                     _dispTemp:
  8665                           	opt callstack 23
  8666                           
  8667                           ;George_Wyatt_Lab6.c: 378:     char temp[sizeof(temperatureString)];;George_Wyatt_Lab6.c
      +                          : 379:     for(int i = 0; i < sizeof(temperatureString)-1; i++){
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;incstack = 0
  8671  003E9A  0E00               	movlw	0
  8672  003E9C  0100               	movlb	0	; () banked
  8673  003E9E  6F85               	movwf	(dispTemp@i+1)& (0+255),b
  8674  003EA0  0E00               	movlw	0
  8675  003EA2  6F84               	movwf	dispTemp@i& (0+255),b
  8676  003EA4                     l6405:
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;George_Wyatt_Lab6.c: 380:         temp[i] = temperatureString[i+3];
  8680  003EA4  0E69               	movlw	low (_temperatureString+3)
  8681  003EA6  2584               	addwf	dispTemp@i& (0+255),w,b
  8682  003EA8  6ED9               	movwf	fsr2l,c
  8683  003EAA  0E01               	movlw	high (_temperatureString+3)
  8684  003EAC  2185               	addwfc	(dispTemp@i+1)& (0+255),w,b
  8685  003EAE  6EDA               	movwf	fsr2h,c
  8686  003EB0  0E7A               	movlw	low dispTemp@temp
  8687  003EB2  2584               	addwf	dispTemp@i& (0+255),w,b
  8688  003EB4  6EE1               	movwf	fsr1l,c
  8689  003EB6  0E00               	movlw	high dispTemp@temp
  8690  003EB8  2185               	addwfc	(dispTemp@i+1)& (0+255),w,b
  8691  003EBA  6EE2               	movwf	fsr1h,c
  8692  003EBC  CFDF FFE7          	movff	indf2,indf1
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;George_Wyatt_Lab6.c: 381:     }
  8696  003EC0  4B84               	infsnz	dispTemp@i& (0+255),f,b
  8697  003EC2  2B85               	incf	(dispTemp@i+1)& (0+255),f,b
  8698                           
  8699                           ; BSR set to: 0
  8700  003EC4  5185               	movf	(dispTemp@i+1)& (0+255),w,b
  8701  003EC6  E104               	bnz	u8380
  8702  003EC8  0E09               	movlw	9
  8703  003ECA  5D84               	subwf	dispTemp@i& (0+255),w,b
  8704  003ECC  A0D8               	btfss	status,0,c
  8705  003ECE  D7EA               	goto	l6405
  8706  003ED0                     u8380:
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;George_Wyatt_Lab6.c: 382:     sendChars(temp);
  8710  003ED0  0E7A               	movlw	low dispTemp@temp
  8711  003ED2  6F74               	movwf	sendChars@letters& (0+255),b
  8712  003ED4  0E00               	movlw	high dispTemp@temp
  8713  003ED6  6F75               	movwf	(sendChars@letters+1)& (0+255),b
  8714  003ED8  EC71  F01D         	call	_sendChars	;wreg free
  8715  003EDC  0012               	return		;funcret
  8716  003EDE                     __end_of_dispTemp:
  8717                           	opt callstack 0
  8718                           
  8719 ;; *************** function _dispPot *****************
  8720 ;; Defined at:
  8721 ;;		line 385 in file "George_Wyatt_Lab6.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;		None
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;  i               2   36[BANK0 ] int 
  8726 ;;  temp           10   26[BANK0 ] unsigned char [10]
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      void 
  8729 ;; Registers used:
  8730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8737 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8739 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8740 ;;Total ram usage:       12 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:    6
  8743 ;; This function calls:
  8744 ;;		_sendChars
  8745 ;; This function is called by:
  8746 ;;		_checkCommand
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           
  8750                           	psect	text31
  8751  003EDE                     __ptext31:
  8752                           	opt callstack 0
  8753  003EDE                     _dispPot:
  8754                           	opt callstack 23
  8755                           
  8756                           ;George_Wyatt_Lab6.c: 386:     char temp[sizeof(potString)];;George_Wyatt_Lab6.c: 387:  
      +                             for(int i = 0; i < sizeof(potString)-1; i++){
  8757                           
  8758                           ;incstack = 0
  8759  003EDE  0E00               	movlw	0
  8760  003EE0  0100               	movlb	0	; () banked
  8761  003EE2  6F85               	movwf	(dispPot@i+1)& (0+255),b
  8762  003EE4  0E00               	movlw	0
  8763  003EE6  6F84               	movwf	dispPot@i& (0+255),b
  8764  003EE8                     l6419:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;George_Wyatt_Lab6.c: 388:         temp[i] = potString[i+4];
  8768  003EE8  0E74               	movlw	low (_potString+4)
  8769  003EEA  2584               	addwf	dispPot@i& (0+255),w,b
  8770  003EEC  6ED9               	movwf	fsr2l,c
  8771  003EEE  0E01               	movlw	high (_potString+4)
  8772  003EF0  2185               	addwfc	(dispPot@i+1)& (0+255),w,b
  8773  003EF2  6EDA               	movwf	fsr2h,c
  8774  003EF4  0E7A               	movlw	low dispPot@temp
  8775  003EF6  2584               	addwf	dispPot@i& (0+255),w,b
  8776  003EF8  6EE1               	movwf	fsr1l,c
  8777  003EFA  0E00               	movlw	high dispPot@temp
  8778  003EFC  2185               	addwfc	(dispPot@i+1)& (0+255),w,b
  8779  003EFE  6EE2               	movwf	fsr1h,c
  8780  003F00  CFDF FFE7          	movff	indf2,indf1
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;George_Wyatt_Lab6.c: 389:     }
  8784  003F04  4B84               	infsnz	dispPot@i& (0+255),f,b
  8785  003F06  2B85               	incf	(dispPot@i+1)& (0+255),f,b
  8786                           
  8787                           ; BSR set to: 0
  8788  003F08  5185               	movf	(dispPot@i+1)& (0+255),w,b
  8789  003F0A  E104               	bnz	u8390
  8790  003F0C  0E09               	movlw	9
  8791  003F0E  5D84               	subwf	dispPot@i& (0+255),w,b
  8792  003F10  A0D8               	btfss	status,0,c
  8793  003F12  D7EA               	goto	l6419
  8794  003F14                     u8390:
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;George_Wyatt_Lab6.c: 390:     sendChars(temp);
  8798  003F14  0E7A               	movlw	low dispPot@temp
  8799  003F16  6F74               	movwf	sendChars@letters& (0+255),b
  8800  003F18  0E00               	movlw	high dispPot@temp
  8801  003F1A  6F75               	movwf	(sendChars@letters+1)& (0+255),b
  8802  003F1C  EC71  F01D         	call	_sendChars	;wreg free
  8803  003F20  0012               	return		;funcret
  8804  003F22                     __end_of_dispPot:
  8805                           	opt callstack 0
  8806                           
  8807 ;; *************** function _sendChars *****************
  8808 ;; Defined at:
  8809 ;;		line 354 in file "George_Wyatt_Lab6.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  letters         2   20[BANK0 ] PTR const unsigned char 
  8812 ;;		 -> dispPot@temp(10), dispTemp@temp(10), STR_7(21), 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  count           2   24[BANK0 ] int 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;Total ram usage:        6 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; Hardware stack levels required when called:    5
  8831 ;; This function calls:
  8832 ;;		_strlen
  8833 ;; This function is called by:
  8834 ;;		_checkCommand
  8835 ;;		_dispTemp
  8836 ;;		_dispPot
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           	psect	text32
  8841  003AE2                     __ptext32:
  8842                           	opt callstack 0
  8843  003AE2                     _sendChars:
  8844                           	opt callstack 24
  8845                           
  8846                           ;George_Wyatt_Lab6.c: 355:     int count = 0;
  8847                           
  8848                           ;incstack = 0
  8849  003AE2  0E00               	movlw	0
  8850  003AE4  0100               	movlb	0	; () banked
  8851  003AE6  6F79               	movwf	(sendChars@count+1)& (0+255),b
  8852  003AE8  0E00               	movlw	0
  8853  003AEA  6F78               	movwf	sendChars@count& (0+255),b
  8854                           
  8855                           ;George_Wyatt_Lab6.c: 356:     while(count<strlen(letters)){
  8856  003AEC  D020               	goto	l6225
  8857  003AEE                     l250:
  8858  003AEE  A89E               	btfss	3998,4,c	;volatile
  8859  003AF0  D7FE               	goto	l250
  8860                           
  8861                           ;George_Wyatt_Lab6.c: 358:                 TXREG1 = letters[count];
  8862  003AF2  0100               	movlb	0	; () banked
  8863  003AF4  5178               	movf	sendChars@count& (0+255),w,b
  8864  003AF6  2574               	addwf	sendChars@letters& (0+255),w,b
  8865  003AF8  6F76               	movwf	??_sendChars& (0+255),b
  8866  003AFA  5179               	movf	(sendChars@count+1)& (0+255),w,b
  8867  003AFC  2175               	addwfc	(sendChars@letters+1)& (0+255),w,b
  8868  003AFE  6F77               	movwf	(??_sendChars+1)& (0+255),b
  8869  003B00  C076  FFF6         	movff	??_sendChars,tblptrl
  8870  003B04  C077  FFF7         	movff	??_sendChars+1,tblptrh
  8871  003B08  0E00               	movlw	low (__smallconst shr (0+16))
  8872  003B0A  6EF8               	movwf	tblptru,c
  8873  003B0C  0E0F               	movlw	(high __ramtop+-1)
  8874  003B0E  64F7               	cpfsgt	tblptrh,c
  8875  003B10  D003               	bra	u8167
  8876  003B12  0008               	tblrd		*
  8877  003B14  50F5               	movf	tablat,w,c
  8878  003B16  D005               	bra	u8160
  8879  003B18                     u8167:
  8880  003B18  CFF6 FFE1          	movff	tblptrl,fsr1l
  8881  003B1C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8882  003B20  50E7               	movf	indf1,w,c
  8883  003B22                     u8160:
  8884  003B22  6EAD               	movwf	4013,c	;volatile
  8885                           
  8886                           ;George_Wyatt_Lab6.c: 359:                 _delay((unsigned long)((1)*(16000000/4000000.
      +                          0)));
  8887  003B24  D000               	nop2		;2 cycle nop
  8888  003B26  D000               	nop2		;2 cycle nop
  8889                           
  8890                           ;George_Wyatt_Lab6.c: 360:                 count++;
  8891  003B28  0100               	movlb	0	; () banked
  8892  003B2A  4B78               	infsnz	sendChars@count& (0+255),f,b
  8893  003B2C  2B79               	incf	(sendChars@count+1)& (0+255),f,b
  8894  003B2E                     l6225:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;George_Wyatt_Lab6.c: 356:     while(count<strlen(letters)){
  8898  003B2E  C074  F070         	movff	sendChars@letters,strlen@s
  8899  003B32  C075  F071         	movff	sendChars@letters+1,strlen@s+1
  8900  003B36  EC29  F01F         	call	_strlen	;wreg free
  8901  003B3A  0100               	movlb	0	; () banked
  8902  003B3C  5170               	movf	?_strlen& (0+255),w,b
  8903  003B3E  5D78               	subwf	sendChars@count& (0+255),w,b
  8904  003B40  5171               	movf	(?_strlen+1)& (0+255),w,b
  8905  003B42  5979               	subwfb	(sendChars@count+1)& (0+255),w,b
  8906  003B44  B0D8               	btfsc	status,0,c
  8907  003B46  0012               	return	
  8908  003B48  D7D2               	goto	l250
  8909  003B4A                     __end_of_sendChars:
  8910                           	opt callstack 0
  8911                           
  8912 ;; *************** function _strlen *****************
  8913 ;; Defined at:
  8914 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  8917 ;;		 -> dbuf(80), dispPot@temp(10), dispTemp@temp(10), STR_7(21), 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  a               2   18[BANK0 ] PTR const unsigned char 
  8920 ;;		 -> dbuf(80), dispPot@temp(10), dispTemp@temp(10), STR_7(21), 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  2   16[BANK0 ] unsigned int 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;Total ram usage:        4 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:    4
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_sendChars
  8941 ;;		_pad
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	text33
  8946  003E52                     __ptext33:
  8947                           	opt callstack 0
  8948  003E52                     _strlen:
  8949                           	opt callstack 21
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;incstack = 0
  8953  003E52  C070  F072         	movff	strlen@s,strlen@a
  8954  003E56  C071  F073         	movff	strlen@s+1,strlen@a+1
  8955  003E5A  D003               	goto	l5085
  8956  003E5C                     l5083:
  8957  003E5C  0100               	movlb	0	; () banked
  8958  003E5E  4B70               	infsnz	strlen@s& (0+255),f,b
  8959  003E60  2B71               	incf	(strlen@s+1)& (0+255),f,b
  8960  003E62                     l5085:
  8961  003E62  C070  FFF6         	movff	strlen@s,tblptrl
  8962  003E66  C071  FFF7         	movff	strlen@s+1,tblptrh
  8963  003E6A  0E00               	movlw	low (__smallconst shr (0+16))
  8964  003E6C  6EF8               	movwf	tblptru,c
  8965  003E6E  0E0F               	movlw	(high __ramtop+-1)
  8966  003E70  64F7               	cpfsgt	tblptrh,c
  8967  003E72  D003               	bra	u6077
  8968  003E74  0008               	tblrd		*
  8969  003E76  50F5               	movf	tablat,w,c
  8970  003E78  D005               	bra	u6070
  8971  003E7A                     u6077:
  8972  003E7A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8973  003E7E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8974  003E82  50E7               	movf	indf1,w,c
  8975  003E84                     u6070:
  8976  003E84  0900               	iorlw	0
  8977  003E86  A4D8               	btfss	status,2,c
  8978  003E88  D7E9               	goto	l5083
  8979  003E8A  0100               	movlb	0	; () banked
  8980  003E8C  5172               	movf	strlen@a& (0+255),w,b
  8981  003E8E  5D70               	subwf	strlen@s& (0+255),w,b
  8982  003E90  6F70               	movwf	?_strlen& (0+255),b
  8983  003E92  5173               	movf	(strlen@a+1)& (0+255),w,b
  8984  003E94  5971               	subwfb	(strlen@s+1)& (0+255),w,b
  8985  003E96  6F71               	movwf	(?_strlen+1)& (0+255),b
  8986                           
  8987                           ; BSR set to: 0
  8988  003E98  0012               	return		;funcret
  8989  003E9A                     __end_of_strlen:
  8990                           	opt callstack 0
  8991                           
  8992 ;; *************** function ___xxtofl *****************
  8993 ;; Defined at:
  8994 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  sign            1    wreg     unsigned char 
  8997 ;;  val             4   16[BANK0 ] long 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  sign            1   24[BANK0 ] unsigned char 
  9000 ;;  arg             4   26[BANK0 ] unsigned long 
  9001 ;;  exp             1   25[BANK0 ] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  4   16[BANK0 ] unsigned char 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9012 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9014 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9015 ;;Total ram usage:       14 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    4
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_main
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text34
  9026  00309A                     __ptext34:
  9027                           	opt callstack 0
  9028  00309A                     ___xxtofl:
  9029                           	opt callstack 26
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;incstack = 0
  9033                           ;___xxtofl@sign stored from wreg
  9034  00309A  0100               	movlb	0	; () banked
  9035  00309C  6F78               	movwf	___xxtofl@sign& (0+255),b
  9036  00309E  0100               	movlb	0	; () banked
  9037  0030A0  5178               	movf	___xxtofl@sign& (0+255),w,b
  9038  0030A2  A4D8               	btfss	status,2,c
  9039                           
  9040                           ; BSR set to: 0
  9041  0030A4  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9042  0030A6  D01A               	goto	l1096
  9043                           
  9044                           ; BSR set to: 0
  9045  0030A8  C070  F074         	movff	___xxtofl@val,??___xxtofl
  9046  0030AC  C071  F075         	movff	___xxtofl@val+1,??___xxtofl+1
  9047  0030B0  C072  F076         	movff	___xxtofl@val+2,??___xxtofl+2
  9048  0030B4  C073  F077         	movff	___xxtofl@val+3,??___xxtofl+3
  9049  0030B8  1F74               	comf	??___xxtofl& (0+255),f,b
  9050  0030BA  1F75               	comf	(??___xxtofl+1)& (0+255),f,b
  9051  0030BC  1F76               	comf	(??___xxtofl+2)& (0+255),f,b
  9052  0030BE  1F77               	comf	(??___xxtofl+3)& (0+255),f,b
  9053  0030C0  2B74               	incf	??___xxtofl& (0+255),f,b
  9054  0030C2  0E00               	movlw	0
  9055  0030C4  2375               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9056  0030C6  2376               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9057  0030C8  2377               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9058  0030CA  C074  F07A         	movff	??___xxtofl,___xxtofl@arg
  9059  0030CE  C075  F07B         	movff	??___xxtofl+1,___xxtofl@arg+1
  9060  0030D2  C076  F07C         	movff	??___xxtofl+2,___xxtofl@arg+2
  9061  0030D6  C077  F07D         	movff	??___xxtofl+3,___xxtofl@arg+3
  9062  0030DA  D008               	goto	l6763
  9063  0030DC                     l1096:
  9064                           
  9065                           ; BSR set to: 0
  9066  0030DC  C070  F07A         	movff	___xxtofl@val,___xxtofl@arg
  9067  0030E0  C071  F07B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9068  0030E4  C072  F07C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9069  0030E8  C073  F07D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9070  0030EC                     l6763:
  9071                           
  9072                           ; BSR set to: 0
  9073  0030EC  5170               	movf	___xxtofl@val& (0+255),w,b
  9074  0030EE  1171               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9075  0030F0  1172               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9076  0030F2  1173               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9077  0030F4  A4D8               	btfss	status,2,c
  9078  0030F6  D009               	goto	l6769
  9079                           
  9080                           ; BSR set to: 0
  9081  0030F8  0E00               	movlw	0
  9082  0030FA  6F70               	movwf	?___xxtofl& (0+255),b
  9083  0030FC  0E00               	movlw	0
  9084  0030FE  6F71               	movwf	(?___xxtofl+1)& (0+255),b
  9085  003100  0E00               	movlw	0
  9086  003102  6F72               	movwf	(?___xxtofl+2)& (0+255),b
  9087  003104  0E00               	movlw	0
  9088  003106  6F73               	movwf	(?___xxtofl+3)& (0+255),b
  9089  003108  0012               	return	
  9090  00310A                     l6769:
  9091                           
  9092                           ; BSR set to: 0
  9093  00310A  0E96               	movlw	150
  9094  00310C  6F79               	movwf	___xxtofl@exp& (0+255),b
  9095  00310E  D006               	goto	l6773
  9096  003110                     l6771:
  9097                           
  9098                           ; BSR set to: 0
  9099  003110  2B79               	incf	___xxtofl@exp& (0+255),f,b
  9100  003112  90D8               	bcf	status,0,c
  9101  003114  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9102  003116  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9103  003118  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9104  00311A  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  9105  00311C                     l6773:
  9106                           
  9107                           ; BSR set to: 0
  9108  00311C  0E00               	movlw	0
  9109  00311E  157A               	andwf	___xxtofl@arg& (0+255),w,b
  9110  003120  6F74               	movwf	??___xxtofl& (0+255),b
  9111  003122  0E00               	movlw	0
  9112  003124  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9113  003126  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  9114  003128  0E00               	movlw	0
  9115  00312A  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9116  00312C  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  9117  00312E  0EFE               	movlw	254
  9118  003130  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9119  003132  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  9120  003134  5174               	movf	??___xxtofl& (0+255),w,b
  9121  003136  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9122  003138  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9123  00313A  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9124  00313C  B4D8               	btfsc	status,2,c
  9125  00313E  D00D               	goto	l1103
  9126  003140  D7E7               	goto	l6771
  9127  003142                     l6775:
  9128                           
  9129                           ; BSR set to: 0
  9130  003142  2B79               	incf	___xxtofl@exp& (0+255),f,b
  9131                           
  9132                           ; BSR set to: 0
  9133  003144  0E01               	movlw	1
  9134  003146  277A               	addwf	___xxtofl@arg& (0+255),f,b
  9135  003148  0E00               	movlw	0
  9136  00314A  237B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9137  00314C  237C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9138  00314E  237D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9139                           
  9140                           ; BSR set to: 0
  9141  003150  90D8               	bcf	status,0,c
  9142  003152  337D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9143  003154  337C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9144  003156  337B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9145  003158  337A               	rrcf	___xxtofl@arg& (0+255),f,b
  9146  00315A                     l1103:
  9147                           
  9148                           ; BSR set to: 0
  9149  00315A  0E00               	movlw	0
  9150  00315C  157A               	andwf	___xxtofl@arg& (0+255),w,b
  9151  00315E  6F74               	movwf	??___xxtofl& (0+255),b
  9152  003160  0E00               	movlw	0
  9153  003162  157B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9154  003164  6F75               	movwf	(??___xxtofl+1)& (0+255),b
  9155  003166  0E00               	movlw	0
  9156  003168  157C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9157  00316A  6F76               	movwf	(??___xxtofl+2)& (0+255),b
  9158  00316C  0EFF               	movlw	255
  9159  00316E  157D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9160  003170  6F77               	movwf	(??___xxtofl+3)& (0+255),b
  9161  003172  5174               	movf	??___xxtofl& (0+255),w,b
  9162  003174  1175               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9163  003176  1176               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9164  003178  1177               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9165  00317A  B4D8               	btfsc	status,2,c
  9166  00317C  D007               	goto	l6783
  9167  00317E  D7E1               	goto	l6775
  9168  003180                     l6781:
  9169                           
  9170                           ; BSR set to: 0
  9171  003180  0779               	decf	___xxtofl@exp& (0+255),f,b
  9172  003182  90D8               	bcf	status,0,c
  9173  003184  377A               	rlcf	___xxtofl@arg& (0+255),f,b
  9174  003186  377B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9175  003188  377C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9176  00318A  377D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9177  00318C                     l6783:
  9178                           
  9179                           ; BSR set to: 0
  9180  00318C  BF7C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9181  00318E  D003               	goto	u8810
  9182                           
  9183                           ; BSR set to: 0
  9184  003190  0E02               	movlw	2
  9185  003192  6179               	cpfslt	___xxtofl@exp& (0+255),b
  9186  003194  D7F5               	goto	l6781
  9187  003196                     u8810:
  9188                           
  9189                           ; BSR set to: 0
  9190  003196  A179               	btfss	___xxtofl@exp& (0+255),0,b
  9191                           
  9192                           ; BSR set to: 0
  9193  003198  9F7C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9194                           
  9195                           ; BSR set to: 0
  9196  00319A  90D8               	bcf	status,0,c
  9197  00319C  3379               	rrcf	___xxtofl@exp& (0+255),f,b
  9198                           
  9199                           ; BSR set to: 0
  9200  00319E  C079  F074         	movff	___xxtofl@exp,??___xxtofl
  9201  0031A2  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  9202  0031A4  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  9203  0031A6  6B77               	clrf	(??___xxtofl+3)& (0+255),b
  9204  0031A8  C074  F077         	movff	??___xxtofl,??___xxtofl+3
  9205  0031AC  6B76               	clrf	(??___xxtofl+2)& (0+255),b
  9206  0031AE  6B75               	clrf	(??___xxtofl+1)& (0+255),b
  9207  0031B0  6B74               	clrf	??___xxtofl& (0+255),b
  9208  0031B2  5174               	movf	??___xxtofl& (0+255),w,b
  9209  0031B4  137A               	iorwf	___xxtofl@arg& (0+255),f,b
  9210  0031B6  5175               	movf	(??___xxtofl+1)& (0+255),w,b
  9211  0031B8  137B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9212  0031BA  5176               	movf	(??___xxtofl+2)& (0+255),w,b
  9213  0031BC  137C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9214  0031BE  5177               	movf	(??___xxtofl+3)& (0+255),w,b
  9215  0031C0  137D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9216                           
  9217                           ; BSR set to: 0
  9218  0031C2  5178               	movf	___xxtofl@sign& (0+255),w,b
  9219  0031C4  A4D8               	btfss	status,2,c
  9220                           
  9221                           ; BSR set to: 0
  9222  0031C6  AF73               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9223  0031C8  D001               	goto	l6799
  9224                           
  9225                           ; BSR set to: 0
  9226  0031CA  8F7D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9227  0031CC                     l6799:
  9228                           
  9229                           ; BSR set to: 0
  9230  0031CC  C07A  F070         	movff	___xxtofl@arg,?___xxtofl
  9231  0031D0  C07B  F071         	movff	___xxtofl@arg+1,?___xxtofl+1
  9232  0031D4  C07C  F072         	movff	___xxtofl@arg+2,?___xxtofl+2
  9233  0031D8  C07D  F073         	movff	___xxtofl@arg+3,?___xxtofl+3
  9234                           
  9235                           ; BSR set to: 0
  9236  0031DC  0012               	return		;funcret
  9237  0031DE                     __end_of___xxtofl:
  9238                           	opt callstack 0
  9239                           
  9240 ;; *************** function _Initial *****************
  9241 ;; Defined at:
  9242 ;;		line 189 in file "George_Wyatt_Lab6.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used:    1
  9262 ;; Hardware stack levels required when called:    5
  9263 ;; This function calls:
  9264 ;;		_InitLCD
  9265 ;; This function is called by:
  9266 ;;		_main
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text35
  9271  003706                     __ptext35:
  9272                           	opt callstack 0
  9273  003706                     _Initial:
  9274                           	opt callstack 25
  9275                           
  9276                           ;George_Wyatt_Lab6.c: 191:     TRISD = 0b00001111;
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;incstack = 0
  9280  003706  0E0F               	movlw	15
  9281  003708  6E95               	movwf	3989,c	;volatile
  9282                           
  9283                           ;George_Wyatt_Lab6.c: 192:     LATD = 0;
  9284  00370A  0E00               	movlw	0
  9285  00370C  6E8C               	movwf	3980,c	;volatile
  9286                           
  9287                           ;George_Wyatt_Lab6.c: 193:     TRISC = 0b10010011;
  9288  00370E  0E93               	movlw	147
  9289  003710  6E94               	movwf	3988,c	;volatile
  9290                           
  9291                           ;George_Wyatt_Lab6.c: 194:     LATC = 0;
  9292  003712  0E00               	movlw	0
  9293  003714  6E8B               	movwf	3979,c	;volatile
  9294                           
  9295                           ;George_Wyatt_Lab6.c: 195:     TRISF = 0xFF;
  9296  003716  6897               	setf	3991,c	;volatile
  9297                           
  9298                           ;George_Wyatt_Lab6.c: 196:     TRISAbits.TRISA5 = 1;
  9299  003718  8A92               	bsf	3986,5,c	;volatile
  9300                           
  9301                           ;George_Wyatt_Lab6.c: 197:     TRISAbits.TRISA4 = 0;
  9302  00371A  9892               	bcf	3986,4,c	;volatile
  9303                           
  9304                           ;George_Wyatt_Lab6.c: 198:     TRISEbits.TRISE0 = 0;
  9305  00371C  9096               	bcf	3990,0,c	;volatile
  9306                           
  9307                           ;George_Wyatt_Lab6.c: 201:     TRISBbits.TRISB4 = 0;
  9308  00371E  9893               	bcf	3987,4,c	;volatile
  9309                           
  9310                           ;George_Wyatt_Lab6.c: 202:     TRISBbits.TRISB5 = 0;
  9311  003720  9A93               	bcf	3987,5,c	;volatile
  9312                           
  9313                           ;George_Wyatt_Lab6.c: 203:     TRISB = 0b11000000;
  9314  003722  0EC0               	movlw	192
  9315  003724  6E93               	movwf	3987,c	;volatile
  9316                           
  9317                           ;George_Wyatt_Lab6.c: 205:     LATB = 0;
  9318  003726  0E00               	movlw	0
  9319  003728  6E8A               	movwf	3978,c	;volatile
  9320                           
  9321                           ;George_Wyatt_Lab6.c: 209:     InitLCD();
  9322  00372A  ECBF  F019         	call	_InitLCD	;wreg free
  9323                           
  9324                           ;George_Wyatt_Lab6.c: 213:     T0CON = 0b01001000;
  9325  00372E  0E48               	movlw	72
  9326  003730  6ED5               	movwf	4053,c	;volatile
  9327                           
  9328                           ;George_Wyatt_Lab6.c: 214:     TMR0L = 0;
  9329  003732  0E00               	movlw	0
  9330  003734  6ED6               	movwf	4054,c	;volatile
  9331                           
  9332                           ;George_Wyatt_Lab6.c: 215:     TMR0H = 0;
  9333  003736  0E00               	movlw	0
  9334  003738  6ED7               	movwf	4055,c	;volatile
  9335                           
  9336                           ;George_Wyatt_Lab6.c: 217:     T1CON = 0b00000010;
  9337  00373A  0E02               	movlw	2
  9338  00373C  6ECD               	movwf	4045,c	;volatile
  9339                           
  9340                           ;George_Wyatt_Lab6.c: 218:     TMR1 = 61536;
  9341  00373E  0EF0               	movlw	240
  9342  003740  6ECF               	movwf	4047,c	;volatile
  9343  003742  0E60               	movlw	96
  9344  003744  6ECE               	movwf	4046,c	;volatile
  9345                           
  9346                           ;George_Wyatt_Lab6.c: 220:     RCONbits.IPEN = 1;
  9347  003746  8ED0               	bsf	4048,7,c	;volatile
  9348                           
  9349                           ;George_Wyatt_Lab6.c: 221:     INTCON2bits.TMR0IP = 0;
  9350  003748  94F1               	bcf	4081,2,c	;volatile
  9351                           
  9352                           ;George_Wyatt_Lab6.c: 222:     IPR1bits.TMR1IP = 0;
  9353  00374A  909F               	bcf	3999,0,c	;volatile
  9354                           
  9355                           ;George_Wyatt_Lab6.c: 224:     IPR1bits.RC1IP = 1;
  9356  00374C  8A9F               	bsf	3999,5,c	;volatile
  9357                           
  9358                           ;George_Wyatt_Lab6.c: 227:     INTCONbits.TMR0IE = 1;
  9359  00374E  8AF2               	bsf	4082,5,c	;volatile
  9360                           
  9361                           ;George_Wyatt_Lab6.c: 228:     PIE1bits.TMR1IE = 1;
  9362  003750  809D               	bsf	3997,0,c	;volatile
  9363                           
  9364                           ;George_Wyatt_Lab6.c: 229:     PIE1bits.RC1IE = 1;
  9365  003752  8A9D               	bsf	3997,5,c	;volatile
  9366                           
  9367                           ;George_Wyatt_Lab6.c: 230:     INTCONbits.GIEL = 1;
  9368  003754  8CF2               	bsf	4082,6,c	;volatile
  9369                           
  9370                           ;George_Wyatt_Lab6.c: 231:     INTCONbits.GIEH = 1;
  9371  003756  8EF2               	bsf	4082,7,c	;volatile
  9372                           
  9373                           ;George_Wyatt_Lab6.c: 233:     T0CONbits.TMR0ON = 1;
  9374  003758  8ED5               	bsf	4053,7,c	;volatile
  9375                           
  9376                           ;George_Wyatt_Lab6.c: 234:     T1CONbits.TMR1ON = 1;
  9377  00375A  80CD               	bsf	4045,0,c	;volatile
  9378                           
  9379                           ;George_Wyatt_Lab6.c: 236:     RCSTA1bits.SPEN = 1;
  9380  00375C  8EAB               	bsf	4011,7,c	;volatile
  9381                           
  9382                           ;George_Wyatt_Lab6.c: 237:     RCSTA1bits.CREN = 1;
  9383  00375E  88AB               	bsf	4011,4,c	;volatile
  9384                           
  9385                           ;George_Wyatt_Lab6.c: 240:     SPBRG1 = 12;
  9386  003760  0E0C               	movlw	12
  9387  003762  6EAF               	movwf	4015,c	;volatile
  9388                           
  9389                           ;George_Wyatt_Lab6.c: 241:     SPBRGH1 = 0;
  9390  003764  0E00               	movlw	0
  9391  003766  6ED4               	movwf	4052,c	;volatile
  9392                           
  9393                           ;George_Wyatt_Lab6.c: 242:     BAUDCON1 = 0;
  9394  003768  0E00               	movlw	0
  9395  00376A  6E65               	movwf	3941,c	;volatile
  9396                           
  9397                           ;George_Wyatt_Lab6.c: 243:     TXSTA1 = 0;
  9398  00376C  0E00               	movlw	0
  9399  00376E  6EAC               	movwf	4012,c	;volatile
  9400                           
  9401                           ;George_Wyatt_Lab6.c: 244:     TXSTA1bits.TXEN = 1;
  9402  003770  8AAC               	bsf	4012,5,c	;volatile
  9403                           
  9404                           ;George_Wyatt_Lab6.c: 245:     TXSTA1bits.TRMT = 1;
  9405  003772  82AC               	bsf	4012,1,c	;volatile
  9406                           
  9407                           ;George_Wyatt_Lab6.c: 248:     ANCON0 = 0b00000001;
  9408  003774  0E01               	movlw	1
  9409  003776  010F               	movlb	15	; () banked
  9410  003778  6F25               	movwf	37,b	;volatile
  9411                           
  9412                           ; BSR set to: 15
  9413                           ;George_Wyatt_Lab6.c: 249:     TRISA = 0b00101001;
  9414  00377A  0E29               	movlw	41
  9415  00377C  6E92               	movwf	3986,c	;volatile
  9416                           
  9417                           ; BSR set to: 15
  9418                           ;George_Wyatt_Lab6.c: 250:     ADCON0 = 0b00000001;
  9419  00377E  0E01               	movlw	1
  9420  003780  6EC2               	movwf	4034,c	;volatile
  9421                           
  9422                           ; BSR set to: 15
  9423                           ;George_Wyatt_Lab6.c: 251:     ADCON1 = 0b00000000;
  9424  003782  0E00               	movlw	0
  9425  003784  6EC1               	movwf	4033,c	;volatile
  9426                           
  9427                           ; BSR set to: 15
  9428                           ;George_Wyatt_Lab6.c: 252:     ADCON2 = 0b10010101;
  9429  003786  0E95               	movlw	149
  9430  003788  6EC0               	movwf	4032,c	;volatile
  9431                           
  9432                           ; BSR set to: 15
  9433                           ;George_Wyatt_Lab6.c: 254:     PIR1bits.ADIF = 0;
  9434  00378A  9C9E               	bcf	3998,6,c	;volatile
  9435                           
  9436                           ; BSR set to: 15
  9437                           ;George_Wyatt_Lab6.c: 255:     PIE1bits.ADIE = 0;
  9438  00378C  9C9D               	bcf	3997,6,c	;volatile
  9439                           
  9440                           ; BSR set to: 15
  9441                           ;George_Wyatt_Lab6.c: 259:     SSPCON1 = 0b00100000;
  9442  00378E  0E20               	movlw	32
  9443  003790  6EC6               	movwf	4038,c	;volatile
  9444                           
  9445                           ; BSR set to: 15
  9446                           ;George_Wyatt_Lab6.c: 260:     SSP1STAT = 0x00;
  9447  003792  0E00               	movlw	0
  9448  003794  6EC7               	movwf	4039,c	;volatile
  9449                           
  9450                           ; BSR set to: 15
  9451                           ;George_Wyatt_Lab6.c: 261:     SSP1STATbits.SMP = 1;
  9452  003796  8EC7               	bsf	4039,7,c	;volatile
  9453                           
  9454                           ; BSR set to: 15
  9455                           ;George_Wyatt_Lab6.c: 262:     SSP1STATbits.CKE = 0;
  9456  003798  9CC7               	bcf	4039,6,c	;volatile
  9457                           
  9458                           ; BSR set to: 15
  9459                           ;George_Wyatt_Lab6.c: 263:     SSP1CON1bits.CKP = 1;
  9460  00379A  88C6               	bsf	4038,4,c	;volatile
  9461                           
  9462                           ; BSR set to: 15
  9463                           ;George_Wyatt_Lab6.c: 264:     SSP1CON1bits.SSPM = 0001;
  9464  00379C  50C6               	movf	4038,w,c	;volatile
  9465  00379E  0BF0               	andlw	-16
  9466  0037A0  0901               	iorlw	1
  9467  0037A2  6EC6               	movwf	4038,c	;volatile
  9468                           
  9469                           ; BSR set to: 15
  9470  0037A4  0012               	return		;funcret
  9471  0037A6                     __end_of_Initial:
  9472                           	opt callstack 0
  9473                           
  9474 ;; *************** function _InitLCD *****************
  9475 ;; Defined at:
  9476 ;;		line 51 in file "LCDroutinesEasyPic.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  nibble          1   18[BANK0 ] unsigned char 
  9481 ;;  count           1   17[BANK0 ] unsigned char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  1    wreg      void 
  9484 ;; Registers used:
  9485 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9494 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9495 ;;Total ram usage:        3 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    4
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		_Initial
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text36
  9506  00337E                     __ptext36:
  9507                           	opt callstack 0
  9508  00337E                     _InitLCD:
  9509                           	opt callstack 25
  9510                           
  9511                           ;LCDroutinesEasyPic.c: 52:  unsigned char count = 0;
  9512                           
  9513                           ; BSR set to: 15
  9514                           ;incstack = 0
  9515  00337E  0E00               	movlw	0
  9516  003380  0100               	movlb	0	; () banked
  9517  003382  6F71               	movwf	InitLCD@count& (0+255),b
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;LCDroutinesEasyPic.c: 57:     _delay((unsigned long)((40)*(16000000/4000.0)));
  9521  003384  0ED0               	movlw	208
  9522  003386  0100               	movlb	0	; () banked
  9523  003388  6F70               	movwf	??_InitLCD& (0+255),b
  9524  00338A  0EC9               	movlw	201
  9525  00338C                     u9017:
  9526  00338C  2EE8               	decfsz	wreg,f,c
  9527  00338E  D7FE               	bra	u9017
  9528  003390  2F70               	decfsz	??_InitLCD& (0+255),f,b
  9529  003392  D7FC               	bra	u9017
  9530  003394  D000               	nop2	
  9531                           
  9532                           ;LCDroutinesEasyPic.c: 60:  LATBbits.LATB4 = 0;
  9533  003396  988A               	bcf	3978,4,c	;volatile
  9534                           
  9535                           ;LCDroutinesEasyPic.c: 63:  while( LCDInitStr_[count] != 0x00 ) {
  9536  003398  D040               	goto	l6351
  9537  00339A                     l6323:
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;LCDroutinesEasyPic.c: 64:         LATB = 0;
  9541  00339A  0E00               	movlw	0
  9542  00339C  6E8A               	movwf	3978,c	;volatile
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;LCDroutinesEasyPic.c: 65:   LATBbits.LATB5 = 1;
  9546  00339E  8A8A               	bsf	3978,5,c	;volatile
  9547                           
  9548                           ; BSR set to: 0
  9549                           ;LCDroutinesEasyPic.c: 66:         nibble = 0xF0 & LCDInitStr_[count];
  9550  0033A0  0E14               	movlw	low _LCDInitStr_
  9551  0033A2  2571               	addwf	InitLCD@count& (0+255),w,b
  9552  0033A4  6EF6               	movwf	tblptrl,c
  9553  0033A6  6AF7               	clrf	tblptrh,c
  9554  0033A8  0E10               	movlw	high _LCDInitStr_
  9555  0033AA  22F7               	addwfc	tblptrh,f,c
  9556  0033AC                     	if	1	;There are 3 active tblptr bytes
  9557  0033AC  6AF8               	clrf	tblptru,c
  9558  0033AE  0E00               	movlw	low (__mediumconst shr (0+16))
  9559  0033B0  22F8               	addwfc	tblptru,f,c
  9560  0033B2                     	endif
  9561  0033B2  0008               	tblrd		*
  9562  0033B4  50F5               	movf	tablat,w,c
  9563  0033B6  0BF0               	andlw	240
  9564  0033B8  6F72               	movwf	InitLCD@nibble& (0+255),b
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;LCDroutinesEasyPic.c: 67:         nibble = nibble>>4;
  9568  0033BA  3972               	swapf	InitLCD@nibble& (0+255),w,b
  9569  0033BC  0B0F               	andlw	15
  9570  0033BE  6F72               	movwf	InitLCD@nibble& (0+255),b
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;LCDroutinesEasyPic.c: 68:         LATB = nibble | PORTB;
  9574  0033C0  5172               	movf	InitLCD@nibble& (0+255),w,b
  9575  0033C2  1081               	iorwf	3969,w,c	;volatile
  9576  0033C4  6E8A               	movwf	3978,c	;volatile
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;LCDroutinesEasyPic.c: 69:         LATBbits.LATB5 = 0;
  9580  0033C6  9A8A               	bcf	3978,5,c	;volatile
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;LCDroutinesEasyPic.c: 70:         _delay((unsigned long)((10)*(16000000/4000.0)));
  9584  0033C8  0E34               	movlw	52
  9585  0033CA  0100               	movlb	0	; () banked
  9586  0033CC  6F70               	movwf	??_InitLCD& (0+255),b
  9587  0033CE  0EF1               	movlw	241
  9588  0033D0                     u9027:
  9589  0033D0  2EE8               	decfsz	wreg,f,c
  9590  0033D2  D7FE               	bra	u9027
  9591  0033D4  2F70               	decfsz	??_InitLCD& (0+255),f,b
  9592  0033D6  D7FC               	bra	u9027
  9593  0033D8  D000               	nop2	
  9594                           
  9595                           ;LCDroutinesEasyPic.c: 72:         LATB = 0;
  9596  0033DA  0E00               	movlw	0
  9597  0033DC  6E8A               	movwf	3978,c	;volatile
  9598                           
  9599                           ;LCDroutinesEasyPic.c: 73:   LATBbits.LATB5 = 1;
  9600  0033DE  8A8A               	bsf	3978,5,c	;volatile
  9601                           
  9602                           ;LCDroutinesEasyPic.c: 74:         nibble = 0x0F & LCDInitStr_[count];
  9603  0033E0  0E14               	movlw	low _LCDInitStr_
  9604  0033E2  0100               	movlb	0	; () banked
  9605  0033E4  2571               	addwf	InitLCD@count& (0+255),w,b
  9606  0033E6  6EF6               	movwf	tblptrl,c
  9607  0033E8  6AF7               	clrf	tblptrh,c
  9608  0033EA  0E10               	movlw	high _LCDInitStr_
  9609  0033EC  22F7               	addwfc	tblptrh,f,c
  9610  0033EE                     	if	1	;There are 3 active tblptr bytes
  9611  0033EE  6AF8               	clrf	tblptru,c
  9612  0033F0  0E00               	movlw	low (__mediumconst shr (0+16))
  9613  0033F2  22F8               	addwfc	tblptru,f,c
  9614  0033F4                     	endif
  9615  0033F4  0008               	tblrd		*
  9616  0033F6  50F5               	movf	tablat,w,c
  9617  0033F8  0B0F               	andlw	15
  9618  0033FA  6F72               	movwf	InitLCD@nibble& (0+255),b
  9619                           
  9620                           ; BSR set to: 0
  9621                           ;LCDroutinesEasyPic.c: 75:   LATB = nibble | PORTB;
  9622  0033FC  5172               	movf	InitLCD@nibble& (0+255),w,b
  9623  0033FE  1081               	iorwf	3969,w,c	;volatile
  9624  003400  6E8A               	movwf	3978,c	;volatile
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;LCDroutinesEasyPic.c: 76:         LATBbits.LATB5 = 0;
  9628  003402  9A8A               	bcf	3978,5,c	;volatile
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;LCDroutinesEasyPic.c: 77:   _delay((unsigned long)((10)*(16000000/4000.0)));
  9632  003404  0E34               	movlw	52
  9633  003406  0100               	movlb	0	; () banked
  9634  003408  6F70               	movwf	??_InitLCD& (0+255),b
  9635  00340A  0EF1               	movlw	241
  9636  00340C                     u9037:
  9637  00340C  2EE8               	decfsz	wreg,f,c
  9638  00340E  D7FE               	bra	u9037
  9639  003410  2F70               	decfsz	??_InitLCD& (0+255),f,b
  9640  003412  D7FC               	bra	u9037
  9641  003414  D000               	nop2	
  9642                           
  9643                           ;LCDroutinesEasyPic.c: 79:   count++;
  9644  003416  0100               	movlb	0	; () banked
  9645  003418  2B71               	incf	InitLCD@count& (0+255),f,b
  9646  00341A                     l6351:
  9647                           
  9648                           ;LCDroutinesEasyPic.c: 63:  while( LCDInitStr_[count] != 0x00 ) {
  9649  00341A  0E14               	movlw	low _LCDInitStr_
  9650  00341C  0100               	movlb	0	; () banked
  9651  00341E  2571               	addwf	InitLCD@count& (0+255),w,b
  9652  003420  6EF6               	movwf	tblptrl,c
  9653  003422  6AF7               	clrf	tblptrh,c
  9654  003424  0E10               	movlw	high _LCDInitStr_
  9655  003426  22F7               	addwfc	tblptrh,f,c
  9656  003428                     	if	1	;There are 3 active tblptr bytes
  9657  003428  6AF8               	clrf	tblptru,c
  9658  00342A  0E00               	movlw	low (__mediumconst shr (0+16))
  9659  00342C  22F8               	addwfc	tblptru,f,c
  9660  00342E                     	endif
  9661  00342E  0008               	tblrd		*
  9662  003430  50F5               	movf	tablat,w,c
  9663  003432  0900               	iorlw	0
  9664  003434  A4D8               	btfss	status,2,c
  9665  003436  D7B1               	goto	l6323
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;LCDroutinesEasyPic.c: 82:  LATBbits.LATB4 = 1;
  9669  003438  888A               	bsf	3978,4,c	;volatile
  9670                           
  9671                           ; BSR set to: 0
  9672  00343A  0012               	return		;funcret
  9673  00343C                     __end_of_InitLCD:
  9674                           	opt callstack 0
  9675                           
  9676 ;; *************** function _DisplayC *****************
  9677 ;; Defined at:
  9678 ;;		line 94 in file "LCDroutinesEasyPic.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  LCDStr          2   26[BANK0 ] PTR const unsigned char 
  9681 ;;		 -> temperatureString(10), potString(10), 
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  temp           10   28[BANK0 ] unsigned char [10]
  9684 ;; Return value:  Size  Location     Type
  9685 ;;                  1    wreg      void 
  9686 ;; Registers used:
  9687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9688 ;; Tracked objects:
  9689 ;;		On entry : 0/0
  9690 ;;		On exit  : 0/0
  9691 ;;		Unchanged: 0/0
  9692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9694 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;Total ram usage:       12 bytes
  9698 ;; Hardware stack levels used:    1
  9699 ;; Hardware stack levels required when called:    5
  9700 ;; This function calls:
  9701 ;;		_DisplayV
  9702 ;;		_strcpy
  9703 ;; This function is called by:
  9704 ;;		_main
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           	psect	text37
  9709  004092                     __ptext37:
  9710                           	opt callstack 0
  9711  004092                     _DisplayC:
  9712                           	opt callstack 25
  9713                           
  9714                           ;LCDroutinesEasyPic.c: 95:     char temp[10];;LCDroutinesEasyPic.c: 96:     strcpy(temp,
      +                          LCDStr);
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;incstack = 0
  9718  004092  0E7C               	movlw	low DisplayC@temp
  9719  004094  0100               	movlb	0	; () banked
  9720  004096  6F70               	movwf	strcpy@dest& (0+255),b
  9721  004098  0E00               	movlw	high DisplayC@temp
  9722  00409A  6F71               	movwf	(strcpy@dest+1)& (0+255),b
  9723  00409C  C07A  F072         	movff	DisplayC@LCDStr,strcpy@src
  9724  0040A0  C07B  F073         	movff	DisplayC@LCDStr+1,strcpy@src+1
  9725  0040A4  EC8F  F01E         	call	_strcpy	;wreg free
  9726                           
  9727                           ;LCDroutinesEasyPic.c: 97:     DisplayV(temp);
  9728  0040A8  0E7C               	movlw	low DisplayC@temp
  9729  0040AA  0100               	movlb	0	; () banked
  9730  0040AC  6F70               	movwf	DisplayV@LCDStr& (0+255),b
  9731  0040AE  0E00               	movlw	high DisplayC@temp
  9732  0040B0  6F71               	movwf	(DisplayV@LCDStr+1)& (0+255),b
  9733  0040B2  EC22  F01C         	call	_DisplayV	;wreg free
  9734  0040B6  0012               	return		;funcret
  9735  0040B8                     __end_of_DisplayC:
  9736                           	opt callstack 0
  9737                           
  9738 ;; *************** function _strcpy *****************
  9739 ;; Defined at:
  9740 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  dest            2   16[BANK0 ] PTR unsigned char 
  9743 ;;		 -> dbuf(80), main@tempString(10), DisplayC@temp(10), 
  9744 ;;  src             2   18[BANK0 ] PTR const unsigned char 
  9745 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  9746 ;;		 -> dbuf(80), temperatureString(10), potString(10), 
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;  d               2   24[BANK0 ] PTR unsigned char 
  9749 ;;		 -> dbuf(80), main@tempString(10), DisplayC@temp(10), 
  9750 ;;  s               2   22[BANK0 ] PTR const unsigned char 
  9751 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  9752 ;;		 -> dbuf(80), temperatureString(10), potString(10), 
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  2   16[BANK0 ] PTR unsigned char 
  9755 ;; Registers used:
  9756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9762 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9763 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9765 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9766 ;;Total ram usage:       10 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; Hardware stack levels required when called:    4
  9769 ;; This function calls:
  9770 ;;		Nothing
  9771 ;; This function is called by:
  9772 ;;		_DisplayC
  9773 ;;		_main
  9774 ;;		_efgtoa
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           	psect	text38
  9779  003D1E                     __ptext38:
  9780                           	opt callstack 0
  9781  003D1E                     _strcpy:
  9782                           	opt callstack 26
  9783                           
  9784                           ;incstack = 0
  9785  003D1E  C072  F076         	movff	strcpy@src,strcpy@s
  9786  003D22  C073  F077         	movff	strcpy@src+1,strcpy@s+1
  9787  003D26  C070  F078         	movff	strcpy@dest,strcpy@d
  9788  003D2A  C071  F079         	movff	strcpy@dest+1,strcpy@d+1
  9789  003D2E                     l5307:
  9790  003D2E  0100               	movlb	0	; () banked
  9791  003D30  5176               	movf	strcpy@s& (0+255),w,b
  9792  003D32  6F74               	movwf	??_strcpy& (0+255),b
  9793  003D34  5177               	movf	(strcpy@s+1)& (0+255),w,b
  9794  003D36  6F75               	movwf	(??_strcpy+1)& (0+255),b
  9795  003D38  4B76               	infsnz	strcpy@s& (0+255),f,b
  9796  003D3A  2B77               	incf	(strcpy@s+1)& (0+255),f,b
  9797  003D3C  C074  FFF6         	movff	??_strcpy,tblptrl
  9798  003D40  C075  FFF7         	movff	??_strcpy+1,tblptrh
  9799  003D44  0E00               	movlw	low (__smallconst shr (0+16))
  9800  003D46  6EF8               	movwf	tblptru,c
  9801  003D48  C078  FFD9         	movff	strcpy@d,fsr2l
  9802  003D4C  C079  FFDA         	movff	strcpy@d+1,fsr2h
  9803  003D50  4B78               	infsnz	strcpy@d& (0+255),f,b
  9804  003D52  2B79               	incf	(strcpy@d+1)& (0+255),f,b
  9805  003D54  0E0F               	movlw	(high __ramtop+-1)
  9806  003D56  64F7               	cpfsgt	tblptrh,c
  9807  003D58  D003               	bra	u6517
  9808  003D5A  0008               	tblrd		*
  9809  003D5C  50F5               	movf	tablat,w,c
  9810  003D5E  D005               	bra	u6510
  9811  003D60                     u6517:
  9812  003D60  CFF6 FFE1          	movff	tblptrl,fsr1l
  9813  003D64  CFF7 FFE2          	movff	tblptrh,fsr1h
  9814  003D68  50E7               	movf	indf1,w,c
  9815  003D6A                     u6510:
  9816  003D6A  6EDF               	movwf	indf2,c
  9817  003D6C  50DF               	movf	indf2,w,c
  9818  003D6E  B4D8               	btfsc	status,2,c
  9819  003D70  0012               	return	
  9820  003D72  D7DD               	goto	l5307
  9821  003D74                     __end_of_strcpy:
  9822                           	opt callstack 0
  9823                           
  9824 ;; *************** function _DisplayV *****************
  9825 ;; Defined at:
  9826 ;;		line 110 in file "LCDroutinesEasyPic.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  LCDStr          2   16[BANK0 ] PTR const unsigned char 
  9829 ;;		 -> DisplayC@temp(10), 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  count           1   19[BANK0 ] unsigned char 
  9832 ;;  nibble          1   18[BANK0 ] unsigned char 
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;Total ram usage:        4 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    4
  9849 ;; This function calls:
  9850 ;;		Nothing
  9851 ;; This function is called by:
  9852 ;;		_DisplayC
  9853 ;; This function uses a non-reentrant model
  9854 ;;
  9855                           
  9856                           	psect	text39
  9857  003844                     __ptext39:
  9858                           	opt callstack 0
  9859  003844                     _DisplayV:
  9860                           	opt callstack 25
  9861                           
  9862                           ;LCDroutinesEasyPic.c: 111:     unsigned char count = 0;
  9863                           
  9864                           ;incstack = 0
  9865  003844  0E00               	movlw	0
  9866  003846  0100               	movlb	0	; () banked
  9867  003848  6F73               	movwf	DisplayV@count& (0+255),b
  9868                           
  9869                           ;LCDroutinesEasyPic.c: 114:     while(LCDStr[count] != 0x00) {
  9870  00384A  D03D               	goto	l26
  9871  00384C                     l27:
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;LCDroutinesEasyPic.c: 116:         LATBbits.LATB5 = 0;
  9875  00384C  9A8A               	bcf	3978,5,c	;volatile
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;LCDroutinesEasyPic.c: 117:         LATB = PORTB & 0b11000000;
  9879  00384E  5081               	movf	3969,w,c	;volatile
  9880  003850  0BC0               	andlw	192
  9881  003852  6E8A               	movwf	3978,c	;volatile
  9882                           
  9883                           ; BSR set to: 0
  9884                           ;LCDroutinesEasyPic.c: 118:         if(count==0){
  9885  003854  5173               	movf	DisplayV@count& (0+255),w,b
  9886  003856  A4D8               	btfss	status,2,c
  9887  003858  D002               	goto	l28
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;LCDroutinesEasyPic.c: 119:             LATBbits.LATB4 = 0;
  9891  00385A  988A               	bcf	3978,4,c	;volatile
  9892                           
  9893                           ;LCDroutinesEasyPic.c: 120:         }
  9894  00385C  D001               	goto	l29
  9895  00385E                     l28:
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;LCDroutinesEasyPic.c: 122:             LATBbits.LATB4 = 1;
  9899  00385E  888A               	bsf	3978,4,c	;volatile
  9900  003860                     l29:
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;LCDroutinesEasyPic.c: 124:         LATBbits.LATB5 = 1;
  9904  003860  8A8A               	bsf	3978,5,c	;volatile
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;LCDroutinesEasyPic.c: 125:         nibble = 0xF0 & LCDStr[count];
  9908  003862  5173               	movf	DisplayV@count& (0+255),w,b
  9909  003864  2570               	addwf	DisplayV@LCDStr& (0+255),w,b
  9910  003866  6ED9               	movwf	fsr2l,c
  9911  003868  0E00               	movlw	0
  9912  00386A  2171               	addwfc	(DisplayV@LCDStr+1)& (0+255),w,b
  9913  00386C  6EDA               	movwf	fsr2h,c
  9914  00386E  50DF               	movf	indf2,w,c
  9915  003870  0BF0               	andlw	240
  9916  003872  6F72               	movwf	DisplayV@nibble& (0+255),b
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;LCDroutinesEasyPic.c: 126:         nibble = nibble >> 4;
  9920  003874  3972               	swapf	DisplayV@nibble& (0+255),w,b
  9921  003876  0B0F               	andlw	15
  9922  003878  6F72               	movwf	DisplayV@nibble& (0+255),b
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;LCDroutinesEasyPic.c: 127:         LATB = nibble | PORTB;
  9926  00387A  5172               	movf	DisplayV@nibble& (0+255),w,b
  9927  00387C  1081               	iorwf	3969,w,c	;volatile
  9928  00387E  6E8A               	movwf	3978,c	;volatile
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;LCDroutinesEasyPic.c: 128:         LATBbits.LATB5 = 0;
  9932  003880  9A8A               	bcf	3978,5,c	;volatile
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;LCDroutinesEasyPic.c: 129:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  9936  003882  0E42               	movlw	66
  9937  003884                     u9047:
  9938  003884  2EE8               	decfsz	wreg,f,c
  9939  003886  D7FE               	bra	u9047
  9940  003888  D000               	nop2	
  9941                           
  9942                           ;LCDroutinesEasyPic.c: 132:         LATB = PORTB & 0b11000000;
  9943  00388A  5081               	movf	3969,w,c	;volatile
  9944  00388C  0BC0               	andlw	192
  9945  00388E  6E8A               	movwf	3978,c	;volatile
  9946                           
  9947                           ;LCDroutinesEasyPic.c: 133:         if(count==0){
  9948  003890  0100               	movlb	0	; () banked
  9949  003892  5173               	movf	DisplayV@count& (0+255),w,b
  9950  003894  A4D8               	btfss	status,2,c
  9951  003896  D002               	goto	l30
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;LCDroutinesEasyPic.c: 134:             LATBbits.LATB4 = 0;
  9955  003898  988A               	bcf	3978,4,c	;volatile
  9956                           
  9957                           ;LCDroutinesEasyPic.c: 135:         }
  9958  00389A  D001               	goto	l31
  9959  00389C                     l30:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;LCDroutinesEasyPic.c: 137:             LATBbits.LATB4 = 1;
  9963  00389C  888A               	bsf	3978,4,c	;volatile
  9964  00389E                     l31:
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;LCDroutinesEasyPic.c: 139:         LATBbits.LATB5 = 1;
  9968  00389E  8A8A               	bsf	3978,5,c	;volatile
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;LCDroutinesEasyPic.c: 140:         nibble = 0x0F & LCDStr[count];
  9972  0038A0  5173               	movf	DisplayV@count& (0+255),w,b
  9973  0038A2  2570               	addwf	DisplayV@LCDStr& (0+255),w,b
  9974  0038A4  6ED9               	movwf	fsr2l,c
  9975  0038A6  0E00               	movlw	0
  9976  0038A8  2171               	addwfc	(DisplayV@LCDStr+1)& (0+255),w,b
  9977  0038AA  6EDA               	movwf	fsr2h,c
  9978  0038AC  50DF               	movf	indf2,w,c
  9979  0038AE  0B0F               	andlw	15
  9980  0038B0  6F72               	movwf	DisplayV@nibble& (0+255),b
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;LCDroutinesEasyPic.c: 141:         LATB = nibble | PORTB;
  9984  0038B2  5172               	movf	DisplayV@nibble& (0+255),w,b
  9985  0038B4  1081               	iorwf	3969,w,c	;volatile
  9986  0038B6  6E8A               	movwf	3978,c	;volatile
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;LCDroutinesEasyPic.c: 142:         LATBbits.LATB5 = 0;
  9990  0038B8  9A8A               	bcf	3978,5,c	;volatile
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;LCDroutinesEasyPic.c: 143:         _delay((unsigned long)((50)*(16000000/4000000.0)));
  9994  0038BA  0E42               	movlw	66
  9995  0038BC                     u9057:
  9996  0038BC  2EE8               	decfsz	wreg,f,c
  9997  0038BE  D7FE               	bra	u9057
  9998  0038C0  D000               	nop2	
  9999                           
 10000                           ;LCDroutinesEasyPic.c: 146:         count++;
 10001  0038C2  0100               	movlb	0	; () banked
 10002  0038C4  2B73               	incf	DisplayV@count& (0+255),f,b
 10003  0038C6                     l26:
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;LCDroutinesEasyPic.c: 114:     while(LCDStr[count] != 0x00) {
 10007  0038C6  5173               	movf	DisplayV@count& (0+255),w,b
 10008  0038C8  2570               	addwf	DisplayV@LCDStr& (0+255),w,b
 10009  0038CA  6ED9               	movwf	fsr2l,c
 10010  0038CC  0E00               	movlw	0
 10011  0038CE  2171               	addwfc	(DisplayV@LCDStr+1)& (0+255),w,b
 10012  0038D0  6EDA               	movwf	fsr2h,c
 10013  0038D2  50DF               	movf	indf2,w,c
 10014  0038D4  B4D8               	btfsc	status,2,c
 10015  0038D6  0012               	return	
 10016  0038D8  D7B9               	goto	l27
 10017  0038DA                     __end_of_DisplayV:
 10018                           	opt callstack 0
 10019                           
 10020 ;; *************** function _LoPriISR *****************
 10021 ;; Defined at:
 10022 ;;		line 292 in file "George_Wyatt_Lab6.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      void 
 10029 ;; Registers used:
 10030 ;;		wreg, status,2, status,0, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10038 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10039 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;Total ram usage:        3 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    3
 10043 ;; This function calls:
 10044 ;;		_TMR0handler
 10045 ;;		_TMR1handler
 10046 ;; This function is called by:
 10047 ;;		Interrupt level 1
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	intcodelo
 10052  000018                     __pintcodelo:
 10053                           	opt callstack 0
 10054  000018                     _LoPriISR:
 10055                           	opt callstack 19
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;incstack = 0
 10059  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 10060  00001A  CFD8 F06D          	movff	status,??_LoPriISR
 10061  00001E  CFE8 F06E          	movff	wreg,??_LoPriISR+1
 10062  000022  CFE0 F06F          	movff	bsr,??_LoPriISR+2
 10063  000026                     i1l226:
 10064                           
 10065                           ;George_Wyatt_Lab6.c: 296:         if( INTCONbits.TMR0IF ) {
 10066  000026  A4F2               	btfss	4082,2,c	;volatile
 10067  000028  D003               	goto	i1l227
 10068                           
 10069                           ;George_Wyatt_Lab6.c: 297:             TMR0handler();
 10070  00002A  ECCF  F01F         	call	_TMR0handler	;wreg free
 10071                           
 10072                           ;George_Wyatt_Lab6.c: 298:             continue;
 10073  00002E  D7FB               	goto	i1l226
 10074  000030                     i1l227:
 10075                           
 10076                           ;George_Wyatt_Lab6.c: 301:         if( PIR1bits.TMR1IF ) {
 10077  000030  A09E               	btfss	3998,0,c	;volatile
 10078  000032  D003               	goto	i1l231
 10079                           
 10080                           ;George_Wyatt_Lab6.c: 302:             TMR1handler();
 10081  000034  ECF6  F01C         	call	_TMR1handler	;wreg free
 10082                           
 10083                           ;George_Wyatt_Lab6.c: 303:             continue;
 10084  000038  D7F6               	goto	i1l226
 10085  00003A                     i1l231:
 10086  00003A  C06F  FFE0         	movff	??_LoPriISR+2,bsr
 10087  00003E  C06E  FFE8         	movff	??_LoPriISR+1,wreg
 10088  000042  C06D  FFD8         	movff	??_LoPriISR,status
 10089  000046  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 10090  000048  0010               	retfie	
 10091  00004A                     __end_of_LoPriISR:
 10092                           	opt callstack 0
 10093                           
 10094 ;; *************** function _TMR1handler *****************
 10095 ;; Defined at:
 10096 ;;		line 325 in file "George_Wyatt_Lab6.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;  VperBin         4    5[BANK0 ] float 
 10101 ;;  bins            2   11[BANK0 ] int 
 10102 ;;  bins_lower      1   10[BANK0 ] unsigned char 
 10103 ;;  bins_upper      1    9[BANK0 ] unsigned char 
 10104 ;;  trash           1    0        unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2, status,0, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10117 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;Total ram usage:        9 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    2
 10121 ;; This function calls:
 10122 ;;		i1___fldiv
 10123 ;;		i1___fltol
 10124 ;; This function is called by:
 10125 ;;		_LoPriISR
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text41
 10130  0039EC                     __ptext41:
 10131                           	opt callstack 0
 10132  0039EC                     _TMR1handler:
 10133                           	opt callstack 19
 10134                           
 10135                           ;George_Wyatt_Lab6.c: 327:     char trash;;George_Wyatt_Lab6.c: 328:     float VperBin =
      +                           3.3/4096;
 10136                           
 10137                           ;incstack = 0
 10138  0039EC  0E33               	movlw	51
 10139  0039EE  0100               	movlb	0	; () banked
 10140  0039F0  6F65               	movwf	TMR1handler@VperBin& (0+255),b
 10141  0039F2  0E33               	movlw	51
 10142  0039F4  6F66               	movwf	(TMR1handler@VperBin+1)& (0+255),b
 10143  0039F6  0E53               	movlw	83
 10144  0039F8  6F67               	movwf	(TMR1handler@VperBin+2)& (0+255),b
 10145  0039FA  0E3A               	movlw	58
 10146  0039FC  6F68               	movwf	(TMR1handler@VperBin+3)& (0+255),b
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;George_Wyatt_Lab6.c: 329:     int bins = (int)(voltage/VperBin);
 10150  0039FE  C065  F01C         	movff	TMR1handler@VperBin,i1___fldiv@a
 10151  003A02  C066  F01D         	movff	TMR1handler@VperBin+1,i1___fldiv@a+1
 10152  003A06  C067  F01E         	movff	TMR1handler@VperBin+2,i1___fldiv@a+2
 10153  003A0A  C068  F01F         	movff	TMR1handler@VperBin+3,i1___fldiv@a+3
 10154  003A0E  C10A  F018         	movff	_voltage,i1___fldiv@b
 10155  003A12  C10B  F019         	movff	_voltage+1,i1___fldiv@b+1
 10156  003A16  C10C  F01A         	movff	_voltage+2,i1___fldiv@b+2
 10157  003A1A  C10D  F01B         	movff	_voltage+3,i1___fldiv@b+3
 10158  003A1E  EC80  F015         	call	i1___fldiv	;wreg free
 10159  003A22  C018  F031         	movff	?i1___fldiv,i1___fltol@f1
 10160  003A26  C019  F032         	movff	?i1___fldiv+1,i1___fltol@f1+1
 10161  003A2A  C01A  F033         	movff	?i1___fldiv+2,i1___fltol@f1+2
 10162  003A2E  C01B  F034         	movff	?i1___fldiv+3,i1___fltol@f1+3
 10163  003A32  EC7C  F01A         	call	i1___fltol	;wreg free
 10164  003A36  C031  F06B         	movff	?i1___fltol,TMR1handler@bins
 10165  003A3A  C032  F06C         	movff	?i1___fltol+1,TMR1handler@bins+1
 10166                           
 10167                           ;George_Wyatt_Lab6.c: 330:     bins += 0x3000;
 10168  003A3E  0100               	movlb	0	; () banked
 10169  003A40  0E30               	movlw	48
 10170  003A42  276C               	addwf	(TMR1handler@bins+1)& (0+255),f,b
 10171                           
 10172                           ; BSR set to: 0
 10173                           ;George_Wyatt_Lab6.c: 331:     unsigned char bins_upper = bins >> 8;
 10174  003A44  516C               	movf	(TMR1handler@bins+1)& (0+255),w,b
 10175  003A46  6F69               	movwf	TMR1handler@bins_upper& (0+255),b
 10176                           
 10177                           ; BSR set to: 0
 10178                           ;George_Wyatt_Lab6.c: 332:     unsigned char bins_lower = bins & 0xFF;
 10179  003A48  C06B  F06A         	movff	TMR1handler@bins,TMR1handler@bins_lower
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;George_Wyatt_Lab6.c: 334:     LATEbits.LATE0 = 0;
 10183  003A4C  908D               	bcf	3981,0,c	;volatile
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;George_Wyatt_Lab6.c: 336:     SSP1BUF = bins_upper;
 10187  003A4E  C069  FFC9         	movff	TMR1handler@bins_upper,4041	;volatile
 10188  003A52                     i1l239:
 10189  003A52  A0C7               	btfss	4039,0,c	;volatile
 10190  003A54  D7FE               	goto	i1l239
 10191  003A56  50C9               	movf	4041,w,c	;volatile
 10192                           
 10193                           ;George_Wyatt_Lab6.c: 340:     SSP1BUF = bins_lower;
 10194  003A58  C06A  FFC9         	movff	TMR1handler@bins_lower,4041	;volatile
 10195  003A5C                     i1l242:
 10196  003A5C  A0C7               	btfss	4039,0,c	;volatile
 10197  003A5E  D7FE               	goto	i1l242
 10198  003A60  50C9               	movf	4041,w,c	;volatile
 10199                           
 10200                           ;George_Wyatt_Lab6.c: 344:     LATEbits.LATE0 = 1;
 10201  003A62  808D               	bsf	3981,0,c	;volatile
 10202                           
 10203                           ;George_Wyatt_Lab6.c: 347:     PIR1bits.TMR1IF = 0;
 10204  003A64  909E               	bcf	3998,0,c	;volatile
 10205                           
 10206                           ;George_Wyatt_Lab6.c: 348:     TMR1 = 63000;
 10207  003A66  0EF6               	movlw	246
 10208  003A68  6ECF               	movwf	4047,c	;volatile
 10209  003A6A  0E18               	movlw	24
 10210  003A6C  6ECE               	movwf	4046,c	;volatile
 10211  003A6E  0012               	return		;funcret
 10212  003A70                     __end_of_TMR1handler:
 10213                           	opt callstack 0
 10214                           
 10215 ;; *************** function i1___fltol *****************
 10216 ;; Defined at:
 10217 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  f1              4   48[COMRAM] void 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  __fltol         1   53[COMRAM] unsigned char 
 10222 ;;  __fltol         1   52[COMRAM] unsigned char 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  4   48[COMRAM] long 
 10225 ;; Registers used:
 10226 ;;		wreg, status,2, status,0
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;Total ram usage:       10 bytes
 10237 ;; Hardware stack levels used:    1
 10238 ;; Hardware stack levels required when called:    1
 10239 ;; This function calls:
 10240 ;;		Nothing
 10241 ;; This function is called by:
 10242 ;;		_TMR1handler
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text42
 10247  0034F8                     __ptext42:
 10248                           	opt callstack 0
 10249  0034F8                     i1___fltol:
 10250                           	opt callstack 19
 10251                           
 10252                           ;incstack = 0
 10253  0034F8  3433               	rlcf	i1___fltol@f1+2,w,c
 10254  0034FA  3434               	rlcf	i1___fltol@f1+3,w,c
 10255  0034FC  6E36               	movwf	i1___fltol@exp1,c
 10256  0034FE  5036               	movf	i1___fltol@exp1,w,c
 10257  003500  A4D8               	btfss	status,2,c
 10258  003502  D009               	goto	i1l6441
 10259  003504                     i1u841_20:
 10260  003504  0E00               	movlw	0
 10261  003506  6E31               	movwf	?i1___fltol,c
 10262  003508  0E00               	movlw	0
 10263  00350A  6E32               	movwf	?i1___fltol+1,c
 10264  00350C  0E00               	movlw	0
 10265  00350E  6E33               	movwf	?i1___fltol+2,c
 10266  003510  0E00               	movlw	0
 10267  003512  6E34               	movwf	?i1___fltol+3,c
 10268  003514  0012               	return	
 10269  003516                     i1l6441:
 10270  003516  C031  F060         	movff	i1___fltol@f1,??i1___fltol
 10271  00351A  C032  F061         	movff	i1___fltol@f1+1,??i1___fltol+1
 10272  00351E  C033  F062         	movff	i1___fltol@f1+2,??i1___fltol+2
 10273  003522  C034  F063         	movff	i1___fltol@f1+3,??i1___fltol+3
 10274  003526  0E20               	movlw	32
 10275  003528  D006               	goto	i1u842_20
 10276  00352A                     i1u842_25:
 10277  00352A  0100               	movlb	0	; () banked
 10278  00352C  90D8               	bcf	status,0,c
 10279  00352E  3363               	rrcf	(??i1___fltol+3)& (0+255),f,b
 10280  003530  3362               	rrcf	(??i1___fltol+2)& (0+255),f,b
 10281  003532  3361               	rrcf	(??i1___fltol+1)& (0+255),f,b
 10282  003534  3360               	rrcf	??i1___fltol& (0+255),f,b
 10283  003536                     i1u842_20:
 10284  003536  2EE8               	decfsz	wreg,f,c
 10285  003538  D7F8               	goto	i1u842_25
 10286  00353A  5160               	movf	??i1___fltol& (0+255),w,b
 10287  00353C  6E35               	movwf	i1___fltol@sign1,c
 10288                           
 10289                           ; BSR set to: 0
 10290  00353E  8E33               	bsf	i1___fltol@f1+2,7,c
 10291                           
 10292                           ; BSR set to: 0
 10293  003540  0EFF               	movlw	255
 10294  003542  1631               	andwf	i1___fltol@f1,f,c
 10295  003544  0EFF               	movlw	255
 10296  003546  1632               	andwf	i1___fltol@f1+1,f,c
 10297  003548  0EFF               	movlw	255
 10298  00354A  1633               	andwf	i1___fltol@f1+2,f,c
 10299  00354C  0E00               	movlw	0
 10300  00354E  1634               	andwf	i1___fltol@f1+3,f,c
 10301                           
 10302                           ; BSR set to: 0
 10303  003550  0E96               	movlw	150
 10304  003552  5E36               	subwf	i1___fltol@exp1,f,c
 10305                           
 10306                           ; BSR set to: 0
 10307  003554  AE36               	btfss	i1___fltol@exp1,7,c
 10308  003556  D00D               	goto	i1l6461
 10309                           
 10310                           ; BSR set to: 0
 10311  003558  5036               	movf	i1___fltol@exp1,w,c
 10312  00355A  0A80               	xorlw	128
 10313  00355C  0F97               	addlw	151
 10314  00355E  A0D8               	btfss	status,0,c
 10315  003560  D7D1               	goto	i1u841_20
 10316  003562                     i1l6457:
 10317  003562  90D8               	bcf	status,0,c
 10318  003564  3234               	rrcf	i1___fltol@f1+3,f,c
 10319  003566  3233               	rrcf	i1___fltol@f1+2,f,c
 10320  003568  3232               	rrcf	i1___fltol@f1+1,f,c
 10321  00356A  3231               	rrcf	i1___fltol@f1,f,c
 10322  00356C  3E36               	incfsz	i1___fltol@exp1,f,c
 10323  00356E  D7F9               	goto	i1l6457
 10324  003570  D00D               	goto	i1u846_20
 10325  003572                     i1l6461:
 10326                           
 10327                           ; BSR set to: 0
 10328  003572  0E1F               	movlw	31
 10329  003574  6436               	cpfsgt	i1___fltol@exp1,c
 10330  003576  D007               	goto	i1l6469
 10331  003578  D7C5               	goto	i1u841_20
 10332  00357A                     i1l6467:
 10333  00357A  90D8               	bcf	status,0,c
 10334  00357C  3631               	rlcf	i1___fltol@f1,f,c
 10335  00357E  3632               	rlcf	i1___fltol@f1+1,f,c
 10336  003580  3633               	rlcf	i1___fltol@f1+2,f,c
 10337  003582  3634               	rlcf	i1___fltol@f1+3,f,c
 10338  003584  0636               	decf	i1___fltol@exp1,f,c
 10339  003586                     i1l6469:
 10340  003586  5036               	movf	i1___fltol@exp1,w,c
 10341  003588  A4D8               	btfss	status,2,c
 10342  00358A  D7F7               	goto	i1l6467
 10343  00358C                     i1u846_20:
 10344  00358C  5035               	movf	i1___fltol@sign1,w,c
 10345  00358E  B4D8               	btfsc	status,2,c
 10346  003590  D008               	goto	i1l6475
 10347  003592  1E34               	comf	i1___fltol@f1+3,f,c
 10348  003594  1E33               	comf	i1___fltol@f1+2,f,c
 10349  003596  1E32               	comf	i1___fltol@f1+1,f,c
 10350  003598  6C31               	negf	i1___fltol@f1,c
 10351  00359A  0E00               	movlw	0
 10352  00359C  2232               	addwfc	i1___fltol@f1+1,f,c
 10353  00359E  2233               	addwfc	i1___fltol@f1+2,f,c
 10354  0035A0  2234               	addwfc	i1___fltol@f1+3,f,c
 10355  0035A2                     i1l6475:
 10356  0035A2  C031  F031         	movff	i1___fltol@f1,?i1___fltol
 10357  0035A6  C032  F032         	movff	i1___fltol@f1+1,?i1___fltol+1
 10358  0035AA  C033  F033         	movff	i1___fltol@f1+2,?i1___fltol+2
 10359  0035AE  C034  F034         	movff	i1___fltol@f1+3,?i1___fltol+3
 10360  0035B2  0012               	return		;funcret
 10361  0035B4                     __end_ofi1___fltol:
 10362                           	opt callstack 0
 10363                           
 10364 ;; *************** function i1___fldiv *****************
 10365 ;; Defined at:
 10366 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  b               4   23[COMRAM] long 
 10369 ;;  a               4   27[COMRAM] long 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  __fldiv         4   42[COMRAM] unsigned long 
 10372 ;;  __fldiv         4   35[COMRAM] unsigned long 
 10373 ;;  __fldiv         2   40[COMRAM] short 
 10374 ;;  __fldiv         1   47[COMRAM] unsigned char 
 10375 ;;  __fldiv         1   46[COMRAM] unsigned char 
 10376 ;;  __fldiv         1   39[COMRAM] unsigned char 
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  4   23[COMRAM] unsigned char 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2, status,0
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10386 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10387 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10388 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10389 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;Total ram usage:       25 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:    1
 10393 ;; This function calls:
 10394 ;;		Nothing
 10395 ;; This function is called by:
 10396 ;;		_TMR1handler
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text43
 10401  002B00                     __ptext43:
 10402                           	opt callstack 0
 10403  002B00                     i1___fldiv:
 10404                           	opt callstack 19
 10405                           
 10406                           ;incstack = 0
 10407  002B00  501B               	movf	i1___fldiv@b+3,w,c
 10408  002B02  0B80               	andlw	128
 10409  002B04  6E28               	movwf	i1___fldiv@sign,c
 10410  002B06  501B               	movf	i1___fldiv@b+3,w,c
 10411  002B08  241B               	addwf	i1___fldiv@b+3,w,c
 10412  002B0A  6E2F               	movwf	i1___fldiv@bexp,c
 10413  002B0C  BE1A               	btfsc	i1___fldiv@b+2,7,c
 10414  002B0E  802F               	bsf	i1___fldiv@bexp,0,c
 10415  002B10  502F               	movf	i1___fldiv@bexp,w,c
 10416  002B12  B4D8               	btfsc	status,2,c
 10417  002B14  D00D               	goto	i1l6495
 10418  002B16  282F               	incf	i1___fldiv@bexp,w,c
 10419  002B18  A4D8               	btfss	status,2,c
 10420  002B1A  D008               	goto	i1l6491
 10421  002B1C  0E00               	movlw	0
 10422  002B1E  6E18               	movwf	i1___fldiv@b,c
 10423  002B20  0E00               	movlw	0
 10424  002B22  6E19               	movwf	i1___fldiv@b+1,c
 10425  002B24  0E00               	movlw	0
 10426  002B26  6E1A               	movwf	i1___fldiv@b+2,c
 10427  002B28  0E00               	movlw	0
 10428  002B2A  6E1B               	movwf	i1___fldiv@b+3,c
 10429  002B2C                     i1l6491:
 10430  002B2C  8E1A               	bsf	i1___fldiv@b+2,7,c
 10431  002B2E  D006               	goto	L13
 10432  002B30                     i1l6495:
 10433  002B30  0E00               	movlw	0
 10434  002B32  6E18               	movwf	i1___fldiv@b,c
 10435  002B34  0E00               	movlw	0
 10436  002B36  6E19               	movwf	i1___fldiv@b+1,c
 10437  002B38  0E00               	movlw	0
 10438  002B3A  6E1A               	movwf	i1___fldiv@b+2,c
 10439  002B3C                     L13:
 10440  002B3C  0E00               	movlw	0
 10441  002B3E  6E1B               	movwf	i1___fldiv@b+3,c
 10442  002B40  501F               	movf	i1___fldiv@a+3,w,c
 10443  002B42  0B80               	andlw	128
 10444  002B44  1A28               	xorwf	i1___fldiv@sign,f,c
 10445  002B46  501F               	movf	i1___fldiv@a+3,w,c
 10446  002B48  241F               	addwf	i1___fldiv@a+3,w,c
 10447  002B4A  6E30               	movwf	i1___fldiv@aexp,c
 10448  002B4C  BE1E               	btfsc	i1___fldiv@a+2,7,c
 10449  002B4E  8030               	bsf	i1___fldiv@aexp,0,c
 10450  002B50  5030               	movf	i1___fldiv@aexp,w,c
 10451  002B52  B4D8               	btfsc	status,2,c
 10452  002B54  D00D               	goto	i1l6515
 10453  002B56  2830               	incf	i1___fldiv@aexp,w,c
 10454  002B58  A4D8               	btfss	status,2,c
 10455  002B5A  D008               	goto	i1l6511
 10456  002B5C  0E00               	movlw	0
 10457  002B5E  6E1C               	movwf	i1___fldiv@a,c
 10458  002B60  0E00               	movlw	0
 10459  002B62  6E1D               	movwf	i1___fldiv@a+1,c
 10460  002B64  0E00               	movlw	0
 10461  002B66  6E1E               	movwf	i1___fldiv@a+2,c
 10462  002B68  0E00               	movlw	0
 10463  002B6A  6E1F               	movwf	i1___fldiv@a+3,c
 10464  002B6C                     i1l6511:
 10465  002B6C  8E1E               	bsf	i1___fldiv@a+2,7,c
 10466  002B6E  D006               	goto	L14
 10467  002B70                     i1l6515:
 10468  002B70  0E00               	movlw	0
 10469  002B72  6E1C               	movwf	i1___fldiv@a,c
 10470  002B74  0E00               	movlw	0
 10471  002B76  6E1D               	movwf	i1___fldiv@a+1,c
 10472  002B78  0E00               	movlw	0
 10473  002B7A  6E1E               	movwf	i1___fldiv@a+2,c
 10474  002B7C                     L14:
 10475  002B7C  0E00               	movlw	0
 10476  002B7E  6E1F               	movwf	i1___fldiv@a+3,c
 10477  002B80  501C               	movf	i1___fldiv@a,w,c
 10478  002B82  101D               	iorwf	i1___fldiv@a+1,w,c
 10479  002B84  101E               	iorwf	i1___fldiv@a+2,w,c
 10480  002B86  101F               	iorwf	i1___fldiv@a+3,w,c
 10481  002B88  A4D8               	btfss	status,2,c
 10482  002B8A  D017               	goto	i1l6529
 10483  002B8C  0E00               	movlw	0
 10484  002B8E  6E18               	movwf	i1___fldiv@b,c
 10485  002B90  0E00               	movlw	0
 10486  002B92  6E19               	movwf	i1___fldiv@b+1,c
 10487  002B94  0E00               	movlw	0
 10488  002B96  6E1A               	movwf	i1___fldiv@b+2,c
 10489  002B98  0E00               	movlw	0
 10490  002B9A  6E1B               	movwf	i1___fldiv@b+3,c
 10491  002B9C  0E80               	movlw	128
 10492  002B9E  121A               	iorwf	i1___fldiv@b+2,f,c
 10493  002BA0  0E7F               	movlw	127
 10494  002BA2  121B               	iorwf	i1___fldiv@b+3,f,c
 10495  002BA4                     i1l6523:
 10496  002BA4  5028               	movf	i1___fldiv@sign,w,c
 10497  002BA6  121B               	iorwf	i1___fldiv@b+3,f,c
 10498  002BA8  C018  F018         	movff	i1___fldiv@b,?i1___fldiv
 10499  002BAC  C019  F019         	movff	i1___fldiv@b+1,?i1___fldiv+1
 10500  002BB0  C01A  F01A         	movff	i1___fldiv@b+2,?i1___fldiv+2
 10501  002BB4  C01B  F01B         	movff	i1___fldiv@b+3,?i1___fldiv+3
 10502  002BB8  0012               	return	
 10503  002BBA                     i1l6529:
 10504  002BBA  502F               	movf	i1___fldiv@bexp,w,c
 10505  002BBC  A4D8               	btfss	status,2,c
 10506  002BBE  D009               	goto	i1l6537
 10507  002BC0  0E00               	movlw	0
 10508  002BC2  6E18               	movwf	?i1___fldiv,c
 10509  002BC4  0E00               	movlw	0
 10510  002BC6  6E19               	movwf	?i1___fldiv+1,c
 10511  002BC8  0E00               	movlw	0
 10512  002BCA  6E1A               	movwf	?i1___fldiv+2,c
 10513  002BCC  0E00               	movlw	0
 10514  002BCE  6E1B               	movwf	?i1___fldiv+3,c
 10515  002BD0  0012               	return	
 10516  002BD2                     i1l6537:
 10517  002BD2  5030               	movf	i1___fldiv@aexp,w,c
 10518  002BD4  C02F  F020         	movff	i1___fldiv@bexp,??i1___fldiv
 10519  002BD8  6A21               	clrf	(??i1___fldiv+1)& (0+255),c
 10520  002BDA  5E20               	subwf	??i1___fldiv,f,c
 10521  002BDC  0E00               	movlw	0
 10522  002BDE  5A21               	subwfb	??i1___fldiv+1,f,c
 10523  002BE0  0E7F               	movlw	127
 10524  002BE2  2420               	addwf	??i1___fldiv,w,c
 10525  002BE4  6E29               	movwf	i1___fldiv@new_exp,c
 10526  002BE6  0E00               	movlw	0
 10527  002BE8  2021               	addwfc	??i1___fldiv+1,w,c
 10528  002BEA  6E2A               	movwf	i1___fldiv@new_exp+1,c
 10529  002BEC  C018  F024         	movff	i1___fldiv@b,i1___fldiv@rem
 10530  002BF0  C019  F025         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 10531  002BF4  C01A  F026         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 10532  002BF8  C01B  F027         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 10533  002BFC  0E00               	movlw	0
 10534  002BFE  6E18               	movwf	i1___fldiv@b,c
 10535  002C00  0E00               	movlw	0
 10536  002C02  6E19               	movwf	i1___fldiv@b+1,c
 10537  002C04  0E00               	movlw	0
 10538  002C06  6E1A               	movwf	i1___fldiv@b+2,c
 10539  002C08  0E00               	movlw	0
 10540  002C0A  6E1B               	movwf	i1___fldiv@b+3,c
 10541  002C0C  0E00               	movlw	0
 10542  002C0E  6E2B               	movwf	i1___fldiv@grs,c
 10543  002C10  0E00               	movlw	0
 10544  002C12  6E2C               	movwf	i1___fldiv@grs+1,c
 10545  002C14  0E00               	movlw	0
 10546  002C16  6E2D               	movwf	i1___fldiv@grs+2,c
 10547  002C18  0E00               	movlw	0
 10548  002C1A  6E2E               	movwf	i1___fldiv@grs+3,c
 10549  002C1C  0E00               	movlw	0
 10550  002C1E  6E30               	movwf	i1___fldiv@aexp,c
 10551  002C20  D028               	goto	i1l1025
 10552  002C22                     i1l6547:
 10553  002C22  5030               	movf	i1___fldiv@aexp,w,c
 10554  002C24  B4D8               	btfsc	status,2,c
 10555  002C26  D011               	goto	i1l6555
 10556  002C28  90D8               	bcf	status,0,c
 10557  002C2A  3624               	rlcf	i1___fldiv@rem,f,c
 10558  002C2C  3625               	rlcf	i1___fldiv@rem+1,f,c
 10559  002C2E  3626               	rlcf	i1___fldiv@rem+2,f,c
 10560  002C30  3627               	rlcf	i1___fldiv@rem+3,f,c
 10561  002C32  90D8               	bcf	status,0,c
 10562  002C34  3618               	rlcf	i1___fldiv@b,f,c
 10563  002C36  3619               	rlcf	i1___fldiv@b+1,f,c
 10564  002C38  361A               	rlcf	i1___fldiv@b+2,f,c
 10565  002C3A  361B               	rlcf	i1___fldiv@b+3,f,c
 10566  002C3C  BE2E               	btfsc	i1___fldiv@grs+3,7,c
 10567  002C3E  8018               	bsf	i1___fldiv@b,0,c
 10568  002C40  90D8               	bcf	status,0,c
 10569  002C42  362B               	rlcf	i1___fldiv@grs,f,c
 10570  002C44  362C               	rlcf	i1___fldiv@grs+1,f,c
 10571  002C46  362D               	rlcf	i1___fldiv@grs+2,f,c
 10572  002C48  362E               	rlcf	i1___fldiv@grs+3,f,c
 10573  002C4A                     i1l6555:
 10574  002C4A  501C               	movf	i1___fldiv@a,w,c
 10575  002C4C  5C24               	subwf	i1___fldiv@rem,w,c
 10576  002C4E  501D               	movf	i1___fldiv@a+1,w,c
 10577  002C50  5825               	subwfb	i1___fldiv@rem+1,w,c
 10578  002C52  501E               	movf	i1___fldiv@a+2,w,c
 10579  002C54  5826               	subwfb	i1___fldiv@rem+2,w,c
 10580  002C56  501F               	movf	i1___fldiv@a+3,w,c
 10581  002C58  5827               	subwfb	i1___fldiv@rem+3,w,c
 10582  002C5A  A0D8               	btfss	status,0,c
 10583  002C5C  D009               	goto	i1l6561
 10584  002C5E  8C2E               	bsf	i1___fldiv@grs+3,6,c
 10585  002C60  501C               	movf	i1___fldiv@a,w,c
 10586  002C62  5E24               	subwf	i1___fldiv@rem,f,c
 10587  002C64  501D               	movf	i1___fldiv@a+1,w,c
 10588  002C66  5A25               	subwfb	i1___fldiv@rem+1,f,c
 10589  002C68  501E               	movf	i1___fldiv@a+2,w,c
 10590  002C6A  5A26               	subwfb	i1___fldiv@rem+2,f,c
 10591  002C6C  501F               	movf	i1___fldiv@a+3,w,c
 10592  002C6E  5A27               	subwfb	i1___fldiv@rem+3,f,c
 10593  002C70                     i1l6561:
 10594  002C70  2A30               	incf	i1___fldiv@aexp,f,c
 10595  002C72                     i1l1025:
 10596  002C72  0E19               	movlw	25
 10597  002C74  6430               	cpfsgt	i1___fldiv@aexp,c
 10598  002C76  D7D5               	goto	i1l6547
 10599  002C78  5024               	movf	i1___fldiv@rem,w,c
 10600  002C7A  1025               	iorwf	i1___fldiv@rem+1,w,c
 10601  002C7C  1026               	iorwf	i1___fldiv@rem+2,w,c
 10602  002C7E  1027               	iorwf	i1___fldiv@rem+3,w,c
 10603  002C80  B4D8               	btfsc	status,2,c
 10604  002C82  D011               	goto	i1l6573
 10605  002C84  802B               	bsf	i1___fldiv@grs,0,c
 10606  002C86  D00F               	goto	i1l6573
 10607  002C88                     i1l6567:
 10608  002C88  90D8               	bcf	status,0,c
 10609  002C8A  3618               	rlcf	i1___fldiv@b,f,c
 10610  002C8C  3619               	rlcf	i1___fldiv@b+1,f,c
 10611  002C8E  361A               	rlcf	i1___fldiv@b+2,f,c
 10612  002C90  361B               	rlcf	i1___fldiv@b+3,f,c
 10613  002C92  BE2E               	btfsc	i1___fldiv@grs+3,7,c
 10614  002C94  8018               	bsf	i1___fldiv@b,0,c
 10615  002C96  90D8               	bcf	status,0,c
 10616  002C98  362B               	rlcf	i1___fldiv@grs,f,c
 10617  002C9A  362C               	rlcf	i1___fldiv@grs+1,f,c
 10618  002C9C  362D               	rlcf	i1___fldiv@grs+2,f,c
 10619  002C9E  362E               	rlcf	i1___fldiv@grs+3,f,c
 10620  002CA0  0629               	decf	i1___fldiv@new_exp,f,c
 10621  002CA2  A0D8               	btfss	status,0,c
 10622  002CA4  062A               	decf	i1___fldiv@new_exp+1,f,c
 10623  002CA6                     i1l6573:
 10624  002CA6  AE1A               	btfss	i1___fldiv@b+2,7,c
 10625  002CA8  D7EF               	goto	i1l6567
 10626  002CAA  0E00               	movlw	0
 10627  002CAC  6E30               	movwf	i1___fldiv@aexp,c
 10628  002CAE  AE2E               	btfss	i1___fldiv@grs+3,7,c
 10629  002CB0  D017               	goto	i1l1036
 10630  002CB2  0EFF               	movlw	255
 10631  002CB4  142B               	andwf	i1___fldiv@grs,w,c
 10632  002CB6  6E20               	movwf	??i1___fldiv& (0+255),c
 10633  002CB8  0EFF               	movlw	255
 10634  002CBA  142C               	andwf	i1___fldiv@grs+1,w,c
 10635  002CBC  6E21               	movwf	(??i1___fldiv+1)& (0+255),c
 10636  002CBE  0EFF               	movlw	255
 10637  002CC0  142D               	andwf	i1___fldiv@grs+2,w,c
 10638  002CC2  6E22               	movwf	(??i1___fldiv+2)& (0+255),c
 10639  002CC4  0E7F               	movlw	127
 10640  002CC6  142E               	andwf	i1___fldiv@grs+3,w,c
 10641  002CC8  6E23               	movwf	(??i1___fldiv+3)& (0+255),c
 10642  002CCA  5020               	movf	??i1___fldiv,w,c
 10643  002CCC  1021               	iorwf	??i1___fldiv+1,w,c
 10644  002CCE  1022               	iorwf	??i1___fldiv+2,w,c
 10645  002CD0  1023               	iorwf	??i1___fldiv+3,w,c
 10646  002CD2  B4D8               	btfsc	status,2,c
 10647  002CD4  D003               	goto	i1l1037
 10648  002CD6                     i1u864_20:
 10649  002CD6  0E01               	movlw	1
 10650  002CD8  6E30               	movwf	i1___fldiv@aexp,c
 10651  002CDA  D002               	goto	i1l1036
 10652  002CDC                     i1l1037:
 10653  002CDC  B018               	btfsc	i1___fldiv@b,0,c
 10654  002CDE  D7FB               	goto	i1u864_20
 10655  002CE0                     i1l1036:
 10656  002CE0  5030               	movf	i1___fldiv@aexp,w,c
 10657  002CE2  B4D8               	btfsc	status,2,c
 10658  002CE4  D01F               	goto	i1l6593
 10659  002CE6  0E01               	movlw	1
 10660  002CE8  2618               	addwf	i1___fldiv@b,f,c
 10661  002CEA  0E00               	movlw	0
 10662  002CEC  2219               	addwfc	i1___fldiv@b+1,f,c
 10663  002CEE  221A               	addwfc	i1___fldiv@b+2,f,c
 10664  002CF0  221B               	addwfc	i1___fldiv@b+3,f,c
 10665  002CF2  A01B               	btfss	i1___fldiv@b+3,0,c
 10666  002CF4  D017               	goto	i1l6593
 10667  002CF6  C018  F020         	movff	i1___fldiv@b,??i1___fldiv
 10668  002CFA  C019  F021         	movff	i1___fldiv@b+1,??i1___fldiv+1
 10669  002CFE  C01A  F022         	movff	i1___fldiv@b+2,??i1___fldiv+2
 10670  002D02  C01B  F023         	movff	i1___fldiv@b+3,??i1___fldiv+3
 10671  002D06  3423               	rlcf	??i1___fldiv+3,w,c
 10672  002D08  3223               	rrcf	??i1___fldiv+3,f,c
 10673  002D0A  3222               	rrcf	??i1___fldiv+2,f,c
 10674  002D0C  3221               	rrcf	??i1___fldiv+1,f,c
 10675  002D0E  3220               	rrcf	??i1___fldiv,f,c
 10676  002D10  C020  F018         	movff	??i1___fldiv,i1___fldiv@b
 10677  002D14  C021  F019         	movff	??i1___fldiv+1,i1___fldiv@b+1
 10678  002D18  C022  F01A         	movff	??i1___fldiv+2,i1___fldiv@b+2
 10679  002D1C  C023  F01B         	movff	??i1___fldiv+3,i1___fldiv@b+3
 10680  002D20  4A29               	infsnz	i1___fldiv@new_exp,f,c
 10681  002D22  2A2A               	incf	i1___fldiv@new_exp+1,f,c
 10682  002D24                     i1l6593:
 10683  002D24  BE2A               	btfsc	i1___fldiv@new_exp+1,7,c
 10684  002D26  D010               	goto	i1l6597
 10685  002D28  502A               	movf	i1___fldiv@new_exp+1,w,c
 10686  002D2A  E103               	bnz	i1u868_20
 10687  002D2C  2829               	incf	i1___fldiv@new_exp,w,c
 10688  002D2E  A0D8               	btfss	status,0,c
 10689  002D30  D00B               	goto	i1l6597
 10690  002D32                     i1u868_20:
 10691  002D32  0E00               	movlw	0
 10692  002D34  6E2A               	movwf	i1___fldiv@new_exp+1,c
 10693  002D36  6829               	setf	i1___fldiv@new_exp,c
 10694  002D38  0E00               	movlw	0
 10695  002D3A  6E18               	movwf	i1___fldiv@b,c
 10696  002D3C  0E00               	movlw	0
 10697  002D3E  6E19               	movwf	i1___fldiv@b+1,c
 10698  002D40  0E00               	movlw	0
 10699  002D42  6E1A               	movwf	i1___fldiv@b+2,c
 10700  002D44  0E00               	movlw	0
 10701  002D46  6E1B               	movwf	i1___fldiv@b+3,c
 10702  002D48                     i1l6597:
 10703  002D48  BE2A               	btfsc	i1___fldiv@new_exp+1,7,c
 10704  002D4A  D005               	goto	i1u869_20
 10705  002D4C  502A               	movf	i1___fldiv@new_exp+1,w,c
 10706  002D4E  E111               	bnz	i1l6601
 10707  002D50  0429               	decf	i1___fldiv@new_exp,w,c
 10708  002D52  B0D8               	btfsc	status,0,c
 10709  002D54  D00E               	goto	i1l6601
 10710  002D56                     i1u869_20:
 10711  002D56  0E00               	movlw	0
 10712  002D58  6E2A               	movwf	i1___fldiv@new_exp+1,c
 10713  002D5A  0E00               	movlw	0
 10714  002D5C  6E29               	movwf	i1___fldiv@new_exp,c
 10715  002D5E  0E00               	movlw	0
 10716  002D60  6E18               	movwf	i1___fldiv@b,c
 10717  002D62  0E00               	movlw	0
 10718  002D64  6E19               	movwf	i1___fldiv@b+1,c
 10719  002D66  0E00               	movlw	0
 10720  002D68  6E1A               	movwf	i1___fldiv@b+2,c
 10721  002D6A  0E00               	movlw	0
 10722  002D6C  6E1B               	movwf	i1___fldiv@b+3,c
 10723  002D6E  0E00               	movlw	0
 10724  002D70  6E28               	movwf	i1___fldiv@sign,c
 10725  002D72                     i1l6601:
 10726  002D72  C029  F02F         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 10727  002D76  A02F               	btfss	i1___fldiv@bexp,0,c
 10728  002D78  D002               	goto	i1l6607
 10729  002D7A  8E1A               	bsf	i1___fldiv@b+2,7,c
 10730  002D7C  D001               	goto	i1l6609
 10731  002D7E                     i1l6607:
 10732  002D7E  9E1A               	bcf	i1___fldiv@b+2,7,c
 10733  002D80                     i1l6609:
 10734  002D80  90D8               	bcf	status,0,c
 10735  002D82  302F               	rrcf	i1___fldiv@bexp,w,c
 10736  002D84  6E1B               	movwf	i1___fldiv@b+3,c
 10737  002D86  D70E               	goto	i1l6523
 10738  002D88                     __end_ofi1___fldiv:
 10739                           	opt callstack 0
 10740                           
 10741 ;; *************** function _TMR0handler *****************
 10742 ;; Defined at:
 10743 ;;		line 316 in file "George_Wyatt_Lab6.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;		None
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;Total ram usage:        1 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:    1
 10764 ;; This function calls:
 10765 ;;		Nothing
 10766 ;; This function is called by:
 10767 ;;		_LoPriISR
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text44
 10772  003F9E                     __ptext44:
 10773                           	opt callstack 0
 10774  003F9E                     _TMR0handler:
 10775                           	opt callstack 20
 10776                           
 10777                           ;George_Wyatt_Lab6.c: 317:     if( Alive_count < 4880 ) { Alive_count++; }
 10778                           
 10779                           ;incstack = 0
 10780  003F9E  0E10               	movlw	16
 10781  003FA0  5C45               	subwf	_Alive_count,w,c
 10782  003FA2  0E13               	movlw	19
 10783  003FA4  5846               	subwfb	_Alive_count+1,w,c
 10784  003FA6  B0D8               	btfsc	status,0,c
 10785  003FA8  D003               	goto	i1l2937
 10786  003FAA  4A45               	infsnz	_Alive_count,f,c
 10787  003FAC  2A46               	incf	_Alive_count+1,f,c
 10788  003FAE  D011               	goto	i1l2941
 10789  003FB0                     i1l2937:
 10790                           
 10791                           ;George_Wyatt_Lab6.c: 319:         LATDbits.LATD4 = ~LATDbits.LATD4;
 10792  003FB0  A88C               	btfss	3980,4,c	;volatile
 10793  003FB2  D002               	goto	i1u272_20
 10794  003FB4  0E01               	movlw	1
 10795  003FB6  D001               	goto	i1u272_26
 10796  003FB8                     i1u272_20:
 10797  003FB8  0E00               	movlw	0
 10798  003FBA                     i1u272_26:
 10799  003FBA  0AFF               	xorlw	255
 10800  003FBC  6E18               	movwf	??_TMR0handler& (0+255),c
 10801  003FBE  3A18               	swapf	??_TMR0handler,f,c
 10802  003FC0  508C               	movf	3980,w,c	;volatile
 10803  003FC2  1818               	xorwf	??_TMR0handler,w,c
 10804  003FC4  0BEF               	andlw	-17
 10805  003FC6  1818               	xorwf	??_TMR0handler,w,c
 10806  003FC8  6E8C               	movwf	3980,c	;volatile
 10807                           
 10808                           ;George_Wyatt_Lab6.c: 320:         Alive_count = 0;
 10809  003FCA  0E00               	movlw	0
 10810  003FCC  6E46               	movwf	_Alive_count+1,c
 10811  003FCE  0E00               	movlw	0
 10812  003FD0  6E45               	movwf	_Alive_count,c
 10813  003FD2                     i1l2941:
 10814                           
 10815                           ;George_Wyatt_Lab6.c: 322:     INTCONbits.TMR0IF = 0;
 10816  003FD2  94F2               	bcf	4082,2,c	;volatile
 10817  003FD4  0012               	return		;funcret
 10818  003FD6                     __end_of_TMR0handler:
 10819                           	opt callstack 0
 10820                           
 10821 ;; *************** function _HiPriISR *****************
 10822 ;; Defined at:
 10823 ;;		line 275 in file "George_Wyatt_Lab6.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;  LCDOUT         18    4[COMRAM] unsigned char [18]
 10828 ;;  letter          1   22[COMRAM] unsigned char 
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  1    wreg      void 
 10831 ;; Registers used:
 10832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10840 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10841 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10842 ;;Total ram usage:       23 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		Interrupt level 2
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	intcode
 10852  000008                     __pintcode:
 10853                           	opt callstack 0
 10854  000008                     _HiPriISR:
 10855                           	opt callstack 19
 10856                           
 10857                           ;incstack = 0
 10858  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10859  00000A  EFA5  F01D         	goto	int_func
 10860                           
 10861                           	psect	intcode_body
 10862  003B4A                     __pintcode_body:
 10863                           	opt callstack 19
 10864  003B4A                     int_func:
 10865                           	opt callstack 19
 10866  003B4A  CFE1 F001          	movff	fsr1l,??_HiPriISR
 10867  003B4E  CFE2 F002          	movff	fsr1h,??_HiPriISR+1
 10868  003B52  CFD9 F003          	movff	fsr2l,??_HiPriISR+2
 10869  003B56  CFDA F004          	movff	fsr2h,??_HiPriISR+3
 10870                           
 10871                           ;George_Wyatt_Lab6.c: 276:     char letter;;George_Wyatt_Lab6.c: 277:     char LCDOUT[18
      +                          ] = {0x80};
 10872  003B5A  EE21  F0C6         	lfsr	2,HiPriISR@F7424
 10873  003B5E  EE10  F005         	lfsr	1,HiPriISR@LCDOUT
 10874  003B62  0E11               	movlw	17
 10875  003B64                     i2u599_41:
 10876  003B64  CFDB FFE3          	movff	plusw2,plusw1
 10877  003B68  06E8               	decf	wreg,f,c
 10878  003B6A  E2FC               	bc	i2u599_41
 10879                           
 10880                           ;George_Wyatt_Lab6.c: 278:           letter = RCREG1;
 10881  003B6C  CFAE F017          	movff	4014,HiPriISR@letter	;volatile
 10882                           
 10883                           ;George_Wyatt_Lab6.c: 279:           USART_BUFFER[INDEX] = letter;
 10884  003B70  0E00               	movlw	low _USART_BUFFER
 10885  003B72  0101               	movlb	1	; () banked
 10886  003B74  2514               	addwf	_INDEX& (0+255),w,b
 10887  003B76  6ED9               	movwf	fsr2l,c
 10888  003B78  0E01               	movlw	high _USART_BUFFER
 10889  003B7A  2115               	addwfc	(_INDEX+1)& (0+255),w,b
 10890  003B7C  6EDA               	movwf	fsr2h,c
 10891  003B7E  C017  FFDF         	movff	HiPriISR@letter,indf2
 10892                           
 10893                           ; BSR set to: 1
 10894                           ;George_Wyatt_Lab6.c: 280:           if (INDEX<=sizeof(USART_BUFFER)){
 10895  003B82  5115               	movf	(_INDEX+1)& (0+255),w,b
 10896  003B84  E107               	bnz	i2l5041
 10897  003B86  0E0B               	movlw	11
 10898  003B88  5D14               	subwf	_INDEX& (0+255),w,b
 10899  003B8A  B0D8               	btfsc	status,0,c
 10900  003B8C  D003               	goto	i2l5041
 10901                           
 10902                           ; BSR set to: 1
 10903                           ;George_Wyatt_Lab6.c: 281:               INDEX++;
 10904  003B8E  4B14               	infsnz	_INDEX& (0+255),f,b
 10905  003B90  2B15               	incf	(_INDEX+1)& (0+255),f,b
 10906                           
 10907                           ;George_Wyatt_Lab6.c: 282:           }else{INDEX = 0;}
 10908  003B92  D004               	goto	i2l221
 10909  003B94                     i2l5041:
 10910                           
 10911                           ; BSR set to: 1
 10912  003B94  0E00               	movlw	0
 10913  003B96  6F15               	movwf	(_INDEX+1)& (0+255),b
 10914  003B98  0E00               	movlw	0
 10915  003B9A  6F14               	movwf	_INDEX& (0+255),b
 10916  003B9C                     i2l221:
 10917                           
 10918                           ; BSR set to: 1
 10919  003B9C  C004  FFDA         	movff	??_HiPriISR+3,fsr2h
 10920  003BA0  C003  FFD9         	movff	??_HiPriISR+2,fsr2l
 10921  003BA4  C002  FFE2         	movff	??_HiPriISR+1,fsr1h
 10922  003BA8  C001  FFE1         	movff	??_HiPriISR,fsr1l
 10923  003BAC  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10924  003BAE  0011               	retfie		f
 10925  003BB0                     __end_of_HiPriISR:
 10926                           	opt callstack 0
 10927                           
 10928                           	psect	rparam
 10929  0000                     
 10930                           	psect	temp
 10931  000047                     btemp:
 10932                           	opt callstack 0
 10933  000047                     	ds	1
 10934  0000                     int$flags	set	btemp
 10935  0000                     wtemp8	set	btemp+1
 10936  0000                     ttemp5	set	btemp+1
 10937  0000                     ttemp6	set	btemp+4
 10938  0000                     ttemp7	set	btemp+8
 10939                           tosu	equ	0xFFF
 10940                           tosh	equ	0xFFE
 10941                           tosl	equ	0xFFD
 10942                           stkptr	equ	0xFFC
 10943                           pclatu	equ	0xFFB
 10944                           pclath	equ	0xFFA
 10945                           pcl	equ	0xFF9
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           indf0	equ	0xFEF
 10953                           postinc0	equ	0xFEE
 10954                           postdec0	equ	0xFED
 10955                           preinc0	equ	0xFEC
 10956                           plusw0	equ	0xFEB
 10957                           fsr0h	equ	0xFEA
 10958                           fsr0l	equ	0xFE9
 10959                           wreg	equ	0xFE8
 10960                           indf1	equ	0xFE7
 10961                           postinc1	equ	0xFE6
 10962                           postdec1	equ	0xFE5
 10963                           preinc1	equ	0xFE4
 10964                           plusw1	equ	0xFE3
 10965                           fsr1h	equ	0xFE2
 10966                           fsr1l	equ	0xFE1
 10967                           bsr	equ	0xFE0
 10968                           indf2	equ	0xFDF
 10969                           postinc2	equ	0xFDE
 10970                           postdec2	equ	0xFDD
 10971                           preinc2	equ	0xFDC
 10972                           plusw2	equ	0xFDB
 10973                           fsr2h	equ	0xFDA
 10974                           fsr2l	equ	0xFD9
 10975                           status	equ	0xFD8


Data Sizes:
    Strings     59
    Constant    26
    Data        34
    BSS         152
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      70
    BANK0           160    131     133
    BANK1           256     64     232
    BANK2           256     34      34
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), dispPot@temp(BANK0[10]), dispTemp@temp(BANK0[10]), STR_7(CODE[21]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), dispPot@temp(BANK0[10]), dispTemp@temp(BANK0[10]), STR_7(CODE[21]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@tempString(BANK2[10]), DisplayC@temp(BANK0[10]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@tempString(BANK2[10]), DisplayC@temp(BANK0[10]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), temperatureString(BANK1[10]), potString(BANK1[10]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), temperatureString(BANK1[10]), potString(BANK1[10]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_6(CODE[4]), STR_4(CODE[5]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> commandString(BANK1[10]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> temperatureString(BANK1[10]), potString(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> temperatureString(BANK1[10]), potString(BANK1[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1917_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> temperatureString(BANK1[10]), potString(BANK1[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> temperatureString(BANK1[10]), potString(BANK1[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    checkCommand@cmd	PTR const unsigned char  size(2) Largest target is 10
		 -> commandString(BANK1[10]), 

    sendChars@letters	PTR const unsigned char  size(2) Largest target is 21
		 -> dispPot@temp(BANK0[10]), dispTemp@temp(BANK0[10]), STR_7(CODE[21]), 

    DisplayV@LCDStr	PTR const unsigned char  size(2) Largest target is 10
		 -> DisplayC@temp(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), main@tempString(BANK2[10]), DisplayC@temp(BANK0[10]), 

    DisplayC@LCDStr	PTR const unsigned char  size(2) Largest target is 10
		 -> temperatureString(BANK1[10]), potString(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LoPriISR in COMRAM

    _TMR1handler->i1___fltol
    i1___fltol->i1___fldiv

Critical Paths under _HiPriISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    _checkCommand->_dispPot
    _checkCommand->_dispTemp
    _dispTemp->_sendChars
    _dispPot->_sendChars
    _sendChars->_strlen
    _Initial->_InitLCD
    _DisplayC->_strcpy

Critical Paths under _LoPriISR in BANK0

    _LoPriISR->_TMR1handler
    _TMR1handler->i1___fltol

Critical Paths under _HiPriISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _LoPriISR in BANK1

    None.

Critical Paths under _HiPriISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LoPriISR in BANK2

    None.

Critical Paths under _HiPriISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LoPriISR in BANK3

    None.

Critical Paths under _HiPriISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LoPriISR in BANK4

    None.

Critical Paths under _HiPriISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LoPriISR in BANK5

    None.

Critical Paths under _HiPriISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LoPriISR in BANK6

    None.

Critical Paths under _HiPriISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LoPriISR in BANK7

    None.

Critical Paths under _HiPriISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LoPriISR in BANK8

    None.

Critical Paths under _HiPriISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LoPriISR in BANK9

    None.

Critical Paths under _HiPriISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LoPriISR in BANK10

    None.

Critical Paths under _HiPriISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LoPriISR in BANK11

    None.

Critical Paths under _HiPriISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LoPriISR in BANK12

    None.

Critical Paths under _HiPriISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LoPriISR in BANK13

    None.

Critical Paths under _HiPriISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LoPriISR in BANK14

    None.

Critical Paths under _HiPriISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LoPriISR in BANK15

    None.

Critical Paths under _HiPriISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   53742
                                            127 BANK0      4     4      0
                                              0 BANK2     34    34      0
                           _DisplayC
                            _Initial
                            ___fldiv
                            ___flmul
                           ___xxtofl
                       _checkCommand
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   38222
                                            117 BANK0     10    10      0
                                             56 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   37538
                                            109 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   37011
                                             87 BANK0     22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             16 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30202
                                             75 BANK0     12     5      7
                                              0 BANK1     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             22 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4047
                                             32 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             25 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             16 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             55 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     572
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             55 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             16 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             16 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                             30 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             55 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             16 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3013
                                             30 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             16 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             23 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             16 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             16 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _checkCommand                                         2     0      2    3211
                                             38 BANK0      2     0      2
                            _dispPot
                           _dispTemp
                          _sendChars
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               5     1      4     521
                                             16 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _dispTemp                                            12    12      0     914
                                             26 BANK0     12    12      0
                          _sendChars
 ---------------------------------------------------------------------------------
 (2) _dispPot                                             12    12      0     914
                                             26 BANK0     12    12      0
                          _sendChars
 ---------------------------------------------------------------------------------
 (2) _sendChars                                            6     4      2     710
                                             20 BANK0      6     4      2
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0     204
                            _InitLCD
 ---------------------------------------------------------------------------------
 (2) _InitLCD                                              3     3      0     204
                                             16 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DisplayC                                            12    10      2    2314
                                             26 BANK0     12    10      2
                           _DisplayV
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4    1577
                                             16 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _DisplayV                                             4     2      2     449
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LoPriISR                                             3     3      0    2301
                                             13 BANK0      3     3      0
                        _TMR0handler
                        _TMR1handler
 ---------------------------------------------------------------------------------
 (10) _TMR1handler                                         9     9      0    2301
                                              4 BANK0      9     9      0
                          i1___fldiv
                          i1___fltol
 ---------------------------------------------------------------------------------
 (11) i1___fltol                                          10     6      4     372
                                             48 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                          i1___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___fldiv                                          25    17      8    1753
                                             23 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) _TMR0handler                                         1     1      0       0
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HiPriISR                                           23    23      0      24
                                              0 COMRAM    23    23      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DisplayC
     _DisplayV
     _strcpy
   _Initial
     _InitLCD
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _checkCommand
     _dispPot
       _sendChars
         _strlen
     _dispTemp
       _sendChars
         _strlen
     _sendChars
       _strlen
     _strcmp
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _strcpy

 _LoPriISR (ROOT)
   _TMR0handler
   _TMR1handler
     i1___fldiv
     i1___fltol
       i1___fldiv (ARG)

 _HiPriISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     22      22       9       13.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     40      E8       7       90.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      46       1       74.5%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D5      12        0.0%
DATA                 0      0     1D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Nov 19 14:14:08 2020

            dispPot@temp 007A             ___fldiv@aexp 0096             ___fldiv@bexp 0095  
           ___fldiv@sign 008E              i1___fldiv@a 001C              i1___fldiv@b 0018  
           dispTemp@temp 007A                       l30 389C                       l31 389E  
                     l26 38C6                       l27 384C                       l28 385E  
                     l29 3860             ___awdiv@sign 0075                       bsr 000FE0  
    ___wmul@multiplicand 0072              __CFG_BORV$2 000000                      l311 37D8  
                    l250 3AEE                      l183 1A92                      l352 13C2  
                    l192 1C38                      l185 1A94                      l194 1C3A  
                    l188 1ACC                      l197 1C72                      l706 3274  
                    l378 16BC                      l970 26AC                      l971 268A  
                    l986 277E                      l995 27E4                      l996 27E0  
          HiPriISR@F7424 01C6                      _pad 37A6             i1___fltol@f1 0031  
           ___awmod@sign 0075                      wreg 000FE8               _TXSTA1bits 000FAC  
           ___flmul@aexp 008B             ___flmul@bexp 0090             ___flmul@sign 008A  
           ___flmul@temp 0095             ___flmul@prod 0091          __end_of_LCDRow1 100B  
          i1___fldiv@grs 002B            i1___fldiv@rem 0024             ___fltol@exp1 0079  
                   l1103 315A                     l1025 29EA                     l1036 2A58  
                   l1037 2A54                     l1151 3090                     l1055 2296  
                   l1072 2534                     l1064 24AE                     l1065 24AA  
                   l1163 2EA2                     l1251 3DB8                     l1096 30DC  
                   l5115 2596                     l6013 161C                     l6005 159E  
                   l5151 2602                     l5143 25E2                     l5119 259A  
                   l5217 26F2                     l5209 26D0                     l5073 367E  
                   l5313 37C0                     l6105 1908                     l6041 175A  
                   l5307 3D2E                     l5083 3E5C                     l5219 26F6  
                   l5227 2708                     l5139 25DE                     l5323 37FC  
                   l6107 1912                     l6027 16B4                     l6019 165C  
                   l6203 35E0                     l5085 3E62                     l5413 28A4  
                   l5245 27A2                     l5261 27C2                     l5237 276E  
                   l5181 263E                     l5093 3F6E                     l5317 37D0  
                   l6117 196C                     l6053 178A                     l6061 17AA  
                   l6029 16D6                     l6205 35EE                     ?_pad 0080  
                   l5255 27B8                     l5343 3334                     l5327 3828  
                   l5319 37E2                     l6143 19FC                     l6127 1998  
                   l6303 21C2                     l6225 3B2E                     l5433 28E4  
                   l5417 28A8                     l5281 282A                     l5193 2698  
                   l5097 3F86                     l6323 339A                     l5531 2AF8  
                   l5523 2AEA                     l5515 2A9C                     l5451 2932  
                   l5195 269C                     l5339 332A                     l6405 3EA4  
                   l6173 2FB8                     l6157 2F56                     l5445 291C  
                   l5437 28E8                     l5621 2456                     l5293 2858  
                   l5349 3374                     l6069 17CE                     l6077 1868  
                   l6245 1EFC                     l6309 21DA                     l6351 341A  
                   l6183 302C                     l6175 2FC0                     l6167 2FA8  
                   l6159 2F5A                     l5711 39D4                     l5519 2AC0  
                   l5551 2242                     l5295 285A                     l5383 2F02  
                   l6247 1F1A                     l6431 3C26                     l6177 2FC6  
                   l5529 2AF6                     l5553 2246                     l5289 2850  
                   l5369 2E02                     l6089 18BA                     l6273 2074  
                   l6265 2014                     l6249 1F28                     l6433 3C4E  
                   l6419 3EE8                     l6179 2FF2                     l5715 39E2  
                   l5707 39CA                     l5731 3A92                     l5483 29E8  
                   l5459 294A                     l5651 2510                     l5627 2474  
                   l5571 2286                     l5555 2256                     l5387 2F30  
                   l5379 2EC4                     l5477 29C2                     l5469 299A  
                   l5901 1186                     l6293 2176                     l6277 209E  
                   l6391 3BBA                     l5751 3AD8                     l5743 3AC0  
                   l5735 3AA0                     l5727 3A86                     l5495 2A1E  
                   l5663 2552                     l5647 24F2                     l5823 34A6  
                   l5807 345C                     l5737 3AA8                     l5489 2A00  
                   l5569 2282                     l5841 34E6                     l5833 34BE  
                   l5905 11AE                     l6731 3CEC                     l5683 397C  
                   l5747 3ACA                     l5763 3944                     l5579 22B4  
                   l5835 34CA                     l5827 34B6                     l5915 1222  
                   l5923 1242                     l6299 21B6                     l6389 3BB2  
                   l5853 3F5A                     l5933 12C4                     l5695 39A2  
                   l5767 3962                     l5759 3910                     l5783 325E  
                   l5775 3214                     l5951 13AA                     l5935 1316  
                   l6815 1A5E                     l6807 1A4C                     l6737 3D10  
                   l5697 39AA                     l5689 398C                     l5961 13D2  
                   l5929 128A                     l6913 1DDC                     l6771 3110  
                   l6763 30EC                     l5779 3248                     l5971 142A  
                   l5955 13CC                     l5939 1352                     l5867 10A2  
                   l6907 1DB6                     l6781 3180                     l6773 311C  
                   l5789 32AC                     l5797 4058                     l5981 1448  
                   l6917 1E00                     l6783 318C                     l6775 3142  
                   l5991 147C                     l5879 10D4                     l5887 10EA  
                   l6927 1E22                     l6847 1B9E                     l6769 310A  
                   l5969 1424                     l5897 115E                     l6857 1C0E  
                   l5987 146C                     l5899 117C                     l5997 14A6  
                   l6799 31CC                     l6887 1D10                     l6897 1D7C  
                   STR_1 103A                     STR_2 1035                     STR_3 1030  
                   STR_4 1030                     STR_5 104F                     STR_6 104F  
                   STR_7 101B                     STR_8 103F                     STR_9 1047  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   u6100 4000                     u6110 4002                     u7000 2ACE  
                   u6040 3676                     u6210 2660                     u7100 2418  
                   u6220 2670                     u6060 36BE                     u6070 3E84  
                   u6230 2672                     u8000 19E4                     u7105 240E  
                   u6410 27DA                     u8010 19E6                     u7300 3AAC  
                   u7140 24A4                     u6260 26B4                     u6077 3E7A  
                   u6510 3D6A                     u8040 2FA4                     u7240 39AE  
                   u7090 22A2                     u8210 1F66                     u7500 3F56  
                   u8060 3060                     u7180 2500                     u7420 344A  
                   u6620 336C                     u8140 363C                     u8220 1F68  
                   u6517 3D60                     u8070 3062                     u7350 395E  
                   u7190 251E                     u6470 2836                     u6390 27C6  
                   u7430 347A                     u6630 336E                     u8230 1F74  
                   u6615 334E                     u8160 3B22                     u6720 2E82  
                   u6640 3D9E                     u7600 11F2                     u9017 338C  
                   u6705 2E1A                     u6570 32F0                     u6706 2E20  
                   u6650 3DA0                     u7610 11F4                     u7530 10C2  
                   u9027 33D0                     u7435 3470                     u6707 2E2E  
                   u6740 2EE2                     u9037 340C                     u6725 2E78  
                   u7470 34D0                     u6670 2DD0                     u7710 13EA  
                   u9047 3884                     u8167 3B18                     u6575 32E4  
                   u6680 2DF0                     u7560 112E                     u8280 212A  
                   u9057 38BC                     u6745 2ED8                     u8370 3BEC  
                   u6770 4032                     u7650 137C                     u7570 1130  
                   u8290 212C                     u6675 2DC6                     u8380 3ED0  
                   u6780 4034                     u8390 3F14                     u6950 2A4E  
                   u7750 1444                     u7920 1894                     u7680 13B8  
                   u8810 3196                     u8900 1C24                     u6990 2AAA  
                   u8920 1C46                     u8850 1A7E                     u7980 1982  
                   u8940 1D58                     u8950 1D92                     u8926 1C48  
                   u8870 1AA0                     u8960 1DA2                     u8890 1BE6  
                   u8876 1AA2                     _TMR1 000FCE             InitLCD@count 0071  
                   _dbuf 0116                     _atoi 2F42                     _main 1A48  
                   _prec 0043                     _nout 003F                     pad@i 0087  
                   pad@p 0084                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 0089                     fsr2l 000FD9                     btemp 0047  
          __CFG_BOREN$ON 000000    TMR1handler@bins_lower 006A            ___fpclassifyf 32B0  
                   prodh 000FF4                     prodl 000FF3    TMR1handler@bins_upper 0069  
                   start 004A            __CFG_FOSC$HS1 000000           HiPriISR@LCDOUT 0005  
        ___fldiv@new_exp 008F             _tolower$1992 007C             ___param_bank 000000  
        __end_of_InitLCD 343C          __end_of_Initial 37A6                    ??_pad 0086  
         i1___fldiv@aexp 0030           i1___fldiv@bexp 002F           i1___fldiv@sign 0028  
          ___fltol@sign1 0078                    ?_atoi 0077          __end_of___fladd 2876  
                  ?_main 0001          __end_of___fldiv 2B00          __end_of___awdiv 39EC  
        __end_of___flneg 406A                    _ADRES 000FC3                    STR_12 1043  
                  STR_13 104B                    STR_16 1053                    STR_18 1053  
        __end_of___awmod 3AE2          __end_of___flmul 2568          __end_of___flsub 3E52  
        __end_of___fltol 34F8                    _T0CON 000FD5          ___awdiv@divisor 0072  
                  _T1CON 000FCD                    _INDEX 0114                    i1l231 003A  
                  i1l242 3A5C                    i1l226 0026                    i1l227 0030  
                  i1l239 3A52                    i2l221 3B9C          ___awdiv@counter 0074  
           vfpfcnvrt@fmt 00B9                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTB 000F81                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISF 000F97  
         HiPriISR@letter 0017          __end_of_dispPot 3F22            InitLCD@nibble 0072  
                  _flags 00E3                    _fputc 3664                    _fputs 3F62  
        __end_of_isdigit 403A                    atoi@n 0084                    pad@fp 0080  
                  atoi@s 0077                    _width 0041                    _putch 40DA  
                  main@c 0210                    main@i 021A          __end_of_isspace 3F62  
        __end_of_isupper 4008                    tablat 000FF5           i1___fltol@exp1 0036  
                  plusw1 000FE3                    plusw2 000FDB                    ttemp5 0048  
                  ttemp6 004B                    ttemp7 004F                    status 000FD8  
                  wtemp8 0048          __end_of_sprintf 3CC6           ?___fpclassifyf 0070  
        __end_of_tolower 3DC2       __size_ofi1___fldiv 0288          __end_of_strncmp 3664  
       __end_of_HiPriISR 3BB0       __size_ofi1___fltol 00BC          __initialization 3DC2  
       __end_of_DisplayC 40B8         __end_of_DisplayV 38DA         __end_of_LoPriISR 004A  
            _Alive_count 0045             __end_of_atoi 309A             __end_of_main 1E32  
       sendChars@letters 0074                   ??_atoi 0079                   ??_main 00DF  
          __activetblptr 000003            main@convCount 0212                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0070  
                 ?_fputs 0079                   _ANCON0 000F25         ___awdiv@dividend 0070  
                 ?_putch 0001        _temperatureString 0166                   i1l1025 2C72  
                 i1l1036 2CE0                   i1l1037 2CDC                   i1l2941 3FD2  
                 i1l2937 3FB0                   i1l6511 2B6C                   i1l6601 2D72  
                 i1l6441 3516                   i1l6523 2BA4                   i1l6515 2B70  
                 i1l6461 3572           __CFG_WDTEN$OFF 000000                   i1l6607 2D7E  
                 i2l5041 3B94                   i1l6609 2D80                   i1l6561 2C70  
                 i1l6537 2BD2                   i1l6529 2BBA                   i1l6457 3562  
                 i1l6555 2C4A                   i1l6547 2C22                   i1l6491 2B2C  
                 i1l6475 35A2                   i1l6467 357A                   i1l6573 2CA6  
                 i1l6469 3586                   i1l6567 2C88                   i1l6495 2B30  
                 i1l6593 2D24                   i1l6597 2D48    __size_of_checkCommand 0058  
                 _RCREG1 000FAE                   _SPBRG1 000FAF                   _TXREG1 000FAD  
       __end_of___xxtofl 31DE                   _TXSTA1 000FAC                ??_InitLCD 0070  
              ??_Initial 0073           __CFG_PWRTEN$ON 000000           __CFG_XINST$OFF 000000  
       __end_of_dispTemp 3EDE             vfprintf@cfmt 00D3                   ___flge 31DE  
                 ___fleq 38DA                ??___fladd 0078                   ___wmul 406A  
              ??___fldiv 0086                ??___awdiv 0074                ??___flneg 0074  
              ??___awmod 0074                ??___flmul 0086                ??___flsub 009F  
              ??___fltol 0074                   _efgtoa 1058                   _floorf 2D88  
                 clear_0 3DE8                   clear_1 3DFA         ___awdiv@quotient 0076  
        ___awmod@divisor 0072          ___awmod@counter 0074                   pad@buf 0082  
              ??_dispPot 007A                   _strcmp 3BB0                   _strcpy 3D1E  
                 _strlen 3E52             ?_TMR0handler 0001        __end_ofi1___fldiv 2D88  
           ?_TMR1handler 0001        __end_ofi1___fltol 35B4                   fputc@c 0070  
                 fputs@c 007D                   fputs@i 007E                   fputs@s 0079  
              ??_isdigit 0072          ___fpclassifyf@e 0078          ___fpclassifyf@u 007A  
        ___fpclassifyf@x 0070             __mediumconst 0000                ??_isspace 0072  
           _checkCommand 3CC6                   tblptrh 000FF7                ??_isupper 0072  
                 tblptrl 000FF6                   tblptru 000FF8          i1___fltol@sign1 0035  
                 putch@c 0001         __end_of_vfprintf 3C6E                ??_sprintf 00D5  
              ??_tolower 0078                ??_strncmp 0076               ___flge@ff1 0097  
             ___flge@ff2 009B          ??___fpclassifyf 0074             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070               ___fleq@ff1 0070  
             ___fleq@ff2 0074               __accesstop 0060  __end_of__initialization 3E00  
             ___flneg@f1 0070            ___rparam_used 000001               ___fltol@f1 0070  
         __pcstackCOMRAM 0001             __pidataBANK1 40B8            __end_of_fputc 3706  
          __end_of_fputs 3F9E            __end_of_putch 40DC                ?_HiPriISR 0001  
           _analogResult 0184                  ??_fputc 0074                  ??_fputs 007D  
              ?_DisplayC 007A                ?_DisplayV 0070                  ??_putch 0070  
              ?_LoPriISR 0001               __pbssBANK0 00E3               __pbssBANK1 0100  
        __CFG_PLLCFG$OFF 000000                  ?___flge 0097                  ?___fleq 0070  
     main@convCount_1122 0214       __size_of_sendChars 0068                  ?___wmul 0070  
                ?_efgtoa 00AB                  ?_floorf 0097                  ?_strcmp 0070  
                ?_strcpy 0070                  ?_strlen 0070                  _LCDRow1 1001  
              ?___xxtofl 0070               ??_HiPriISR 0001       __size_of_vfpfcnvrt 03E2  
                _SPBRGH1 000FD4                  _SSP1BUF 000FC9                  _SSPCON1 000FC6  
              ?_dispTemp 0001               ??_DisplayC 007C               ??_DisplayV 0072  
             ??_LoPriISR 006D                  _InitLCD 337E                  _Initial 3706  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 00D2  
        __size_of___fleq 008C                  ___fladd 2568                  ___fldiv 2876  
                ___awdiv 3966                  ___flneg 403A                  ___awmod 3A70  
                ___flmul 2214                  ___flsub 3E0A                  ___fltol 343C  
        __size_of___wmul 0028                ?_vfprintf 00CD             __psmallconst 1000  
        __size_of_efgtoa 09F0          __size_of_floorf 01BA                  __pcinit 3DC2  
                __ramtop 1000                  __ptext0 1A48                  __ptext1 3C6E  
                __ptext2 3C14                  __ptext3 1E32                  __ptext4 35B4  
                __ptext5 1058                  __ptext6 3D74                  __ptext7 3FD6  
                __ptext8 37A6                  __ptext9 3F62                  _dispPot 3EDE  
                _command 01D8                _T0CONbits 000FD5          __size_of_strcmp 0064  
        __size_of_strcpy 0056          __size_of_strlen 0048                _T1CONbits 000FCD  
           __size_of_pad 009E                  _isdigit 4008               ??___xxtofl 0074  
       ___awmod@dividend 0070                  _isspace 3F22     __size_of_TMR0handler 0038  
                _isupper 3FD6                  efgtoa@c 00B1                  efgtoa@d 019E  
                efgtoa@e 01B6                  efgtoa@f 00AD                  efgtoa@g 01B2  
                efgtoa@h 01A8                  efgtoa@i 01B0                  efgtoa@l 01AC  
                efgtoa@m 019A                  efgtoa@n 01B8                  efgtoa@p 01A2  
   __size_of_TMR1handler 0084                  efgtoa@t 0196                  efgtoa@u 01BA  
                efgtoa@w 01A5           main@tempString 0200                  atoi@neg 007D  
      __end_of_sendChars 3B4A               ??_dispTemp 007A                  _sprintf 3C6E  
                _tolower 3D74                  _voltage 010A                  _strncmp 35B4  
         __pintcode_body 3B4A     end_of_initialization 3E00                  floorf@e 00A5  
                floorf@m 00A1                  floorf@u 00A7                  floorf@x 0097  
                fputc@fp 0072                  int_func 3B4A                  fputs@fp 007B  
              _OLD_INDEX 0112        __end_of_vfpfcnvrt 2214               efgtoa@mode 01A7  
             efgtoa@sign 01A0                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 00D3                  strcmp@l 0070                  strcmp@r 0072  
                strcpy@d 0078                  strlen@a 0072                  strcpy@s 0076  
                strlen@s 0070               _testString 100B              ___fladd@grs 007F  
          ___xxtofl@sign 0078                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISEbits 000F96                i1___fldiv 2B00              ___fldiv@grs 0091  
              i1___fltol 34F8              ___fldiv@rem 008A               main@i_1120 021E  
             main@i_1124 0220               main@i_1125 0216               main@i_1126 021C  
            ___flmul@grs 008C           sendChars@count 0078           __end_of___flge 32B0  
         __end_of___fleq 3966              vfpfcnvrt@ap 00BB              vfpfcnvrt@ct 00C9  
            vfpfcnvrt@fp 00B7           __end_of___wmul 4092           __end_of_efgtoa 1A48  
         __end_of_floorf 2F42               floorf@F524 0037           __end_of_strcmp 3C14  
         __end_of_strcpy 3D74           __end_of_strlen 3E9A      start_initialization 3DC2  
            __end_of_pad 3844               ?i1___fldiv 0018               ?i1___fltol 0031  
      __size_of_HiPriISR 3BA8        __size_of_DisplayC 0026        __size_of_DisplayV 0096  
      __size_of_LoPriISR 0032    __end_of___fpclassifyf 337E              vfprintf@fmt 00CF  
               ??___flge 009F                 ??___fleq 0078                 ??___wmul 0074  
               ??_efgtoa 00B2              __pdataBANK1 01C6                 ??_floorf 009B  
               ??_strcmp 0074                 ??_strcpy 0074                 ??_strlen 0072  
    __end_of_LCDInitStr_ 101B                ___fladd@a 0074                ___fladd@b 0070  
              ___fldiv@a 0082                ___fldiv@b 007E                ___flmul@a 0082  
              ___flmul@b 007E              __pbssCOMRAM 0037                ___flsub@a 009B  
              ___flsub@b 0097            __pcstackBANK0 0060            __pcstackBANK1 0186  
          __pcstackBANK2 0200        __size_of___xxtofl 0144        __size_of_dispTemp 0044  
      i1___fldiv@new_exp 0029                 ?_InitLCD 0001                _atoi$1873 007F  
              _atoi$1874 0083                _atoi$1875 0081                 ?_Initial 0001  
            _efgtoa$1372 018A              _efgtoa$1373 018C              _efgtoa$1382 0190  
            _efgtoa$1383 0192              _efgtoa$1384 0194              _efgtoa$1378 018E  
              _main$2197 020C           DisplayC@LCDStr 007A        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008                 ?___fladd 0070                 ?___fldiv 007E  
               ?___awdiv 0070                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 007E                 ?___flsub 0097                 ?___fltol 0070  
            __pintcodelo 0018                 ?_dispPot 0001        __size_of_vfprintf 005A  
            __smallconst 1000                 _BAUDCON1 000F65                 ?_isdigit 0070  
               ?_isspace 0070                 ?_isupper 0070              ??i1___fldiv 0020  
            ??i1___fltol 0060           DisplayV@LCDStr 0070                 ?_sprintf 01BE  
               ?_tolower 0076           __size_of_fputc 00A2           __size_of_fputs 003C  
               ?_strncmp 0070           __size_of_putch 0002          main@firstResult 0218  
              _sendChars 3AE2           ___wmul@product 0074                 _LATBbits 000F8A  
               _LATDbits 000F8C                 _LATEbits 000F8D                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 i1u272_20 3FB8                 i1u272_26 3FBA  
               i1u841_20 3504                 _PIR1bits 000F9E                 i1u842_20 3536  
               i1u842_25 352A                 i1u846_20 358C                 i1u864_20 2CD6  
               i1u868_20 2D32                 i1u869_20 2D56                 i2u599_41 3B64  
        TMR1handler@bins 006B                 _RCONbits 000FD0           DisplayV@nibble 0072  
              _potString 0170              _LCDInitStr_ 1014                 _SSP1STAT 000FC7  
              _vfpfcnvrt 1E32                dispTemp@i 0084               _ADCON0bits 000FC2  
          ??_TMR0handler 0018        ___wmul@multiplier 0070            ??_TMR1handler 0037  
               _HiPriISR 0008            ?_checkCommand 0086             _isspace$1904 0076  
        checkCommand@cmd 0086               vfpfcnvrt@c 00CC               vfpfcnvrt@f 00C5  
            _INTCON2bits 000FF1                 _DisplayC 4092                 _DisplayV 3844  
              copy_data0 3DD6                 _LoPriISR 0018               ?_sendChars 0074  
       __size_of_InitLCD 00BE                 __Hrparam 0000         __size_of_Initial 00A0  
             vfprintf@ap 00D1                 __Lrparam 0000               vfprintf@fp 00CD  
       __size_of___fladd 030E         __size_of___fldiv 028A         __size_of___awdiv 0086  
       __size_of___flneg 0030         __size_of___awmod 0072         __size_of___flmul 0354  
       __size_of___flsub 0048         __size_of___fltol 00BC               ?_vfpfcnvrt 00B7  
     ___fpclassifyf@F463 003B         __size_of_dispPot 0044           ??_checkCommand 0088  
             sprintf@fmt 01C0                 ___xxtofl 309A         __size_of_isdigit 0032  
       __size_of_isspace 0040                 __ptext10 3664                 __ptext11 40DA  
               __ptext20 38DA                 __ptext12 2D88                 __ptext21 2876  
               __ptext13 32B0                 __ptext30 3E9A                 __ptext22 3A70  
               __ptext14 343C                 __ptext31 3EDE                 __ptext23 3966  
               __ptext15 3E0A                 __ptext32 3AE2                 __ptext24 2F42  
               __ptext16 2568                 __ptext41 39EC                 __ptext33 3E52  
               __ptext25 3F22                 __ptext17 403A                 __ptext42 34F8  
               __ptext34 309A                 __ptext26 4008                 __ptext18 2214  
               __ptext43 2B00                 __ptext35 3706                 __ptext27 406A  
               __ptext19 31DE                 __ptext44 3F9E                 __ptext36 337E  
               __ptext28 3CC6                 __ptext37 4092                 __ptext29 3BB0  
               __ptext38 3D1E                 __ptext39 3844         __size_of_isupper 0032  
    __end_of_TMR0handler 3FD6             _SSP1CON1bits 000FC6                 _dispTemp 3E9A  
    __end_of_TMR1handler 3A70         __size_of_sprintf 0058         __size_of_tolower 004E  
             strcpy@dest 0070         __size_of_strncmp 00B0            __size_of_atoi 0158  
          __size_of_main 03EA                 efgtoa@fp 00AB                 efgtoa@ne 019C  
               efgtoa@pp 0198                 efgtoa@ou 0186       TMR1handler@VperBin 0065  
          DisplayV@count 0073                 int$flags 0047                 dispPot@i 0084  
               _vfprintf 3C14             _SSP1STATbits 000FC7           _vfpfcnvrt$1402 00C3  
         _vfpfcnvrt$1398 00C1               _INTCONbits 000FF2                 isdigit@c 0070  
               intlevel1 0000                 intlevel2 0000                sprintf@ap 00D7  
            ??_sendChars 0076                 isspace@c 0070                strcpy@src 0072  
             _RCSTA1bits 000FAB             DisplayC@temp 007C                 isupper@c 0070  
     __end_of_testString 1014                strncmp@_l 0070                strncmp@_r 0072  
            efgtoa@nmode 01A4            _commandString 017A              ??_vfpfcnvrt 00BD  
            _temperature 010E              _TMR0handler 3F9E                 sprintf@f 00D9  
               tolower@c 0076                 sprintf@s 01BE              _TMR1handler 39EC  
 __size_of___fpclassifyf 00CE                 strncmp@l 0077                 strncmp@n 0074  
               strncmp@r 0079             _USART_BUFFER 0100            ___fladd@signs 007C  
           ___fladd@aexp 007D             ___fladd@bexp 007E     __end_of_checkCommand 3D1E  
